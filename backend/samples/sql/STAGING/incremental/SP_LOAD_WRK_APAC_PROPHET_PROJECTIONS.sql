SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_LOAD_WRK_APAC_PROPHET_PROJECTIONS;

CREATE OR REPLACE PROCEDURE SP_LOAD_WRK_APAC_PROPHET_PROJECTIONS (BIGINT,CHARACTER VARYING(64),CHARACTER VARYING(64),CHARACTER VARYING(64),CHARACTER VARYING(64)) RETURNS INTEGER 
LANGUAGE nzplsql AS 
BEGIN_PROC 

DECLARE 
    P_REQUEST_ID            ALIAS FOR $1;
    P_SRC_SCHEMA            ALIAS FOR $2;
    P_SRC_TABLE             ALIAS FOR $3;
    P_TRG_SCHEMA            ALIAS FOR $4;
    P_TRG_TABLE             ALIAS FOR $5;
    L_ERR_CD                CHAR(5);
    L_ERR_MSG               VARCHAR(32000);
    V_REC                   RECORD;
    V_DELETE_QUERY          VARCHAR(32000);
    V_INSERT_QUERY          VARCHAR(32000);

BEGIN
SET ISOLATION TO UR;

V_DELETE_QUERY := 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' WHERE REQUEST_ID =' || P_REQUEST_ID || ' ';

V_INSERT_QUERY :=  'INSERT INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || '
(   JOIN_KEY,
    PRODUCT,
    CONTRACT_NUMBER,
    SECTION_NUMBER,
    ASSUMED_CONTRACT_NUMBER,
    ASSUMED_SECTION_NUMBER,
    RUN_NUMBER,
    AOC_STEP,
    SENSITIVITY_TYPE,
    SENSITIVITY_VALUE,
    SPCODE,
    POLICY_UWY,
    BUSINESS_MATURITY,
    NEW_BUSINESS,
    CLOSING_DATE,
    P_PERIOD,
    P_TIME,
    REPORTING_BASIS,
    CURRENCY,
    PREM_WRITTEN,
    CLAIMS_INCURRED,
    CLAIMS_FROM_IBNP,
    COLLATERAL_COST,
    TOT_COMM,
    FIN_COMM,
    FIN_BROK_FEE,
    RETRO_OVERRIDE_COMM,
    PS_TOTAL_ALLOCATION,
    DEP_MATH_RES_IF,
    DEP_UNEARN_PREM_RES_IF,
    DEP_INC_RISK_RES_IF,
    NDEP_MATH_RES_IF,
    NDEP_UNEARN_PREM_RES_IF,
    NDEP_INC_RISK_RES_IF,
    DEP_IBNP_RES_IF,
    NDEP_IBNP_RES_IF,
    DAC_IF,
    RES_DEPINT,
    RES_NONDEPINT,
    TOT_REN_EXP,
    TOT_ACQ_EXP,
    TOT_INV_EXP,
    TAX,
    SUM_ASSD_IF,
    VOBA,
    PV_PS_TOTAL_ALLOCATION,
    PREM_TAX,
    PREM_REFUND,
    INIT_COMM,
    COMM_CLAWBACK,
    REN_COMM,
    REN_EXP_ATTRIBUTABLE,
    ACQ_EXP_ATTRIBUTABLE,
    INV_EXP_ATTRIBUTABLE,
    CLAIM_EXP_ATTRIBUTABLE,
    REN_EXP_NONATTRIBUTABLE,
    ACQ_EXP_NONATTRIBUTABLE,
    INV_EXP_NONATTRIBUTABLE,
    CLAIM_EXP_NONATTRIBUTABLE,
    COVERAGE_UNITS,
    CREATED_BY,
    CREATED_DATE,
    LINE_NUMBER,
    REQUEST_ID)
SELECT
    JOINKEY,
    PRODUCT,
    OMEGA_TREATY_NUMBER         AS CONTRACT_NUMBER,
    OMEGA_SECTION               AS SECTION_NUMBER,
    CASE WHEN LENGTH(GROSS_ASSUMED_OMEGA_TREATY_NUMBER) > 0 THEN GROSS_ASSUMED_OMEGA_TREATY_NUMBER END  AS ASSUMED_CONTRACT_NUMBER,
    CASE WHEN LENGTH(GROSS_ASSUMED_OMEGA_SECTION) > 0 THEN GROSS_ASSUMED_OMEGA_SECTION END AS ASSUMED_SECTION_NUMBER ,
    RUNNUMBER,
    AOCSTEP,
    SENSITIVITYTYPE,
    CAST(SENSITIVITYVALUE AS DECIMAL(10,6)),
    SPCODE,
    CASE WHEN LENGTH(POLICYUWY) > 0 THEN CAST(POLICYUWY AS SMALLINT) END AS POLICY_UWY ,
    BUSINESSMATURITY,
    NEWBUSINESS ,
    TO_DATE(CLOSINGDATE,''DD/MM/YYYY''),
    P_PERIOD,    
    TO_DATE(P_TIME,''DD/MM/YYYY''),
    REPORTINGBASIS,
    CURRENCY,
    CAST(PREM_WRITTEN AS DECFLOAT),
    CAST(CLAIMS_INCURRED AS DECFLOAT),
    CAST(CLAIMS_FROM_IBNP AS DECFLOAT),
    CAST(COLLATERAL_COST AS DECFLOAT),
    CAST(TOT_COMM AS DECFLOAT),
    CAST(FIN_COMM AS DECFLOAT),
    CAST(FIN_BROK_FEE AS DECFLOAT),
    CAST(RETRO_OVERRIDE_COMM AS DECFLOAT),
    CAST(PS_TOTAL_ALLOCATION AS DECFLOAT),
    CAST(DEP_MATH_RES_IF AS DECFLOAT),
    CAST(DEP_UNEARN_PREM_RES_IF AS DECFLOAT),
    CAST(DEP_INC_RISK_RES_IF AS DECFLOAT),
    CAST(NDEP_MATH_RES_IF AS DECFLOAT),
    CAST(NDEP_UNEARN_PREM_RES_IF AS DECFLOAT),
    CAST(NDEP_INC_RISK_RES_IF AS DECFLOAT),
    CAST(DEP_IBNP_RES_IF AS DECFLOAT),
    CAST(NDEP_IBNP_RES_IF AS DECFLOAT),
    CAST(DAC_IF AS DECFLOAT),
    CAST(RES_DEPINT AS DECFLOAT),
    CAST(RES_NONDEPINT AS DECFLOAT),
    CAST(TOT_REN_EXP AS DECFLOAT),
    CAST(TOT_ACQ_EXP AS DECFLOAT),
    CAST(TOT_INV_EXP AS DECFLOAT),
    CAST(TAX AS DECFLOAT),
    CAST(SUM_ASSD_IF AS DECFLOAT),
    CAST(VOBA AS DECFLOAT),
    CAST(PV_PS_TOTAL_ALLOCATION AS DECFLOAT),
    CAST(PREM_TAX AS DECFLOAT),
    CAST(PREM_REFUND AS DECFLOAT),
    CAST(INIT_COMM AS DECFLOAT),
    CAST(COMM_CLAWBACK AS DECFLOAT),
    CAST(REN_COMM AS DECFLOAT),
    CAST(REN_EXP_ATTRIBUTABLE AS DECFLOAT),
    CAST(ACQ_EXP_ATTRIBUTABLE AS DECFLOAT),
    CAST(INV_EXP_ATTRIBUTABLE AS DECFLOAT),
    CAST(CLAIM_EXP_ATTRIBUTABLE AS DECFLOAT),
    CAST(REN_EXP_NONATTRIBUTABLE AS DECFLOAT),
    CAST(ACQ_EXP_NONATTRIBUTABLE AS DECFLOAT),
    CAST(INV_EXP_NONATTRIBUTABLE AS DECFLOAT),
    CAST(CLAIM_EXP_NONATTRIBUTABLE AS DECFLOAT),
    CAST(COVERAGE_UNITS AS DECFLOAT),
    ''APAC PROPHET''        AS CREATED_BY,
    CURRENT_TIMESTAMP       AS CREATED_DATE,
    LINE_NUMBER,
    ' || P_REQUEST_ID || '  AS REQUEST_ID
FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' STG
';

RAISE NOTICE 'Executing V_DELETE_QUERY: ''%''',V_DELETE_QUERY; 
EXECUTE IMMEDIATE V_DELETE_QUERY; 

RAISE NOTICE 'Executing V_INSERT_QUERY: ''%''',V_INSERT_QUERY;
EXECUTE IMMEDIATE V_INSERT_QUERY;

EXCEPTION WHEN OTHERS THEN L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
	L_ERR_MSG := SQLERRM; 
	RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
	RETURN L_ERR_CD; 
 
END; 

END_PROC;