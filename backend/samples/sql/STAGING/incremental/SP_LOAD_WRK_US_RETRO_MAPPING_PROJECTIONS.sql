SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_LOAD_WRK_US_RETRO_MAPPING_PROJECTIONS;

CREATE OR REPLACE PROCEDURE SP_LOAD_WRK_US_RETRO_MAPPING_PROJECTIONS(
	BIGINT,
	CHARACTER VARYING(50),
	CHARACTER VARYING(50),
	CHARACTER VARYING(50),
	CHARACTER VARYING(50)
)
RETURNS INTEGER 
LANGUAGE NZPLSQL
AS BEGIN_PROC 

DECLARE
	P_REQUEST_ID   ALIAS FOR $1;
    P_SRC_SCHEMA   ALIAS FOR $2;
    P_SRC_TABLE	   ALIAS FOR $3;
    P_TRG_SCHEMA   ALIAS FOR $4;
    P_TRG_TABLE	   ALIAS FOR $5;
	V_INS_SQL      VARCHAR(ANY);
	V_DELETE_QUERY VARCHAR(ANY);
	V_RUNSTAT		VARCHAR(ANY);
	L_ERR_CD       CHAR(5);
	L_ERR_MSG      VARCHAR(32000);

BEGIN

V_DELETE_QUERY := 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' WHERE REQUEST_ID =' || P_REQUEST_ID || ' ';

V_INS_SQL := 'INSERT INTO '|| P_TRG_SCHEMA || '.' || P_TRG_TABLE || '
(
	AOC_STEP_STEPS,
	A_R,
	FREQUENCY,
	CLOSING_DATE,
	BUSINESS_MATURITY_CODE,
	SENSITIVITY_TYPE,
	SENSITIVITY_VOLUME,
	PROJECTION_MONTH,
	PROJECTION_YEAR,
	NEW_BUSINESS_IND,
	PREMIUMS,
	SURRENDERS,
	CLAIMS,
	COMMISSIONS,
	PROFIT_COMMISSIONS,
	CLAIM_PAYMENTS_FROM_EXISTING_IBNP_RESERVES,
	SUM_ASSURED,
	RISK_ADJUSTED_SUM_ASSURED,
	PLT_NO_POLS_IF,
	PLT_PREMIUMS,
	PLT_SURRENDERS,
	PLT_CLAIMS,
	PLT_COMMISSION,
	PLT_SUM_ASSURED,
	MAINTENANCE_EXPENSES,
	MAINTENANCE_EXPENSES_EUR,
	IFRS17_ATTRIBUTABLE_EXPENSES,
	IFRS17_ATTRIBUTABLE_EXPENSES_EUR,
	IFRS17_NON_ATTRIBUTABLE_EXPENSES,
	IFRS17_NON_ATTRIBUTABLE_EXPENSES_EUR,
	TOTAL_INFLATION,
	MAINTENANCE_EXPENSES_NO_INFLATION,
	ACQUISITION_EXPENSES,
	OTHER_INCOMING_CONTRACTUAL_CASHFLOWS,
	OTHER_OUTGOING_CONTRACTUAL_CASHFLOWS,
	INITIAL_COMMISSION,
	RENEWAL_COMMISSION,
	DEPOSITED_IBNP_RESERVES,
	DEPOSITED_MATHEMATICAL_RESERVES,
	NON_DEPOSITED_IBNP_RESERVES,
	NON_DEPOSITED_MATHEMATICAL_RESERVES,
	US_STATUTORY_RESERVE,
	TAX_RESERVE,
	US_GAAP_RESERVE_BENEFIT,
	US_GAAP_RESERVE_DAC,
	IFRS_RESERVE_BENEFIT,
	IFRS_RESERVE_DAC,
	DAC,
	COLLATERAL_COSTS,
	REQUIRED_CAPITAL,
	NON_HEDGEABLE_RISK_BASED_CAPITAL,
	NET_INVESTMENT_INCOME,
	INVESTMENT_EXPENSES,
	INTEREST_ON_DEPOSITS,
	INTEREST_ON_INVESTMENTS_BACKING_RESERVES_AND_DAC,
	TAX,
	TAX_EUR,
    COVERAGE_UNITS,
	CREATED_BY,
	CREATED_DATE,
	LINE_NUMBER,
	REQUEST_ID,
	PRODUCT,
	OMEGA_TREATY_NUMBER,
	OMEGA_SECTION_NUMBER,
	RETRO_OMEGA_TREATY_NUMBER,
	RETRO_OMEGA_SECTION_NUMBER,
	SPCODE,
	LE_HOP,
	LE,
	RETCTR_NF_LVL1,
	RETSEC_NF_LVL1,
	CTR_NF_LVL1,
	SEC_NF_LVL1,
	RETCTR_NF_LVL2,
	RETSEC_NF_LVL2,
	CTR_NF_LVL2,
	SEC_NF_LVL2,
	RETCTR_NF_LVL3,
	RETSEC_NF_LVL3,
	CTR_NF_LVL3,
	SEC_NF_LVL3,
	RETCTR_NF_LVL4,
	RETSEC_NF_LVL4,
	CTR_NF_LVL4,
	SEC_NF_LVL4,
	ASSUMED_FROM,
	SPLIT,
	NDIC_ACTUAL,
	NDIC_ESTIMATED		
)
SELECT 
	AOC_STEP_STEPS,
	A_R,
	FREQUENCY,
	CLOSING_DATE,
	BUSINESS_MATURITY_CODE,
	SENSITIVITY_TYPE,
	SENSITIVITY_VOLUME,
	PROJECTION_MONTH,
	PROJECTION_YEAR,
	NEW_BUSINESS_IND,
	PREMIUMS,
	SURRENDERS,
	CLAIMS,
	COMMISSIONS,
	PROFIT_COMMISSIONS,
	CLAIM_PAYMENTS_FROM_EXISTING_IBNP_RESERVES,
	SUM_ASSURED,
	RISK_ADJUSTED_SUM_ASSURED,
	PLT_NO_POLS_IF,
	PLT_PREMIUMS,
	PLT_SURRENDERS,
	PLT_CLAIMS,
	PLT_COMMISSION,
	PLT_SUM_ASSURED,
	MAINTENANCE_EXPENSES,
	MAINTENANCE_EXPENSES_EUR,
	IFRS17_ATTRIBUTABLE_EXPENSES,
	IFRS17_ATTRIBUTABLE_EXPENSES_EUR,
	IFRS17_NON_ATTRIBUTABLE_EXPENSES,
	IFRS17_NON_ATTRIBUTABLE_EXPENSES_EUR,
	TOTAL_INFLATION,
	MAINTENANCE_EXPENSES_NO_INFLATION,
	ACQUISITION_EXPENSES,
	OTHER_INCOMING_CONTRACTUAL_CASHFLOWS,
	OTHER_OUTGOING_CONTRACTUAL_CASHFLOWS,
	INITIAL_COMMISSION,
	RENEWAL_COMMISSION,
	DEPOSITED_IBNP_RESERVES,
	DEPOSITED_MATHEMATICAL_RESERVES,
	NON_DEPOSITED_IBNP_RESERVES,
	NON_DEPOSITED_MATHEMATICAL_RESERVES,
	US_STATUTORY_RESERVE,
	TAX_RESERVE,
	US_GAAP_RESERVE_BENEFIT,
	US_GAAP_RESERVE_DAC,
	IFRS_RESERVE_BENEFIT,
	IFRS_RESERVE_DAC,
	DAC,
	COLLATERAL_COSTS,
	REQUIRED_CAPITAL,
	NON_HEDGEABLE_RISK_BASED_CAPITAL,
	NET_INVESTMENT_INCOME,
	INVESTMENT_EXPENSES,
	INTEREST_ON_DEPOSITS,
	INTEREST_ON_INVESTMENTS_BACKING_RESERVES_AND_DAC,
	TAX,
	TAX_EUR,
    COVERAGE_UNITS,
	CREATED_BY,
	CREATED_DATE,
	STG.LINE_NUMBER,
	STG.REQUEST_ID,
	PRODUCT,
	OMEGA_TREATY_NUMBER,
	OMEGA_SECTION_NUMBER,
	CASE 
		WHEN RETRO_OMEGA_TREATY_NUMBER <> '''' AND LE_HOP <> ''R0'' THEN
			CASE 
				WHEN LE_HOP IN (''A1'',''R1'') THEN 
    				CASE 
    					WHEN A_R = ''R'' THEN RET.RETCTR_NF_LVL1
	    	 			WHEN A_R = ''IA'' THEN RET.CTR_NF_LVL1 
		    		END 
				WHEN LE_HOP IN (''A2'',''R2'') THEN 
					CASE 
						WHEN A_R = ''R'' THEN RET.RETCTR_NF_LVL2
	    		 		WHEN A_R = ''IA'' THEN RET.CTR_NF_LVL2 
					END
				WHEN LE_HOP IN (''A3'',''R3'') THEN 
   					CASE 
   						WHEN A_R = ''R'' THEN RET.RETCTR_NF_LVL3
                 		WHEN A_R = ''IA'' THEN RET.CTR_NF_LVL3 
            		END
				WHEN LE_HOP IN (''A4'',''R4'') THEN 
   	    			CASE 
   	    				WHEN A_R = ''R'' THEN RET.RETCTR_NF_LVL4
        		 		WHEN A_R = ''IA'' THEN RET.CTR_NF_LVL4 
    				END
			END
		ELSE RETRO_OMEGA_TREATY_NUMBER 
	END RETRO_OMEGA_TREATY_NUMBER,
	CASE 
		WHEN RETRO_OMEGA_SECTION_NUMBER IS NOT NULL AND LE_HOP <> ''R0'' THEN
			CASE 
				WHEN LE_HOP IN (''A1'',''R1'') THEN 
        			CASE 
        				WHEN A_R = ''R'' THEN RET.RETSEC_NF_LVL1
        		 		WHEN A_R = ''IA'' THEN RET.SEC_NF_LVL1 
    	    		END 
				WHEN LE_HOP IN (''A2'',''R2'') THEN 
					CASE 
   						WHEN A_R = ''R'' THEN RET.RETSEC_NF_LVL2
        		 		WHEN A_R = ''IA'' THEN RET.SEC_NF_LVL2 
		    		END
				WHEN LE_HOP IN (''A3'',''R3'') THEN 
   					CASE 
						WHEN A_R = ''R'' THEN RET.RETSEC_NF_LVL3
        		 		WHEN A_R = ''IA'' THEN RET.SEC_NF_LVL3 
	        		END
				WHEN LE_HOP IN (''A4'',''R4'') THEN 
   					CASE 
   						WHEN A_R = ''R'' THEN RET.RETSEC_NF_LVL4
        		 		WHEN A_R = ''IA'' THEN RET.SEC_NF_LVL4 
    				END
 			END
		ELSE RETRO_OMEGA_SECTION_NUMBER 
	END RETRO_OMEGA_SECTION_NUMBER,
	SPCODE,
	LE_HOP,
	LE,
	RETCTR_NF_LVL1,
	RETSEC_NF_LVL1,
	CTR_NF_LVL1,
	SEC_NF_LVL1,
	RETCTR_NF_LVL2,
	RETSEC_NF_LVL2,
	CTR_NF_LVL2,
	SEC_NF_LVL2,
	RETCTR_NF_LVL3,
	RETSEC_NF_LVL3,
	CTR_NF_LVL3,
	SEC_NF_LVL3,
	RETCTR_NF_LVL4,
	RETSEC_NF_LVL4,
	CTR_NF_LVL4,
	SEC_NF_LVL4,
	ASSUMED_FROM,
	SPLIT,
	NDIC_ACTUAL,
	NDIC_ESTIMATED		
FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' STG 
LEFT OUTER JOIN 
	(
		SELECT 
			* 
		FROM 
			(
				SELECT 
					RETCTR_NF_LVL1,
					RETSEC_NF_LVL1,
					CTR_NF_LVL1,
					SEC_NF_LVL1,
					RETCTR_NF_LVL2,
					RETSEC_NF_LVL2,
					CTR_NF_LVL2,
					SEC_NF_LVL2,
					RETCTR_NF_LVL3,
					RETSEC_NF_LVL3,
					CTR_NF_LVL3,
					SEC_NF_LVL3,
					RETCTR_NF_LVL4,
					RETSEC_NF_LVL4,
					CTR_NF_LVL4,
					SEC_NF_LVL4,
					ROW_NUMBER() OVER (PARTITION BY RETCTR_NF_LVL1, RETSEC_NF_LVL1 
						ORDER BY RTY_NF_LVL1 DESC) rank1 
				FROM 
					BI_<env>.TWRETRO_LINKS_FINAL
			)
		WHERE 
			rank1 = 1
	) RET 
	ON RETRO_OMEGA_TREATY_NUMBER = RET.RETCTR_NF_LVL1 AND RETRO_OMEGA_SECTION_NUMBER = RET.RETSEC_NF_LVL1
LEFT OUTER JOIN 
	(
		SELECT DISTINCT
			ERROR_ROW,
			REQUEST_ID
		FROM 
			DELIVERY_<env>.UPLOAD_ERROR_LOG
	) ERR
	ON ERR.ERROR_ROW = STG.LINE_NUMBER AND ERR.REQUEST_ID = STG.REQUEST_ID
WHERE STG.REQUEST_ID = ' || P_REQUEST_ID || ' AND ERR.ERROR_ROW IS NULL

';

RAISE NOTICE 'Executing V_DELETE_QUERY: ''%''',V_DELETE_QUERY; 
EXECUTE IMMEDIATE V_DELETE_QUERY;

RAISE NOTICE 'Executing V_INS_SQL: ''%''',V_INS_SQL; 
EXECUTE IMMEDIATE V_INS_SQL;
		
RAISE NOTICE 'Calculating statistics';

EXECUTE IMMEDIATE 'CALL ADMIN_CMD(''   RUNSTATS ON TABLE '|| P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' ON ALL COLUMNS AND COLUMNS ((NEW_BUSINESS_IND, BUSINESS_MATURITY_CODE, FREQUENCY, SENSITIVITY_TYPE, AOC_STEP_STEPS, SPLIT)  ,(OMEGA_TREATY_NUMBER, OMEGA_SECTION_NUMBER), (RETRO_OMEGA_TREATY_NUMBER,RETRO_OMEGA_SECTION_NUMBER)) WITH DISTRIBUTION ON ALL COLUMNS SET PROFILE  '')';
		

EXCEPTION 
	WHEN OTHERS THEN
   		L_ERR_CD := SUBSTR(SQLERRM, 8, 5);
		L_ERR_MSG := SQLERRM;
		RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG;
		RETURN L_ERR_CD;
		
END

END_PROC;