SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_LOAD_FORPLAN_ADJUSTMENT_FACTOR;

CREATE OR REPLACE PROCEDURE SP_LOAD_FORPLAN_ADJUSTMENT_FACTOR(
	BIGINT,
	CHARACTER VARYING(64),
	CHARACTER VARYING(64),
	CHARACTER VARYING(64),
	CHARACTER VARYING(64),
	SMALLINT,
	SMALLINT
) 
RETURNS INTEGER
language nzplsql
AS
BEGIN_PROC

DECLARE
	P_REQUEST_ID        ALIAS FOR $1;
    P_SRC_SCHEMA        ALIAS FOR $2;
    P_SRC_TABLE         ALIAS FOR $3;
    P_TRG_SCHEMA        ALIAS FOR $4; 
    P_TRG_TABLE         ALIAS FOR $5;    
    P_FILEYEAR    	    ALIAS FOR $6;
	P_FILEQUARTER       ALIAS FOR $7;
	V_LOAD_WRK_TBL		VARCHAR(ANY);
	V_WRK_TBL		    VARCHAR(1000);
	L_ERR_CD		    CHAR(5);
	L_ERR_MSG		    VARCHAR(32000);

BEGIN
	SET ISOLATION TO UR;
	
	V_LOAD_WRK_TBL := 'INSERT INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' (
	    REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
	    FACTOR_TYPE_ID,
		FACTOR,
	    REQUEST_ID
	)
	SELECT
		rb.ID AS REPORTING_BASIS_ID,
		DATE(ADD_MONTHS(TO_DATE(''01/01/''||'|| P_FILEYEAR||',''DD/MM/YYYY''), '|| P_FILEQUARTER||' * 3) -1) AS CLOSING_DATE,
	    16 AS PARAMETER_TYPE_ID,
	    ''2'' AS SEGMENT_TYPE_ID,
	    CAST(LOB_N1 AS VARCHAR) AS SEGMENT_CODE,
	    CAST(NATURE AS CHAR) AS CONTRACT_NATURE_CODE,
	    NULL AS SUBSIDIARY_CODE,
	    NULL AS SUBLEDGER_CODE,
	    NULL AS LOB_CODE,
	    NULL AS DOMAIN_CODE,
	    NULL AS PLAN_CATEGORY_ID,
	    NULL AS UNDERWRITING_YEAR,
	    NULL AS CURRENCY_CODE,
	   	1 AS FACTOR_TYPE_ID,
		CAST(TRIM(REPLACE(PREMIUM,CHR(13),'''')) AS DOUBLE) AS FACTOR,
		' || P_REQUEST_ID || ' AS REQUEST_ID
	FROM
	    ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || '
	    INNER JOIN
			DWHD1_<env>.DWH_REPORTING_BASIS rb
			ON TRIM(UPPER(CAST(NORM AS VARCHAR))) = TRIM(UPPER(rb.CODE))
	UNION ALL
	SELECT
		rb.ID AS REPORTING_BASIS_ID,
		DATE(ADD_MONTHS(TO_DATE(''01/01/''||'|| P_FILEYEAR||',''DD/MM/YYYY''), '|| P_FILEQUARTER||' * 3) -1) AS CLOSING_DATE,
	    16 AS PARAMETER_TYPE_ID,
	    ''2'' AS SEGMENT_TYPE_ID,
	    CAST(LOB_N1 AS VARCHAR) AS SEGMENT_CODE,
	    CAST(NATURE AS CHAR) AS CONTRACT_NATURE_CODE,
	    NULL AS SUBSIDIARY_CODE,
	    NULL AS SUBLEDGER_CODE,
	    NULL AS LOB_CODE,
	    NULL AS DOMAIN_CODE,
	    NULL AS PLAN_CATEGORY_ID,
	    NULL AS UNDERWRITING_YEAR,
	    NULL AS CURRENCY_CODE,
	   	2 AS FACTOR_TYPE_ID,
		CAST(TRIM(REPLACE(RESERVES,CHR(13),'''')) AS DOUBLE) AS FACTOR,
		' || P_REQUEST_ID || ' AS REQUEST_ID
	FROM
	    ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || '
	    INNER JOIN
			DWHD1_<env>.DWH_REPORTING_BASIS rb
			ON TRIM(UPPER(CAST(NORM AS VARCHAR))) = TRIM(UPPER(rb.CODE))';
	
	EXECUTE IMMEDIATE 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' WHERE REQUEST_ID = ' || P_REQUEST_ID;

	RAISE NOTICE 'Executing V_LOAD_WRK_TBL: ''%''', V_LOAD_WRK_TBL;

	EXECUTE IMMEDIATE V_LOAD_WRK_TBL;

EXCEPTION 
	WHEN OTHERS THEN 
		L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
		L_ERR_MSG := SQLERRM; 
		RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
		RETURN L_ERR_CD;

END;

END_PROC;