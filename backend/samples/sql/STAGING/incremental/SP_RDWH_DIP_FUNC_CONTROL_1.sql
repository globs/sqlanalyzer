SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_DIP_FUNC_CONTROL_1;

CREATE OR REPLACE PROCEDURE SP_DIP_FUNC_CONTROL_1
( 
CHARACTER VARYING(20),
CHARACTER VARYING(50),
CHARACTER VARYING(50),
CHARACTER VARYING(50),
CHARACTER VARYING(50),
CHARACTER VARYING(50),
CHARACTER VARYING(50),
CHARACTER VARYING(50),
CHARACTER VARYING(50),
CHARACTER VARYING(50),
CHARACTER VARYING(50),
CHARACTER VARYING(50),
CHARACTER VARYING(50) 
) 
RETURNS INTEGER
LANGUAGE NZPLSQL 
AS BEGIN_PROC

DECLARE 
P_REQ_ID ALIAS FOR $1;
P_SRC_REF_NAME ALIAS FOR $2;
P_CLOSING_DATE ALIAS FOR $3;
P_STG_SCHEMA ALIAS FOR $4;
P_REF_SCHEMA ALIAS FOR $5;
P_DLV_SCHEMA ALIAS FOR $6;
P_WRK_TBL ALIAS FOR $7;
P_ASSUMED_TBL ALIAS FOR $8;
P_RETRO_TBL1 ALIAS FOR $9;
P_RETRO_TBL2 ALIAS FOR $10;
P_DLV_TBL ALIAS FOR $11;
P_ERR_TBL ALIAS FOR $12;
P_WRK_REF_TBL ALIAS FOR $13;

V_REQ_ID VARCHAR(20);
V_SRC_REF_NAME VARCHAR(50);
V_CLOSING_DATE VARCHAR(50);
V_WRK_TBL VARCHAR(1000);
V_ASSUMED_TBL VARCHAR(1000);
V_GROSS_ASSUMED_TBL VARCHAR(1000);
V_RETRO_TBL1 VARCHAR(1000);
V_RETRO_TBL2 VARCHAR(1000);
V_STEP_1_TBL VARCHAR(1000);
V_INS_STEP1_TBL VARCHAR(ANY);
V_INS_SQL_UPLD_ERR_LOG_TBL VARCHAR(ANY);
V_WRK1_TBL VARCHAR(1000);
V_WRK2_TBL VARCHAR(1000);
V_INS_SQL_FUNC_CTRL_REF_TBL VARCHAR(ANY);

L_ERR_CD CHAR(5);
L_ERR_MSG VARCHAR(32000);

BEGIN
V_REQ_ID := UPPER(TRIM(P_REQ_ID));
V_SRC_REF_NAME := UPPER(TRIM(P_SRC_REF_NAME));
V_CLOSING_DATE := UPPER(TRIM(P_CLOSING_DATE));
V_WRK_TBL := 'CTRL1_WRK_' || P_REQ_ID;
V_ASSUMED_TBL := 'CTRL1_ASSUMED_' || P_REQ_ID;
V_GROSS_ASSUMED_TBL := 'CTRL1_GROSS_ASSUMED_' || P_REQ_ID;
V_RETRO_TBL1 := 'CTRL1_RETRO1_' || P_REQ_ID;
V_RETRO_TBL2 := 'CTRL1_RETRO2_' || P_REQ_ID;
V_STEP_1_TBL := 'CTRL1_STEP1_' || P_REQ_ID;
V_WRK1_TBL := 'CTRL1_WRK1_' || P_REQ_ID;
V_WRK2_TBL := 'CTRL1_WRK2_' || P_REQ_ID;

EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_WRK_TBL || ' IF EXISTS';
EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_ASSUMED_TBL || ' IF EXISTS';
EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_GROSS_ASSUMED_TBL || ' IF EXISTS';
EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_RETRO_TBL1 || ' IF EXISTS';
EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_RETRO_TBL2 || ' IF EXISTS';
EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_STEP_1_TBL || ' IF EXISTS';
EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_WRK_TBL || ' AS 
	(
	SELECT   
		CONTRACT_NUMBER,
		SECTION_NUMBER,
		ASSUMED_CONTRACT_NUMBER,
		ASSUMED_SECTION_NUMBER,													
		POLICY_UW_YEAR,
		LINE_NUMBER,
		REQUEST_ID,
		POSITION,
		SOURCE_REF_NAME,
		RANK1  
	FROM 
		(
		SELECT 
			CONTRACT_NUMBER,
			SECTION_NUMBER,
			ASSUMED_CONTRACT_NUMBER,
			ASSUMED_SECTION_NUMBER,													
		CASE 
		    WHEN 
			    POLICY_UW_YEAR IS NOT NULL THEN CAST(POLICY_UW_YEAR AS INT) 		 
			ELSE 
			    CAST(''9999'' AS INT) 		 
			END 
			POLICY_UW_YEAR,
			LINE_NUMBER,
			REQUEST_ID,
			UPPER(POSITION) POSITION,
			SOURCE_REF_NAME,
			ROW_NUMBER() OVER (PARTITION BY 
								LINE_NUMBER 
							ORDER BY 
								LINE_NUMBER 
			) RANK1 		 
		FROM 
			' || P_STG_SCHEMA || '.' || P_WRK_TBL || ' 		 
		WHERE 
			REQUEST_ID =  ' || V_REQ_ID || '
		) 
	WHERE 
	    RANK1 = 1
	) WITH NO DATA ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

EXECUTE IMMEDIATE 'INSERT INTO SESSION.' || V_WRK_TBL || '
	(
	SELECT   
		CONTRACT_NUMBER,
		SECTION_NUMBER,
		TRIM(ASSUMED_CONTRACT_NUMBER),
		ASSUMED_SECTION_NUMBER,												
		POLICY_UW_YEAR,
		LINE_NUMBER,
		REQUEST_ID,
		POSITION,
		SOURCE_REF_NAME,
		RANK1  
	FROM 
		(
		SELECT 
			CONTRACT_NUMBER,
			SECTION_NUMBER,
			ASSUMED_CONTRACT_NUMBER,
			ASSUMED_SECTION_NUMBER,												
		CASE 
		    WHEN 
			    POLICY_UW_YEAR IS NOT NULL THEN CAST(POLICY_UW_YEAR AS INT) 		 
			ELSE 
			    CAST(''9999'' AS INT) 		 
		END POLICY_UW_YEAR,
			LINE_NUMBER,
			REQUEST_ID,
			UPPER(POSITION) POSITION,
			SOURCE_REF_NAME,
			ROW_NUMBER() OVER (PARTITION BY 
								LINE_NUMBER 
							ORDER BY 
								LINE_NUMBER 
			) RANK1 		 
		FROM 			' || P_STG_SCHEMA || '.' || P_WRK_TBL || ' 		 
		WHERE 
			REQUEST_ID =  ' || V_REQ_ID || '
		) 
	WHERE 
	    RANK1 = 1
  )';

EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_ASSUMED_TBL || ' AS 
	( 
	SELECT 
		CTR_NF,
		SEC_NF,
		UWY_NF,
		LOB_CF,
		ACCADMTYP_CT,
		RANK2
	FROM 
		(
		SELECT 
			CTR_NF, 				
			SEC_NF,  
		CASE 
		    WHEN 
			    UWY_NF IS NOT NULL THEN CAST(UWY_NF AS INT) 				 
			ELSE 
			    CAST(''9999'' AS INT) 				 
		END UWY_NF,
			LOB_CF,
			ACCADMTYP_CT,				
			ROW_NUMBER() OVER(PARTITION BY  						 
								CTR_NF,						
								SEC_NF,						
								UWY_NF, 						
								LOB_CF,						
								ACCADMTYP_CT 				
							ORDER BY 						 
								CTR_NF, 						
								SEC_NF,						
								UWY_NF, 						
								LOB_CF, 						
								ACCADMTYP_CT 		
					    ) RANK2 		
		FROM 			' || P_REF_SCHEMA || '.' || P_ASSUMED_TBL || ' 		
			INNER JOIN SESSION.' || V_WRK_TBL || ' STG   		
				ON STG.CONTRACT_NUMBER = CTR_NF 		
				AND STG.SECTION_NUMBER = SEC_NF 		
		WHERE 
			LOB_CF IN (30,31) 		
			AND DATE(END_D) = DATE(''' || V_CLOSING_DATE || ''') 
		) 	
	WHERE 
	     RANK2 = 1
	) WITH NO DATA ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

EXECUTE IMMEDIATE 'INSERT INTO SESSION.' || V_ASSUMED_TBL || '
	(
	SELECT 
		CTR_NF,
		SEC_NF,
		UWY_NF,
		LOB_CF,
		ACCADMTYP_CT,
		RANK2 
	FROM 
		(
		SELECT 
			CTR_NF,				
			SEC_NF, 
		CASE 
		    WHEN 
				UWY_NF IS NOT NULL THEN CAST(UWY_NF AS INT) 				 
			ELSE 
				CAST(''9999'' AS INT) 				 
			END UWY_NF,
				LOB_CF,
				ACCADMTYP_CT, 				
				ROW_NUMBER() OVER(PARTITION BY  						 
							        CTR_NF,						
							        SEC_NF, 						
							        UWY_NF,						
							        LOB_CF,						
							        ACCADMTYP_CT 				
							    ORDER BY 						 
								    CTR_NF,						
								    SEC_NF, 						
								    UWY_NF, 						
								    LOB_CF,						
								    ACCADMTYP_CT 		
			 	)RANK2 		
		FROM 
			' || P_REF_SCHEMA || '.' || P_ASSUMED_TBL || ' 		
			INNER JOIN SESSION.' || V_WRK_TBL || ' STG   		
				ON STG.CONTRACT_NUMBER = CTR_NF 		
				AND STG.SECTION_NUMBER = SEC_NF 		
		WHERE 
			LOB_CF IN (30,31) 		
			AND DATE(END_D) = DATE(''' || V_CLOSING_DATE || ''') 
		) 	
	WHERE 
	     RANK2 = 1
	)';

EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_GROSS_ASSUMED_TBL || ' AS 
	( 
	SELECT 
		CTR_NF,
		SEC_NF,
		ASSUMED_CONTRACT_NUMBER,
		ASSUMED_SECTION_NUMBER,
		UWY_NF,
		LOB_CF,
		ACCADMTYP_CT,
		RANK5
	FROM 
		(
		SELECT 
			CTR_NF, 				
			SEC_NF,  
			ASSUMED_CONTRACT_NUMBER,
			ASSUMED_SECTION_NUMBER,
		CASE 
		    WHEN 
			    UWY_NF IS NOT NULL THEN CAST(UWY_NF AS INT) 				 
			ELSE 
			    CAST(''9999'' AS INT) 				 
		END UWY_NF,
			LOB_CF,
			ACCADMTYP_CT,				
			ROW_NUMBER() OVER(PARTITION BY  						 
								CTR_NF,						
								SEC_NF,						
								UWY_NF, 						
								LOB_CF,						
								ACCADMTYP_CT 				
							ORDER BY 						 
								CTR_NF, 						
								SEC_NF,						
								UWY_NF, 						
								LOB_CF, 						
								ACCADMTYP_CT 		
					    ) RANK5 		
		FROM 			' || P_REF_SCHEMA || '.' || P_ASSUMED_TBL || ' 		
			INNER JOIN SESSION.' || V_WRK_TBL || ' STG   		
				ON STG.ASSUMED_CONTRACT_NUMBER = CTR_NF 		
				AND STG.ASSUMED_SECTION_NUMBER = SEC_NF 		
		WHERE 
			LOB_CF IN (30,31) 		
			AND DATE(END_D) = DATE(''' || V_CLOSING_DATE || ''') 
		) 	
	WHERE 
	     RANK5 = 1
	) WITH NO DATA ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

EXECUTE IMMEDIATE 'INSERT INTO SESSION.' || V_GROSS_ASSUMED_TBL || '
	(
	SELECT 
		CTR_NF,
		SEC_NF,
		TRIM(ASSUMED_CONTRACT_NUMBER),
		ASSUMED_SECTION_NUMBER,
		UWY_NF,
		LOB_CF,
		ACCADMTYP_CT,
		RANK5 
	FROM 
		(
		SELECT 
			CTR_NF,				
			SEC_NF, 
			ASSUMED_CONTRACT_NUMBER,
			ASSUMED_SECTION_NUMBER,
		CASE 
		    WHEN 
				UWY_NF IS NOT NULL THEN CAST(UWY_NF AS INT) 				 
			ELSE 
				CAST(''9999'' AS INT) 				 
			END UWY_NF,
				LOB_CF,
				ACCADMTYP_CT, 				
				ROW_NUMBER() OVER(PARTITION BY  						 
							        CTR_NF,						
							        SEC_NF, 						
							        UWY_NF,						
							        LOB_CF,						
							        ACCADMTYP_CT 				
							    ORDER BY 						 
								    CTR_NF,						
								    SEC_NF, 						
								    UWY_NF, 						
								    LOB_CF,						
								    ACCADMTYP_CT 		
			 	)RANK5 		
		FROM 
			' || P_REF_SCHEMA || '.' || P_ASSUMED_TBL || ' 		
			INNER JOIN SESSION.' || V_WRK_TBL || ' STG   		
				ON TRIM(STG.ASSUMED_CONTRACT_NUMBER) = CTR_NF 		
				AND STG.ASSUMED_SECTION_NUMBER = SEC_NF 		
		WHERE 
			LOB_CF IN (30,31) 		
			AND DATE(END_D) = DATE(''' || V_CLOSING_DATE || ''') 
		) 	
	WHERE 
	     RANK5 = 1
	)';

EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_RETRO_TBL1 || ' AS
	( 
	SELECT 
		RETCTR_NF,
		RETSEC_NF,
		RTY_NF,
		RETACCTYP_CT,
		RANK3 
	FROM 
		(
		SELECT 
			T.RETCTR_NF,
			T.RETSEC_NF,
			T.RTY_NF,
			R.RETACCTYP_CT, 				
			ROW_NUMBER() OVER (PARTITION BY  						 
								T.RETCTR_NF, 						
								T.RETSEC_NF, 						
								T.RTY_NF, 						
								R.RETACCTYP_CT 				
							ORDER BY 						 
								T.RETCTR_NF, 						
								T.RETSEC_NF, 						
								T.RTY_NF, 						
								R.RETACCTYP_CT 				
			) RANK3 		
		FROM 			' || P_REF_SCHEMA || '.' || P_RETRO_TBL1 || ' T 		
			INNER JOIN ' || P_REF_SCHEMA || '.' || P_RETRO_TBL2 || ' R  		
				ON T.RETCTR_NF = R.RETCTR_NF 		
				AND T.RTY_NF = R.RTY_NF 		
			INNER JOIN SESSION.' || V_WRK_TBL || ' STG    		
				ON STG.CONTRACT_NUMBER = T.RETCTR_NF 		
				AND STG.SECTION_NUMBER = T.RETSEC_NF 		
		WHERE 			DATE(T.END_D) = DATE(''' || V_CLOSING_DATE || ''') 		
			AND T.LOB_CF IN (30 ,31) 
		) 
	WHERE 
	     RANK3 = 1
	)  WITH NO DATA ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

EXECUTE IMMEDIATE 'INSERT INTO SESSION.' || V_RETRO_TBL1 || '
	(
  SELECT 
		RETCTR_NF,
		RETSEC_NF,
		RTY_NF,
		RETACCTYP_CT,
		RANK3 
	FROM 
		(
		SELECT 
			T.RETCTR_NF,
			T.RETSEC_NF,
			T.RTY_NF,
			R.RETACCTYP_CT,				
			ROW_NUMBER() OVER (PARTITION BY  						 
								T.RETCTR_NF, 						
							    T.RETSEC_NF,						
							    T.RTY_NF, 						
							    R.RETACCTYP_CT				
							ORDER BY 						 
								T.RETCTR_NF, 						
								T.RETSEC_NF,						
								T.RTY_NF, 						
								R.RETACCTYP_CT 				
			) RANK3 		
		FROM  
			' || P_REF_SCHEMA || '.' || P_RETRO_TBL1 || ' T 		
			INNER JOIN 
		    ' || P_REF_SCHEMA || '.' || P_RETRO_TBL2 || ' R  		
				ON T.RETCTR_NF = R.RETCTR_NF 		
				AND T.RTY_NF = R.RTY_NF 		
			INNER JOIN SESSION.' || V_WRK_TBL || ' STG    		
				ON STG.CONTRACT_NUMBER = T.RETCTR_NF 		
				AND STG.SECTION_NUMBER = T.RETSEC_NF 		
		WHERE DATE(T.END_D) = DATE(''' || V_CLOSING_DATE || ''') 		
			AND T.LOB_CF IN (30 ,31) 
		) 
	WHERE 
	    RANK3 = 1
	) ';

EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_RETRO_TBL2 || ' AS
	(
	SELECT 
		RETCTR_NF, 			
		RETSEC_NF,			
		RTY_NF,RANK4	 
	FROM 
		( 		
		SELECT 			 
			RETCTR_NF, 			
			RETSEC_NF, 			
			RTY_NF,			 			
			ROW_NUMBER() OVER(PARTITION BY  
								RETCTR_NF, 			
								RETSEC_NF, 			
								RTY_NF 		
							ORDER BY 				 
								RETCTR_NF,				
								RETSEC_NF, 				
								RTY_NF 			
			) RANK4 		
		FROM 
			' || P_REF_SCHEMA || '.' || P_RETRO_TBL1 || ' T 		
			INNER JOIN SESSION.' || V_WRK_TBL || ' STG  		
				ON STG.CONTRACT_NUMBER = T.RETCTR_NF 		
				AND STG.SECTION_NUMBER = T.RETSEC_NF 		
		WHERE 
			DATE(T.END_D) = DATE(''' || V_CLOSING_DATE || ''') 		
			AND T.LOB_CF IN (30,31) 
		) 
	WHERE 
	    RANK4 = 1
	)  WITH NO DATA ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

EXECUTE IMMEDIATE 'INSERT INTO SESSION.' || V_RETRO_TBL2 || '
	(
	SELECT 
		RETCTR_NF, 			
		RETSEC_NF,			
		RTY_NF,RANK4	 
	FROM 
		( 		
		SELECT 			 
			RETCTR_NF, 			
			RETSEC_NF, 			
			RTY_NF,			 			
			ROW_NUMBER() OVER(PARTITION BY  			 
								RETCTR_NF, 			
								RETSEC_NF, 			
								RTY_NF 		
							ORDER BY 				 
								RETCTR_NF, 				
								RETSEC_NF, 				
								RTY_NF 			
			) RANK4 		
		FROM 
			' || P_REF_SCHEMA || '.' || P_RETRO_TBL1 || ' T 		
			INNER JOIN 
			SESSION.' || V_WRK_TBL || ' STG  		
				ON STG.CONTRACT_NUMBER = T.RETCTR_NF 		
				AND STG.SECTION_NUMBER = T.RETSEC_NF 		
		WHERE 
			DATE(T.END_D) = DATE(''' || V_CLOSING_DATE || ''') 		
			AND T.LOB_CF IN (30,31) 
		) 
	WHERE 
	    RANK4 = 1
	) ';

EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_STEP_1_TBL || '
	( 
		LINE_NUMBER BIGINT,		
		REQUEST_ID BIGINT, 		
		CONTRACT_NUMBER CHAR(9), 		
		SECTION_NUMBER INTEGER,            			
		POLICY_UW_YEAR VARCHAR(4), 		
		CONTROL_1 VARCHAR(100) 
	)ON COMMIT PRESERVE ROWS';

V_INS_STEP1_TBL := 'INSERT INTO SESSION.' || V_STEP_1_TBL || ' 
	(
	SELECT 		 
		STG.LINE_NUMBER, 		
		STG.REQUEST_ID,	
		STG.CONTRACT_NUMBER, 		
		STG.SECTION_NUMBER,					
		STG.POLICY_UW_YEAR, 		
		CASE 
		    WHEN 
			    TUW.CTR_NF IS NULL AND TUW.SEC_NF IS NULL AND RET1.RETCTR_NF IS NULL AND RET1.RETSEC_NF IS NULL 
			THEN 
				''T/S/UWY NOT FOUND IN OMEGA (LIFE T/S)''
			WHEN 
			    (TRIM(STG.ASSUMED_CONTRACT_NUMBER) IS NOT NULL AND TRIM(STG.ASSUMED_CONTRACT_NUMBER)  <>'''')  AND STG.ASSUMED_SECTION_NUMBER IS NULL 
			THEN 
			    ''GROSS ASSUMED SECTION NUMBER IS MISSING''
			WHEN 
			     (STG.ASSUMED_CONTRACT_NUMBER IS NULL OR TRIM(STG.ASSUMED_CONTRACT_NUMBER) = '''') AND STG.ASSUMED_SECTION_NUMBER IS NOT NULL  
			THEN 
			    ''GROSS ASSUMED TREATY NUMBER IS MISSING''					 
			WHEN 
			    (
					(TRIM(STG.ASSUMED_CONTRACT_NUMBER) <> TUW1.CTR_NF OR TUW1.CTR_NF IS NULL) 
                   OR 
					 (STG.ASSUMED_SECTION_NUMBER <> TUW1.SEC_NF OR TUW1.SEC_NF IS NULL)
				) 
				AND 
				((STG.ASSUMED_SECTION_NUMBER IS NOT NULL ) OR (STG.ASSUMED_CONTRACT_NUMBER IS NOT NULL AND TRIM(STG.ASSUMED_CONTRACT_NUMBER) <>'''')) 
			THEN ''GROSS ASSUMED T/S NOT FOUND IN OMEGA (LIFE T/S)''
		END 
		    CONTROL_1 		
	FROM 
	    SESSION.' || V_WRK_TBL || ' STG
		LEFT OUTER JOIN
			SESSION.' || V_ASSUMED_TBL || ' TUW   		
			ON STG.CONTRACT_NUMBER = TUW.CTR_NF 		
			AND STG.SECTION_NUMBER = TUW.SEC_NF	
	    LEFT OUTER JOIN 
          SESSION.' || V_GROSS_ASSUMED_TBL || ' TUW1   		
			ON TRIM(STG.ASSUMED_CONTRACT_NUMBER) = TUW1.CTR_NF 		
			AND STG.ASSUMED_SECTION_NUMBER = TUW1.SEC_NF 
    	LEFT OUTER JOIN 
		    SESSION.' || V_RETRO_TBL1 || ' RET   		
			ON STG.CONTRACT_NUMBER = RET.RETCTR_NF 		
			AND STG.SECTION_NUMBER = RET.RETSEC_NF
		LEFT OUTER JOIN 
		    SESSION.' || V_RETRO_TBL2 || ' RET1   		
			ON STG.CONTRACT_NUMBER = RET1.RETCTR_NF 		
			AND STG.SECTION_NUMBER = RET1.RETSEC_NF
 	) ';

EXECUTE IMMEDIATE V_INS_STEP1_TBL;
V_INS_SQL_UPLD_ERR_LOG_TBL := 'INSERT INTO ' || P_DLV_SCHEMA || '.' || P_DLV_TBL || '
	(
		ERROR_ROW,
		REQUEST_ID,
		ERROR_MESSAGE_ID
	) 
	SELECT  		 
		T.LINE_NUMBER,		
		T.REQUEST_ID,		
		E.ERROR_MESSAGE_ID  
	FROM  
	( 		
	SELECT 				 
		CONTRACT_NUMBER, 				
	    SECTION_NUMBER,			
		LINE_NUMBER, 				
		REQUEST_ID, 				
		CONTROL_1 		
	FROM 
	    SESSION.' || V_STEP_1_TBL || '  		
	WHERE 
	    POLICY_UW_YEAR = 9999 		
		AND CONTROL_1 IS NOT NULL 		
	GROUP BY 				 
		CONTRACT_NUMBER, 				
		SECTION_NUMBER, 				
		LINE_NUMBER, 				
		REQUEST_ID, 				
		CONTROL_1 		
	UNION 		
	SELECT 				 
		T1.CONTRACT_NUMBER, 				
		T1.SECTION_NUMBER, 				
		T1.LINE_NUMBER,				
		T1.REQUEST_ID, 				
		CONTROL_1 		
	FROM 		
	( 				
		SELECT 						 
			CONTRACT_NUMBER,						
			SECTION_NUMBER,					
			REQUEST_ID, 						
			LINE_NUMBER 				
	    FROM 
			SESSION.' || V_STEP_1_TBL || '  				
		WHERE 
			CONTROL_1 IS NOT NULL 				
			AND POLICY_UW_YEAR <> 9999
	MINUS
	SELECT 						 
		CONTRACT_NUMBER, 						
		SECTION_NUMBER, 						
		REQUEST_ID, 						
		LINE_NUMBER 				
	FROM 
	    SESSION.' || V_STEP_1_TBL || ' 				
	WHERE 
	     CONTROL_1 IS NULL 				
		 AND POLICY_UW_YEAR <> 9999	
	) T1 		
   	INNER JOIN SESSION.' || V_STEP_1_TBL || ' T2  		
		     ON T1.LINE_NUMBER = T2.LINE_NUMBER 
	) T  
	     INNER JOIN ' || P_DLV_SCHEMA || '.' || P_ERR_TBL || ' E  
		     ON T.CONTROL_1=UPPER(E.ERROR_MESSAGE_LABEL)';

RAISE NOTICE 'Executing 1st  SQL Query Block.';
EXECUTE IMMEDIATE V_INS_SQL_UPLD_ERR_LOG_TBL;
EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_WRK1_TBL || ' IF EXISTS';
EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_WRK2_TBL || ' IF EXISTS';
EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_WRK1_TBL || ' AS 
	(			  
	SELECT  
		CONTRACT_NUMBER,            
		SECTION_NUMBER,						
		LINE_NUMBER 
	FROM 
	    ' || P_STG_SCHEMA || '.' || P_WRK_TBL || ' 
	WHERE 
	    REQUEST_ID = ' || V_REQ_ID || ' 
		AND LINE_NUMBER IN 
		( 									
		SELECT 
			ERROR_ROW 									
		FROM ' || P_DLV_SCHEMA || '.' || P_DLV_TBL || ' 									
		WHERE 
			REQUEST_ID = ' || V_REQ_ID || ' 
			AND ERROR_MESSAGE_ID IN (8,26) 							
		) 
	GROUP BY 			
		CONTRACT_NUMBER, 			
		SECTION_NUMBER, 			
		LINE_NUMBER 
	) WITH NO DATA ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

EXECUTE IMMEDIATE 'INSERT INTO SESSION.' || V_WRK1_TBL || '
	(
	SELECT  
		CONTRACT_NUMBER,            
		SECTION_NUMBER,						
		LINE_NUMBER 
	FROM 
	    ' || P_STG_SCHEMA || '.' || P_WRK_TBL || ' 
	WHERE 
	    REQUEST_ID = ' || V_REQ_ID || ' 
		AND LINE_NUMBER IN 
		( 									
		SELECT 
			ERROR_ROW 									
		FROM ' || P_DLV_SCHEMA || '.' || P_DLV_TBL || ' 									
		WHERE 
			REQUEST_ID = ' || V_REQ_ID || ' 
			AND ERROR_MESSAGE_ID IN (8,26) 							
		) 
	GROUP BY 			
		CONTRACT_NUMBER, 			
		SECTION_NUMBER, 			
		LINE_NUMBER 
	)';

EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_WRK2_TBL || ' AS 
	(			  
	SELECT            
		CONTRACT_NUMBER,            
		SECTION_NUMBER, 							
		LINE_NUMBER 
	FROM 
	    ' || P_STG_SCHEMA || '.' || P_WRK_TBL || ' 
	WHERE              
		REQUEST_ID =  ' || V_REQ_ID || ' 
	GROUP BY 
		CONTRACT_NUMBER,
		SECTION_NUMBER,
		LINE_NUMBER 
	) WITH  NO DATA ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

EXECUTE IMMEDIATE 'INSERT INTO SESSION.' || V_WRK2_TBL || '
	(
	SELECT            
		CONTRACT_NUMBER,            
		SECTION_NUMBER, 							
		LINE_NUMBER 
	FROM 
	    ' || P_STG_SCHEMA || '.' || P_WRK_TBL || ' 
	WHERE              
		REQUEST_ID =  ' || V_REQ_ID || ' 
	GROUP BY 
		CONTRACT_NUMBER,
		SECTION_NUMBER,
		LINE_NUMBER 
	)';

EXECUTE IMMEDIATE 'DELETE FROM ' || P_STG_SCHEMA || '.' || P_WRK_REF_TBL || ' WHERE REQUEST_ID = ' || V_REQ_ID;

V_INS_SQL_FUNC_CTRL_REF_TBL := 'INSERT INTO ' || P_STG_SCHEMA || '.' || P_WRK_REF_TBL || '
	(
		ERROR_ROW,
		REQUEST_ID
	) 
	( 	
	SELECT 
		LINE_NUMBER
		,' || V_REQ_ID || ' 
	FROM 
		( 					
		SELECT 
			WT.CONTRACT_NUMBER,												
			WT.SECTION_NUMBER, 												
			WT.LINE_NUMBER  												
		FROM 
	    SESSION.' || V_WRK2_TBL || ' WT 					
		WHERE EXISTS 
			( 								
			SELECT 1  								
			FROM 
			SESSION.' || V_WRK1_TBL || ' W 								
			WHERE 
				W.SECTION_NUMBER=WT.SECTION_NUMBER 								
				AND  W.CONTRACT_NUMBER=WT.CONTRACT_NUMBER 					
			) 		
		) 
	)';

RAISE NOTICE 'Executing 2nd  SQL Query Block.';
EXECUTE IMMEDIATE V_INS_SQL_FUNC_CTRL_REF_TBL;

EXCEPTION
	WHEN OTHERS THEN 
		L_ERR_CD := SUBSTR(SQLERRM,8,5);
		L_ERR_MSG := SQLERRM;
		RAISE EXCEPTION '% Error while executing SQL statement',L_ERR_MSG;
		RETURN L_ERR_CD;
END 
END_PROC;
