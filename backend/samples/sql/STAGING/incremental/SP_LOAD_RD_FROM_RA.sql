SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_LOAD_RD_FROM_RA;

CREATE OR REPLACE PROCEDURE SP_LOAD_RD_FROM_RA (
	BIGINT,
	CHARACTER VARYING(64),
	CHARACTER VARYING(64),
	CHARACTER VARYING(64),
	CHARACTER VARYING(64)
) 
RETURNS INTEGER
language nzplsql
AS
BEGIN_PROC

DECLARE
	P_REQUEST_ID   ALIAS FOR $1;
    P_SRC_SCHEMA   ALIAS FOR $2;
    P_SRC_TABLE	   ALIAS FOR $3;
    P_TRG_SCHEMA   ALIAS FOR $4;
    P_TRG_TABLE	   ALIAS FOR $5;
	V_INS_SQL      VARCHAR(ANY);
	L_ERR_CD       CHAR(5);
	L_ERR_MSG      VARCHAR(32000);

BEGIN	

SET ISOLATION TO UR;
	
V_INS_SQL := 'INSERT INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' (
	    CONTRACT_NUMBER,
		SECTION_NUMBER,
		UNDERWRITING_YEAR,
		CALCULATED_POSITION_ID,
		LEVEL_OF_ANALYSIS_ID,
		REPORTING_BASIS_ID,
		CLOSING_DATE,
		ASSUMED_CONTRACT_NUMBER,
		ASSUMED_SECTION_NUMBER,
		PROJECTION_YEAR,
		PROJECTION_PERIOD,
		PERIOD_TYPE_ID,
		IS_PRESENT_VALUE,
		FACTOR,
		REQUEST_ID
	)
SELECT DISTINCT
		ra_omega.CONTRACT_NUMBER,
		ra_omega.SECTION_NUMBER,
		COALESCE(RD.UNDERWRITING_YEAR, ra_omega.UNDERWRITING_YEAR),
		ra_omega.CALCULATED_POSITION_ID,
		ra_omega.LEVEL_OF_ANALYSIS_ID,
		COALESCE(RD.REPORTING_BASIS_ID, ra_omega.REPORTING_BASIS_ID),
		ra_omega.CLOSING_DATE,
		RD.ASSUMED_CONTRACT_NUMBER,
		RD.ASSUMED_SECTION_NUMBER,
		ra_omega.PROJECTION_YEAR,
		ra_omega.PROJECTION_PERIOD,
		ra_omega.PERIOD_TYPE_ID,
		ra_omega.IS_PRESENT_VALUE,
		ra_omega.FACTOR,
		' || P_REQUEST_ID || ' AS REQUEST_ID
	FROM
		(
			SELECT
				TU.CTR_NF AS CONTRACT_NUMBER,
				TU.SEC_NF AS SECTION_NUMBER,
				TU.UWY_NF AS UNDERWRITING_YEAR,
				RA.CLOSING_DATE,
				RA.REPORTING_BASIS_ID,
				RA.LEVEL_OF_ANALYSIS_ID,
				RA.CALCULATED_POSITION_ID,
				RA.PROJECTION_YEAR,
				RA.PROJECTION_PERIOD,
				RA.PERIOD_TYPE_ID,
				RA.IS_PRESENT_VALUE,
				RA.FACTOR
			FROM
				' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' RA
				JOIN 
					(
						SELECT
							*
						FROM
							(
								SELECT
									CTR_NF,
									SEC_NF,
									UWY_NF,
									GAR_CF,
									LOB_CF,
									SSD_CF,
									ACCESB_CF,
									SOB_CF,
									TOP_CF,
									PCPRSKTRY_CF,
									LIFTRTTYP_CF,
									SUBMRK_NT,
									USGAAP_CT,
									ASSFINANCE_CT,
									ROW_NUMBER() OVER ( 
										PARTITION BY
											CTR_NF,
											SEC_NF
										ORDER BY
											CTR_NF,
											SEC_NF,
											UWY_NF
										DESC
									) MAX_UWY_NF
								FROM 
									BI_<env>.TUWSEC TU
								WHERE 
									LOB_CF IN (30,31)
									AND SECSTS_CT IN (14,16,19)
									AND SECACCSTS_CT NOT IN (9,8)
									AND BUSUNIT_LM IS NOT NULL
									AND DATE(SUPP_D) = ''9999-12-31'' 
									AND DATE(END_D) = ''9999-12-31''  
							)
						WHERE
							MAX_UWY_NF = 1 
					) TU
					ON TU.GAR_CF = RA.GUARANTEE_CODE 
					AND TU.LOB_CF = RA.LOB_CODE
					AND TU.SSD_CF = COALESCE((CASE WHEN TRIM(RA.SUBSIDIARY_CODE) = '''' THEN NULL ELSE RA.SUBSIDIARY_CODE END),TU.SSD_CF)
					AND TU.ACCESB_CF = COALESCE((CASE WHEN TRIM(RA.SUBLEDGER_CODE) = '''' THEN NULL ELSE RA.SUBLEDGER_CODE END),TU.ACCESB_CF)
					AND TU.SOB_CF = COALESCE((CASE WHEN TRIM(RA.SOB_CODE) = '''' THEN NULL ELSE RA.SOB_CODE END),TU.SOB_CF)
					AND TU.TOP_CF = COALESCE((CASE WHEN TRIM(RA.TOP_CODE) = '''' THEN NULL ELSE RA.TOP_CODE END),TU.TOP_CF)
					AND TU.PCPRSKTRY_CF = COALESCE((CASE WHEN TRIM(RA.COUNTRY_OF_RISK_CODE) = '''' THEN NULL ELSE RA.COUNTRY_OF_RISK_CODE END),TU.PCPRSKTRY_CF)
					AND TU.LIFTRTTYP_CF = COALESCE((CASE WHEN TRIM(RA.LIFE_TREATY_TYPE_CODE) = '''' THEN NULL ELSE RA.LIFE_TREATY_TYPE_CODE END),TU.LIFTRTTYP_CF)
					AND COALESCE((CASE WHEN TRIM(TU.SUBMRK_NT) = '''' THEN NULL ELSE TU.SUBMRK_NT END),''XX'') = COALESCE(COALESCE((CASE WHEN TRIM(RA.SEGMENT_CODE) = '''' THEN NULL ELSE RA.SEGMENT_CODE END),TU.SUBMRK_NT),''XX'')
					AND COALESCE((CASE WHEN LENGTH(TU.USGAAP_CT) = 0 THEN NULL ELSE TU.USGAAP_CT END),0) = COALESCE(COALESCE((CASE WHEN LENGTH(RA.USGAAP_CODE) = 0 THEN NULL ELSE RA.USGAAP_CODE END),TU.USGAAP_CT),0)
					AND COALESCE((CASE WHEN LENGTH(TU.ASSFINANCE_CT) = 0 THEN NULL ELSE TU.ASSFINANCE_CT END),0) = COALESCE(COALESCE((CASE WHEN LENGTH(RA.IAS39_CODE) = 0 THEN NULL ELSE RA.IAS39_CODE END),TU.ASSFINANCE_CT),0)
			WHERE
				RA.CREATED_REQUEST_ID = ' || P_REQUEST_ID || '
				OR RA.MODIFIED_REQUEST_ID = ' || P_REQUEST_ID || '
			UNION
			SELECT 
				TUR.RETCTR_NF AS CTR_NF, 
				TUR.RETSEC_NF AS SEC_NF,
				TUR.RTY_NF AS UNDERWRITING_YEAR,
				RA.CLOSING_DATE,
				RA.REPORTING_BASIS_ID,
				RA.LEVEL_OF_ANALYSIS_ID,
				RA.CALCULATED_POSITION_ID,
				RA.PROJECTION_YEAR,
				RA.PROJECTION_PERIOD,
				RA.PERIOD_TYPE_ID,
				RA.IS_PRESENT_VALUE,
				RA.FACTOR
			FROM
				' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' RA
				JOIN 
					(
						SELECT
							*
						FROM
							(
								SELECT
									RES.RETCTR_NF,
									RES.RETSEC_NF,
									RES.RTY_NF,
									RES.GAR_CF,
									RES.LOB_CF,
									RES.SSD_CF,
									RES.ESB_CF,
									RES.SOB_CF,
									RES.TOP_CF,
									RES.PCPRSKTRY_CF,
									RES.SUBMRK_NT,
									RES.USGAAP_CT,
									RES.ASSFINANCE_CT,
									ROW_NUMBER() OVER ( 
										PARTITION BY
											RES.RETCTR_NF,
											RES.RETSEC_NF
										ORDER BY
											RES.RETCTR_NF,
											RES.RETSEC_NF,
											RES.RTY_NF
										DESC
									) MAX_RTY_NF
								FROM 
									BI_<env>.TUWRETSEC RES
									JOIN 
										(
											SELECT 
												TURET.RETCTR_NF, TURET.RETSEC_NF, TURET.RTY_NF, TURET.SSD_CF, TURET.ESB_CF
											FROM 
												BI_<env>.TRETCTR TRET
												JOIN 
													BI_<env>.TUWRETSEC TURET
												ON	TRET.RETCTR_NF = TURET.RETCTR_NF
												AND TRET.RTY_NF = TURET.RTY_NF
												AND TRET.SSD_CF = TURET.SSD_CF
											WHERE 
												TRET.RETCTRSTS_CT IN (3,19)
												AND TURET.LOB_CF IN (30,31)
												AND TURET.LIFPRDLINR_LL IS NOT NULL
										) RETVLD
										ON RES.RETCTR_NF = RETVLD.RETCTR_NF
										AND RES.RETSEC_NF = RETVLD.RETSEC_NF
										AND RES.RTY_NF = RETVLD.RTY_NF
										AND RES.SSD_CF = RETVLD.SSD_CF
										AND RES.ESB_CF = RETVLD.ESB_CF
								WHERE 
									DATE(RES.SUPP_D) = ''9999-12-31'' 
									AND DATE(RES.END_D) = ''9999-12-31''
							)
						WHERE
							MAX_RTY_NF = 1
					) TUR
					ON TUR.GAR_CF = RA.GUARANTEE_CODE 
					AND TUR.LOB_CF = RA.LOB_CODE
					AND TUR.SSD_CF = COALESCE((CASE WHEN TRIM(RA.SUBSIDIARY_CODE) = '''' THEN NULL ELSE RA.SUBSIDIARY_CODE END),TUR.SSD_CF)
					AND TUR.ESB_CF = COALESCE((CASE WHEN TRIM(RA.SUBLEDGER_CODE) = '''' THEN NULL ELSE RA.SUBLEDGER_CODE END),TUR.ESB_CF)
					AND TUR.SOB_CF = COALESCE((CASE WHEN TRIM(RA.SOB_CODE) = '''' THEN NULL ELSE RA.SOB_CODE END),TUR.SOB_CF)
					AND TUR.TOP_CF = COALESCE((CASE WHEN TRIM(RA.TOP_CODE) = '''' THEN NULL ELSE RA.TOP_CODE END),TUR.TOP_CF)
					AND TUR.PCPRSKTRY_CF = COALESCE((CASE WHEN TRIM(RA.COUNTRY_OF_RISK_CODE) = '''' THEN NULL ELSE RA.COUNTRY_OF_RISK_CODE END),TUR.PCPRSKTRY_CF)
					AND COALESCE((CASE WHEN TRIM(TUR.SUBMRK_NT) = '''' THEN NULL ELSE TUR.SUBMRK_NT END),''XX'') = COALESCE(COALESCE((CASE WHEN TRIM(RA.SEGMENT_CODE) = '''' THEN NULL ELSE RA.SEGMENT_CODE END),TUR.SUBMRK_NT),''XX'')
					AND COALESCE((CASE WHEN LENGTH(TUR.USGAAP_CT) = 0 THEN NULL ELSE TUR.USGAAP_CT END),0) = COALESCE(COALESCE((CASE WHEN LENGTH(RA.USGAAP_CODE) = 0 THEN NULL ELSE RA.USGAAP_CODE END),TUR.USGAAP_CT),0)
					AND COALESCE((CASE WHEN LENGTH(TUR.ASSFINANCE_CT) = 0 THEN NULL ELSE TUR.ASSFINANCE_CT END),0) = COALESCE(COALESCE((CASE WHEN LENGTH(RA.IAS39_CODE) = 0 THEN NULL ELSE RA.IAS39_CODE END),TUR.ASSFINANCE_CT),0)
			WHERE
				RA.CREATED_REQUEST_ID = ' || P_REQUEST_ID || '
				OR RA.MODIFIED_REQUEST_ID = ' || P_REQUEST_ID || '
		) ra_omega
		JOIN
			BI_<env>.PROJECTION_ALLOCATION pa
			ON ra_omega.CONTRACT_NUMBER = pa.CONTRACT_NUMBER
	        AND ra_omega.SECTION_NUMBER = pa.SECTION_NUMBER
	        AND ra_omega.CLOSING_DATE = pa.CLOSING_DATE
	        AND ra_omega.REPORTING_BASIS_ID = pa.REPORTING_BASIS_ID
	        AND DATE(pa.VALID_TO) = ''9999-12-31''
			AND DATE(pa.SUPP_DATE) = ''9999-12-31''
			AND pa.ALLOCATION_STATUS_ID NOT IN (168, 171)
		LEFT JOIN
			BI_<env>.RD_FACTOR_PROJECTION RD
			ON ra_omega.CONTRACT_NUMBER = RD.CONTRACT_NUMBER
			AND ra_omega.SECTION_NUMBER = RD.SECTION_NUMBER';

EXECUTE IMMEDIATE 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' WHERE REQUEST_ID = ' || P_REQUEST_ID;

RAISE NOTICE 'Executing V_INS_SQL: ''%''', V_INS_SQL;

EXECUTE IMMEDIATE V_INS_SQL;

EXCEPTION 
	WHEN OTHERS THEN
   		L_ERR_CD := SUBSTR(SQLERRM, 8, 5);
		L_ERR_MSG := SQLERRM;
		RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG;
		RETURN L_ERR_CD;

END

END_PROC;