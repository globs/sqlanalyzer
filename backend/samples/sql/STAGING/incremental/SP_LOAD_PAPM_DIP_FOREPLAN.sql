SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_LOAD_PAPM_DIP_FOREPLAN ;

CREATE OR REPLACE PROCEDURE SP_LOAD_PAPM_DIP_FOREPLAN(
	BIGINT,
	CHARACTER VARYING(64),
	CHARACTER VARYING(64),
	CHARACTER VARYING(64),
	CHARACTER VARYING(64),
	SMALLINT,
	SMALLINT
) 
RETURNS INTEGER
LANGUAGE nzplsql
AS
BEGIN_PROC

DECLARE
    P_REQUEST_ID ALIAS FOR $1;
    P_SRC_SCHEMA ALIAS FOR $2;
    P_SRC_TABLE ALIAS FOR $3;
    P_TRG_SCHEMA ALIAS FOR $4;
    P_TRG_TABLE ALIAS FOR $5;
    P_FILEYEAR ALIAS FOR $6;
    P_FILEQUARTER ALIAS FOR $7;
    V_LOAD_DIP_FOREPLAN VARCHAR(ANY);
    L_ERR_CD CHAR(5);
    L_ERR_MSG VARCHAR(32000);

BEGIN
SET ISOLATION TO UR;

V_LOAD_DIP_FOREPLAN := 'INSERT INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' (
		UWY,
		GP_DIVISION,
		GEOGRAPHICAL_ZONE,
		NATURE,
		ACCOUNT,
		AMOUNT
	)
	SELECT 
		crc.UWY,
		GP_DIVISION,
		GEOGRAPHICAL_ZONE,
		NATURE,
		ACCOUNT,
		AMOUNT 
	FROM 
		(
			SELECT
				PR.activ2_cf AS GP_DIVISION,
				SEGMENT_CODE AS GEOGRAPHICAL_ZONE,
				CONTRACT_NATURE_CODE AS NATURE,
				''Acquisition_Ratio'' AS ACCOUNT,
				FACTOR AS AMOUNT
			FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || '
				LEFT OUTER JOIN 
					(	
						SELECT  
							TU.activ2_cf,
							TU.MRKUNT_NT 
						FROM 
							BI_<env>.TUWSEC TU
							JOIN BI_<env>.TESB TE ON TE.ssd_cf = TU.ssd_cf AND TE.esb_cf = TU.accesb_cf AND TE.life_cf = 2
						WHERE TU.end_d = ''9999-12-31-00.00.00.000000'' AND TU.supp_d = ''9999-12-31-00.00.00.000000''
						GROUP BY
							TU.activ2_cf,
							TU.MRKUNT_NT
					) pr
					ON SEGMENT_CODE = TO_CHAR(pr.MRKUNT_NT)
			WHERE 				(
					MODIFIED_REQUEST_ID = ' || P_REQUEST_ID || '
					OR ( CREATED_REQUEST_ID = ' || P_REQUEST_ID || '
						AND MODIFIED_REQUEST_ID IS NULL
					)
				)
				AND DELETED_REQUEST_ID IS NULL
				AND PARAMETER_TYPE_ID = 17
				AND FACTOR_TYPE_ID = 5
				AND VALID_TO = ''9999-12-31-00.00.00.000000''
				AND CLOSING_DATE = DATE(ADD_MONTHS(TO_DATE(''01/01/''||' || P_FILEYEAR || ',''DD/MM/YYYY''), ' || P_FILEQUARTER || ' * 3) - 1)
			UNION ALL
			SELECT
				PR.activ2_cf AS GP_DIVISION,
				SEGMENT_CODE AS GEOGRAPHICAL_ZONE,
				CONTRACT_NATURE_CODE AS NATURE,
				''Maintenance_Ratio'' AS Account,
				FACTOR AS Amount
			FROM 				' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || '
				LEFT OUTER JOIN 
					(	
						SELECT  
							TU.activ2_cf,
							TU.MRKUNT_NT 
						FROM 
							BI_<env>.TUWSEC TU
							JOIN 
								BI_<env>.TESB TE 
								ON TE.ssd_cf = TU.ssd_cf 
								AND TE.esb_cf = TU.accesb_cf 
								AND TE.life_cf = 2
						WHERE 
							TU.end_d = ''9999-12-31-00.00.00.000000''	
							AND TU.supp_d = ''9999-12-31-00.00.00.000000''
						GROUP BY
							TU.activ2_cf,
							TU.MRKUNT_NT
					) pr
					ON SEGMENT_CODE = TO_CHAR(pr.MRKUNT_NT)
			WHERE 				(
					MODIFIED_REQUEST_ID = ' || P_REQUEST_ID || '
					OR (
						CREATED_REQUEST_ID = ' || P_REQUEST_ID || '
						AND MODIFIED_REQUEST_ID IS NULL
					)
				)
				AND DELETED_REQUEST_ID IS NULL
				AND PARAMETER_TYPE_ID = 17
				AND FACTOR_TYPE_ID = 6
				AND VALID_TO = ''9999-12-31-00.00.00.000000''
				AND CLOSING_DATE = DATE(ADD_MONTHS(TO_DATE(''01/01/''||' || P_FILEYEAR || ',''DD/MM/YYYY''), ' || P_FILEQUARTER || ' * 3) - 1)
		) src
		CROSS JOIN 
			(
				SELECT  
					''N'' AS UWY 
				FROM 
					SYSIBM.SYSDUMMY1
				UNION ALL 
				SELECT  
					''N+1'' AS UWY 
				FROM 
					SYSIBM.SYSDUMMY1
				UNION ALL 
				SELECT  
					''N+2'' AS UWY 
				FROM 
					SYSIBM.SYSDUMMY1
			) crc';

EXECUTE IMMEDIATE 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' WHERE 1 = 1';

RAISE NOTICE 'Executing V_LOAD_DIP_FOREPLAN: ''%''',
V_LOAD_DIP_FOREPLAN;

EXECUTE IMMEDIATE V_LOAD_DIP_FOREPLAN;

EXCEPTION 
	WHEN OTHERS THEN 
		L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
		L_ERR_MSG := SQLERRM; 
		RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
		RETURN L_ERR_CD;

END;

END_PROC;
