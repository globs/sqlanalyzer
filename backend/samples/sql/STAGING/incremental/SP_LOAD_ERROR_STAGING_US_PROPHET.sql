SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_LOAD_ERROR_STAGING_US_PROPHET;

CREATE OR REPLACE PROCEDURE SP_LOAD_ERROR_STAGING_US_PROPHET(BIGINT,CHARACTER VARYING(64),CHARACTER VARYING(64),CHARACTER VARYING(64),CHARACTER VARYING(64)) 
RETURNS INTEGER
language nzplsql
AS
BEGIN_PROC

DECLARE
    P_REQUEST_ID        ALIAS FOR $1;
    P_SRC_SCHEMA        ALIAS FOR $2;
    P_SRC_TABLE         ALIAS FOR $3;
    P_TRG_SCHEMA        ALIAS FOR $4; 
    P_TRG_TABLE         ALIAS FOR $5; 
   	P_EXCLUDE_LIST      VARCHAR(32000);
    L_ERR_CD            CHAR(5); 
    L_ERR_MSG           VARCHAR(32000); 
    V_REC               RECORD; 
    V_TOTALCOLS         BIGINT; 
    V_COLCOUNTER        BIGINT; 
    V_CURRENT_COLNAME   VARCHAR(100);
    V_DEL_EXCLUDE_LIST  VARCHAR(32000);
    V_DEL_QUERY         VARCHAR(32000); 
    V_INS_QUERY         VARCHAR(32000);   
    V_COLS_QUERY        VARCHAR(32000);
    
BEGIN 

SET ISOLATION TO UR; 
V_TOTALCOLS = 0; 
V_COLCOUNTER = 1; 
P_EXCLUDE_LIST = '''BASETREATYNUMBER'', ''ASSUMEDTREATYNUMBER'', ''ASSUMEDCOMPANY_50'',
	 ''SINGLEORJOINTTYPE'', ''MODELLED_PERM_TERM_IND'', ''EVEREST_PERM_TERM_IND'', 
	''ASSUMEDREINSURANCETYPE'', ''RAWASSUMEDREINSURANCETYPE'', ''TREATYUWYEAR'', ''DEAL_ID'', 
	''AGGSPECIND'', ''PLT_STATUSIND'', ''QUOTENUMBER'', ''QUOTEID'', ''QUOTEPLANID'', 
	''QUOTEPLANNAME_50'', ''LEGAL_ENTITY_50'', ''FLOWNAME'', ''INF'', ''PDF'', ''FIRSTYEARPREMIUM'', ''PHGAAP_IND'',
	 ''RETROTREATYNUMBER'', ''RETROOMEGATREATYNUMBER'', ''RETROOMEGASECTIONNUMBER'', ''RETROCOMPANY_50'', 
	''RETRO_POOL_PERIOD'', ''ROW_NUMBER'', ''FINANCIAL_SOLUTIONS'', ''JOHN_HANCOCK'', ''ASSUMED_FROM'', 
	''RETRO_PATH'', ''ILIAS_BLOCK'', ''NUMBER_OF_POLICIES_IN_FORCE'', ''PROJECTION_ROW_NUMBER''';

CREATE TEMP TABLE SESSION.COLS (COLNAME VARCHAR(1000), COLNUMBER SMALLINT) DISTRIBUTE ON RANDOM;

V_COLS_QUERY = 'INSERT INTO SESSION.COLS (COLNAME, COLNUMBER)
SELECT 
	c.colname as COLNAME,
    c.colno+1 as COLNUMBER
FROM 
	SYSCAT.COLUMNS C                  
	LEFT OUTER JOIN (
		SELECT 
			X.TABSCHEMA,
			X.TABNAME,
			COLNAME,
			TYPE 
        FROM 
			SYSCAT.TABCONST X 
        	INNER JOIN 
				SYSCAT.KEYCOLUSE Y 
				ON X.TABSCHEMA = Y.TABSCHEMA 
				AND X.TABNAME = Y.TABNAME 
				AND X.CONSTNAME = Y.CONSTNAME 
        WHERE 
			X.TYPE = ''P'' 
			AND X.TABSCHEMA = ''' || P_SRC_SCHEMA || '''  
			AND X.TABNAME = ''' || P_SRC_TABLE || ''' ) U 
		ON U.TABSCHEMA = C.TABSCHEMA 
		AND U.TABNAME = C.TABNAME 
		AND U.COLNAME = C.COLNAME 
WHERE 
	C.TABSCHEMA = ''' || P_SRC_SCHEMA || ''' 
	AND C.TABNAME = ''' || P_SRC_TABLE || '''
	AND C.COLNAME NOT IN (''REQUEST_ID'',''LINE_NUMBER'',''RANDOM_DISTRIBUTION_KEY'')
ORDER BY 
	C.COLNO WITH UR';

EXECUTE IMMEDIATE V_COLS_QUERY;

SELECT COUNT(0) INTO V_TOTALCOLS FROM SESSION.COLS;

V_DEL_EXCLUDE_LIST = 'DELETE FROM SESSION.COLS WHERE COLNAME IN (' || P_EXCLUDE_LIST || ')';

EXECUTE IMMEDIATE V_DEL_EXCLUDE_LIST;

V_DEL_QUERY = 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || '  WHERE REQUEST_ID = ' || P_REQUEST_ID;

EXECUTE IMMEDIATE V_DEL_QUERY;

RAISE NOTICE 'DELETING TARGET TABLE'; 
RAISE NOTICE 'Executing V_DEL_QUERY: ''%''',V_DEL_QUERY; 
      
    WHILE V_COLCOUNTER <= V_TOTALCOLS LOOP
    
		IF (SELECT COUNT(*) FROM SESSION.COLS WHERE COLNUMBER = V_COLCOUNTER) = 1 THEN 
		
			SELECT COLNAME INTO V_CURRENT_COLNAME FROM SESSION.COLS WHERE COLNUMBER = V_COLCOUNTER;
             
	        V_INS_QUERY = 'INSERT INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || '     (
	            LINE_NUMBER,
	            COL_NUMBER,
	            COL_VALUE,
	            ERROR_MESSAGE_ID,
				REQUEST_ID
	        )
	        SELECT 
	               LINE_NUMBER, 
	               ' || V_COLCOUNTER || ' , 
	               ''' || V_CURRENT_COLNAME || ''', 
	               EM.ERROR_MESSAGE_ID,
				   ' || P_REQUEST_ID || '    
	        FROM  ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' 
            JOIN DELIVERY_<env>.ERROR_MESSAGE EM ON ERROR_MESSAGE_LABEL =''002 - Mandatory data not mentioned''
	        WHERE  TRIM(' || V_CURRENT_COLNAME || ') = '''' OR ' || V_CURRENT_COLNAME || ' IS NULL';
	       
	        RAISE NOTICE 'DELETING TARGET TABLE'; 
	        RAISE NOTICE 'Executing V_INS_QUERY: ''%''',V_INS_QUERY; 
	       
			EXECUTE IMMEDIATE V_INS_QUERY;
		
        END IF;
		
		V_COLCOUNTER = V_COLCOUNTER + 1;
		
    END LOOP; 
   
EXECUTE IMMEDIATE 'DROP TABLE SESSION.COLS IF EXISTS';
DROP TABLE SESSION.COLS IF EXISTS;
 	
EXCEPTION WHEN OTHERS THEN L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
L_ERR_MSG := SQLERRM; 
RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
RETURN L_ERR_CD; 
		
END; 

END_PROC;

