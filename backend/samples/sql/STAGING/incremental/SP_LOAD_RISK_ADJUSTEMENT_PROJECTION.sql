SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_LOAD_RISK_ADJUSTEMENT_PROJECTION;

CREATE OR REPLACE PROCEDURE SP_LOAD_RISK_ADJUSTEMENT_PROJECTION(BIGINT,CHARACTER VARYING(64),CHARACTER VARYING(64),CHARACTER VARYING(64),CHARACTER VARYING(64)) RETURNS INTEGER
language nzplsql
AS
BEGIN_PROC
 
DECLARE    
    P_REQUEST_ID                ALIAS FOR $1;
    P_SRC_SCHEMA                ALIAS FOR $2;
    P_SRC_TABLE                 ALIAS FOR $3;
    P_TRG_SCHEMA                ALIAS FOR $4; 
    P_TRG_TABLE                 ALIAS FOR $5;          
    L_ERR_CD                    CHAR(5);          
    L_ERR_MSG                   VARCHAR(32000);       
    V_REC                       RECORD;
    V_CLEAN_WRK_RA_FACTOR_PROJECTION   VARCHAR(64000);
    V_LOAD_WRK_RA_FACTOR_PROJECTION    VARCHAR(64000);
    
BEGIN
SET ISOLATION TO UR;
 
V_CLEAN_WRK_RA_FACTOR_PROJECTION := 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' WHERE REQUEST_ID =' || P_REQUEST_ID || ' ';

V_LOAD_WRK_RA_FACTOR_PROJECTION := 'INSERT INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' (
    REPORTING_BASIS_ID              ,
    CLOSING_DATE                    ,
    SEGMENT_TYPE_ID                 ,
    SEGMENT_CODE                    ,
    SUBSIDIARY_CODE                 ,
    SUBLEDGER_CODE                  ,
    LOB_CODE                        ,
    GUARANTEE_CODE                  ,
    SOB_CODE                        ,
    TOP_CODE                        ,
    COUNTRY_OF_RISK_CODE            ,
    CEDENT_NUMBER                   ,
    LEVEL_OF_ANALYSIS_ID            ,
    CALCULATED_POSITION_ID          ,
    TERM_TYPE_ID                    ,
    COVER_TYPE_ID                   ,
    BUSINESS_MATURITY_ID            ,
    BASIS_TYPE_ID                   ,
    ACTUARIAL_MODEL_TYPE_ID         ,
    IS_PRESENT_VALUE                ,
    LIFE_TREATY_TYPE_CODE           ,
    FINANCING_TYPE_CODE             ,
    IAS39_CODE                      ,
    USGAAP_CODE                     ,
    TYPE_OF_BUSINESS_CODE           ,
    BUSINESS_MATURITY_FLAG          ,
    PROJECTION_YEAR                 ,
    PROJECTION_PERIOD               ,
    PERIOD_TYPE_ID                  ,
    FACTOR                          ,
    REQUEST_ID
)
SELECT 
    RB.ID                           AS REPORTING_BASIS_ID              ,
    REPLACE(TO_DATE(RA_PRO.CLOSING_DATE,''DD/MM/YYYY''), CHR(13),'''')                                AS CLOSING_DATE,
    ST.ID                           AS SEGMENT_TYPE_ID                 ,
    CASE WHEN LENGTH(RA_PRO.MARKET_UNIT_CODE)>0 THEN CAST(RA_PRO.MARKET_UNIT_CODE AS INTEGER ) END    AS SEGMENT_CODE,
    CASE WHEN LENGTH(RA_PRO.SUBSIDIARY_CODE)>0 THEN CAST(RA_PRO.SUBSIDIARY_CODE AS INTEGER ) END      AS SUBSIDIARY_CODE,
    CASE WHEN LENGTH(RA_PRO.LEDGER_CODE)>0 THEN CAST(RA_PRO.LEDGER_CODE AS INTEGER ) END              AS SUBLEDGER_CODE,
    RA_PRO.OMEGA_LOB_CODE           AS LOB_CODE                        ,
    RA_PRO.GUARANTEE_CODE           AS GUARANTEE_CODE                  ,
    RA_PRO.COINSURANCE_CODE         AS SOB_CODE                        ,
    RA_PRO.POLICY_TYPE_CODE         AS TOP_CODE                        ,
    RA_PRO.REGION_CODE              AS COUNTRY_OF_RISK_CODE            ,
    CASE WHEN LENGTH(RA_PRO.CLIENT_ID)>0 THEN INTEGER(RA_PRO.CLIENT_ID) END                             AS CEDENT_NUMBER,
    I.ID                            AS LEVEL_OF_ANALYSIS_ID            ,
    J.ID                            AS CALCULATED_POSITION_ID          ,
    CASE WHEN LENGTH (RA_PRO.TERMTYPE_CODE) =0 THEN NULL ELSE CAST(RA_PRO.TERMTYPE_CODE AS INTEGER) END AS TERM_TYPE_ID,
    L.ID                            AS COVER_TYPE_ID                   ,
    M.ID                            AS BUSINESS_MATURITY_ID            ,
    N.ID                            AS BASIS_TYPE_ID                   ,
    CASE WHEN LENGTH (RA_PRO.ACTUARIALMODELTYPE_CODE) =0 THEN NULL ELSE CAST(RA_PRO.ACTUARIALMODELTYPE_CODE AS INTEGER) END  AS ACTUARIAL_MODEL_TYPE_ID,
    (CASE CAST(RA_PRO.PV_FLAG AS CHAR(1)) WHEN ''Y'' THEN 1 WHEN ''N'' THEN 0 END)                    AS IS_PRESENT_VALUE,
    RA_PRO.TREATY_LIFE_CHARACTERISTIC_CODE     AS LIFE_TREATY_TYPE_CODE,
    RA_PRO.FINANCING_TYPE_CODE      AS FINANCING_TYPE_CODE             ,
    CASE WHEN LENGTH(RA_PRO.IAS39_CODE)>0 THEN  CAST(RA_PRO.IAS39_CODE AS INTEGER ) END               AS IAS39_CODE,
    CASE WHEN LENGTH(RA_PRO.USGAAP_CODE)>0 THEN  CAST(RA_PRO.USGAAP_CODE AS INTEGER ) END             AS USGAAP_CODE,
    CASE WHEN LENGTH(RA_PRO.TYPE_OF_BUSINESS_CODE)>0 THEN  CAST(RA_PRO.TYPE_OF_BUSINESS_CODE AS INTEGER ) END AS TYPE_OF_BUSINESS_CODE,
    RA_PRO.BUSINESSMATURITY_FLAG    AS BUSINESS_MATURITY_FLAG          ,
    RA_PRO.RA_YEAR                  AS PROJECTION_YEAR                 ,
    RA_PRO.RA_PERIOD                AS PROJECTION_PERIOD               ,
    PT.ID                           AS PERIOD_TYPE_ID                ,
    RA_PRO.RA_FACTOR                AS FACTOR                          ,
    ' || P_REQUEST_ID || '          AS REQUEST_ID
FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' RA_PRO
LEFT OUTER JOIN BI_<env>.REPORTING_BASIS RB ON RB.CODE=UPPER(CAST(TRIM(RA_PRO.REPORTING_BASIS_CODE) AS VARCHAR))
LEFT OUTER JOIN BI_<env>.SEGMENT_TYPE ST ON ST.CODE=''8''
LEFT OUTER JOIN BI_<env>.LEVEL_OF_ANALYSIS I ON (RA_PRO.LEVELOFANALYSIS_CODE=I.CODE AND DATE(I.VALID_TO)=''9999-12-31'')
LEFT OUTER JOIN BI_<env>.POSITION J ON (RA_PRO.CSM_CASHFLOW_LEGS_CODE=J.CODE  AND DATE(J.VALID_TO)=''9999-12-31'' )
LEFT OUTER JOIN BI_<env>.POSITION_TYPE POT ON (J.POSITION_TYPE_ID = POT.ID AND POT.NAME=''CSM Cash Flow Legs'')
LEFT OUTER JOIN BI_<env>.COVER_TYPE L ON (RA_PRO.NATURE_CODE=L.CODE)
LEFT OUTER JOIN BI_<env>.BUSINESS_MATURITY M ON (RA_PRO.BUSINESSMATURITY_CODE=M.CODE)
LEFT OUTER JOIN BI_<env>.BASIS_TYPE N ON (RA_PRO.BASIS_TYPE=N.CODE)
LEFT OUTER JOIN BI_<env>.PERIOD_TYPE PT ON (PT.CODE=(CASE CAST(RA_PRO.PERIOD_ID AS INTEGER) WHEN 3 THEN ''Y'' WHEN 2 THEN  ''Q'' WHEN 1 THEN ''M'' END)) 
';

RAISE NOTICE 'Executing V_CLEAN_WRK_RA_FACTOR_PROJECTION: ''%''',V_CLEAN_WRK_RA_FACTOR_PROJECTION; 
EXECUTE IMMEDIATE V_CLEAN_WRK_RA_FACTOR_PROJECTION; 
RAISE NOTICE 'Executing V_LOAD_WRK_RA_FACTOR_PROJECTION: ''%''',V_LOAD_WRK_RA_FACTOR_PROJECTION; 
EXECUTE IMMEDIATE V_LOAD_WRK_RA_FACTOR_PROJECTION; 
EXECUTE IMMEDIATE 'COMMIT';

EXCEPTION WHEN OTHERS THEN
    L_ERR_CD := SUBSTR(SQLERRM,8,5); 
    L_ERR_MSG := SQLERRM;
    RAISE EXCEPTION '% Error while executing SQL statement',L_ERR_MSG;
    RETURN L_ERR_CD;

END;

END_PROC
;

