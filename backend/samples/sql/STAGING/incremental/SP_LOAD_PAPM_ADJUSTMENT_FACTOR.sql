SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_LOAD_PAPM_ADJUSTMENT_FACTOR;

CREATE OR REPLACE PROCEDURE SP_LOAD_PAPM_ADJUSTMENT_FACTOR(
	BIGINT,
	CHARACTER VARYING(64),
	CHARACTER VARYING(64),
	CHARACTER VARYING(64),
	CHARACTER VARYING(64),
	SMALLINT,
	SMALLINT
) 
RETURNS INTEGER
language nzplsql
AS
BEGIN_PROC

DECLARE
	P_REQUEST_ID        ALIAS FOR $1;
    P_SRC_SCHEMA        ALIAS FOR $2;
    P_SRC_TABLE         ALIAS FOR $3;
    P_TRG_SCHEMA        ALIAS FOR $4; 
    P_TRG_TABLE         ALIAS FOR $5;    
    P_FILEYEAR    	    ALIAS FOR $6;
	P_FILEQUARTER       ALIAS FOR $7;
	V_TEMP_TBL			VARCHAR(1000);
	V_TEMP_TBL_2		VARCHAR(1000);
	V_TEMP_TBL_3		VARCHAR(1000);
	V_TEMP_TBL_4		VARCHAR(1000);
	V_WRK_TBL			VARCHAR(1000);
	V_LOAD_TEMP_TBL		VARCHAR(ANY);
	V_LOAD_TEMP_TBL_2	VARCHAR(ANY);
	V_LOAD_TEMP_TBL_3	VARCHAR(ANY);
	V_LOAD_TEMP_TBL_4	VARCHAR(ANY);
	V_LOAD_TEMP_TBL_5	VARCHAR(ANY);
	V_LOAD_WRK_AIE		VARCHAR(ANY);
	V_LOAD_WRK_AIEP	    VARCHAR(ANY);
	L_ERR_CD		    CHAR(5);
	L_ERR_MSG		    VARCHAR(32000);

BEGIN
	SET ISOLATION TO UR;

	V_WRK_TBL := 'STAGING_' || P_TRG_TABLE || '_' || P_REQUEST_ID;

	V_TEMP_TBL := 'MAINTENANCE_TBL';
	
	V_TEMP_TBL_2 := P_TRG_TABLE || '_' || P_REQUEST_ID;

	V_TEMP_TBL_3 := P_TRG_TABLE || '_2_' || P_REQUEST_ID;

	V_TEMP_TBL_4 := 'OMEGA_KEYS_TABLE';
	
	EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_WRK_TBL || '(
		RATIO_TYPE VARCHAR(255),
		SUBSIDIARY VARCHAR(255),
		SUBLEDGER VARCHAR(255),
		MARKET VARCHAR(255),
		PORTFOLIO VARCHAR(255),
		NATURE VARCHAR(255),
		CURRENCY VARCHAR(255),
		CURRENCY_TYPE VARCHAR(255),
		EXPENSES VARCHAR(255),
		DRIVER VARCHAR(255),
		EXPENSE_RATIO VARCHAR(255),
		COHORT VARCHAR(255),
		NORM_CODE VARCHAR(255),
		PCA_AMOUNT VARCHAR(255),
		ALLOCATION_RATIO VARCHAR(255)
	) ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

	EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_TEMP_TBL || '(
		SUBSIDIARY VARCHAR(255),
		SUBLEDGER VARCHAR(255),
		NATURE VARCHAR(255),
		DIVIDE_BY_TWO INTEGER
	) ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

	EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_TEMP_TBL_2 || '(
		REPORTING_BASIS_ID SMALLINT,
		CLOSING_DATE DATE NOT NULL,
		PARAMETER_TYPE_ID SMALLINT NOT NULL,
		SEGMENT_TYPE_ID SMALLINT,
		SEGMENT_CODE VARCHAR(16),
		CONTRACT_NATURE_CODE CHAR(1),
		SUBSIDIARY_CODE SMALLINT,
		SUBLEDGER_CODE SMALLINT,
		LOB_CODE CHAR(2),
		DOMAIN_CODE VARCHAR(16),
		PLAN_CATEGORY_ID SMALLINT,
		UNDERWRITING_YEAR SMALLINT,
		CURRENCY_CODE CHAR(3),
		FACTOR_TYPE_ID SMALLINT,
	    FACTOR DECFLOAT,
		REQUEST_ID BIGINT
	) ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

	EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_TEMP_TBL_3 || '(
		REPORTING_BASIS_ID SMALLINT,
		CLOSING_DATE DATE NOT NULL,
		PARAMETER_TYPE_ID SMALLINT NOT NULL,
		SEGMENT_TYPE_ID SMALLINT,
		SEGMENT_CODE VARCHAR(16),
		CONTRACT_NATURE_CODE CHAR(1),
		SUBSIDIARY_CODE SMALLINT,
		SUBLEDGER_CODE SMALLINT,
		LOB_CODE CHAR(2),
		DOMAIN_CODE VARCHAR(16),
		PLAN_CATEGORY_ID SMALLINT,
		UNDERWRITING_YEAR SMALLINT,
		CURRENCY_CODE CHAR(3),
		FACTOR_TYPE_ID SMALLINT,
	    FACTOR DECFLOAT,
		REQUEST_ID BIGINT
	) ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

	EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_TEMP_TBL_4|| '(
		SUBSIDIARY VARCHAR(255),
		SUBLEDGER VARCHAR(255),
		PORTFOLIO VARCHAR(255),
		NATURE VARCHAR(255)
	) ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';
		
	V_LOAD_TEMP_TBL := 'INSERT INTO SESSION.' || V_WRK_TBL || ' (
		RATIO_TYPE,
		SUBSIDIARY,
		SUBLEDGER,
		MARKET,
		PORTFOLIO,
		NATURE,
		COHORT,
		NORM_CODE,
		EXPENSES,
		DRIVER,
		PCA_AMOUNT
	)
	SELECT
		REPLACE(TRIM(RATIO_TYPE), ''#'', ''A'') AS RATIO_TYPE,
		SUBSIDIARY,
		SUBLEDGER,
		MARKET,
		CASE 
			WHEN
				TRIM(PORTFOLIO) IN (''3'', ''4'', ''5'')
				OR LEFT(TRIM(PORTFOLIO), 3) = ''CRT''
			THEN
				''901''
			ELSE
				TRIM(PORTFOLIO)
		END AS PORTFOLIO,
		NATURE,
		COHORT,
		CASE 
	  		WHEN 
	  			UPPER(CURRENCY_TYPE) = ''GROUP''
	  		THEN 
	  			''I17G''
	    	WHEN 
	    		UPPER(CURRENCY_TYPE) = ''LOCAL''
	    	THEN 
	    		''I17L''
	    	WHEN 
	    		UPPER(CURRENCY_TYPE) = ''PARENT''
			THEN 
				''I17P'' 
  		END AS NORM_CODE,
		EXPENSES,
		DRIVER,
		PCA_AMOUNT
	FROM
		' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || '
	WHERE
		CONTRACT_CATEGORY <> ''3''
		AND TRIM(COHORT) IN (CAST(' || P_FILEYEAR || ' AS VARCHAR), ''#'')';
	
	V_LOAD_TEMP_TBL_2 := 'INSERT INTO SESSION.' || V_TEMP_TBL || ' (
		SUBSIDIARY,
		SUBLEDGER,
		NATURE,
		DIVIDE_BY_TWO
	)
	SELECT
		SUBSIDIARY,
		SUBLEDGER,
		NATURE,
		MAX(DIVIDE_BY_TWO) AS DIVIDE_BY_TWO
	FROM
		(
			SELECT
				SUBSIDIARY,
				SUBLEDGER,
				NATURE,
				CASE
					WHEN
						PORTFOLIO = ''121''
						OR PORTFOLIO = ''151''
					THEN
						1
					ELSE
						0
				END AS DIVIDE_BY_TWO
			FROM 
				SESSION.' || V_WRK_TBL || '
		)
	GROUP BY
		SUBSIDIARY,
		SUBLEDGER,
		NATURE';
	
	V_LOAD_TEMP_TBL_3 := 'INSERT INTO SESSION.' || V_TEMP_TBL_2 || ' (
		REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
		FACTOR_TYPE_ID,
	    FACTOR,
	    REQUEST_ID
	)
	SELECT
		rb.ID AS REPORTING_BASIS_ID,
		DATE(ADD_MONTHS(TO_DATE(''01/01/''||'|| P_FILEYEAR||',''DD/MM/YYYY''), '|| P_FILEQUARTER||' * 3) - 1) AS CLOSING_DATE,
		(
			SELECT 
				ID
			FROM 
				BI_<env>.PARAMETER_TYPE 
			WHERE 
				CODE = ''AIE''
		) AS PARAMETER_TYPE_ID,
		(
			SELECT
				ID
			FROM
				BI_<env>.SEGMENT_TYPE
			WHERE
				CODE = ''PTF''
		) AS SEGMENT_TYPE_ID,
		SEGMENT_CODE,
		CONTRACT_NATURE_CODE,
		SUBSIDIARY_CODE,
		SUBLEDGER_CODE,
		NULL AS LOB_CODE,
		NULL AS DOMAIN_CODE,
		NULL AS PLAN_CATEGORY_ID,
		NULL AS UNDERWRITING_YEAR,
		NULL AS CURRENCY_CODE,
		FACTOR_TYPE_ID,
		FACTOR,
		' || P_REQUEST_ID || ' AS REQUEST_ID
	FROM
		(
			SELECT
				CAST(PORTFOLIO AS INT) AS SEGMENT_CODE,
				NATURE AS CONTRACT_NATURE_CODE,
				SUBSIDIARY AS SUBSIDIARY_CODE,
				SUBLEDGER AS SUBLEDGER_CODE,
				NORM_CODE,
				(
					SELECT 
						ID
					FROM 
						BI_<env>.ADJUSTMENT_FACTOR_TYPE
					WHERE 
						CODE = ''ACQUISITION_COST_FACTOR''
				) AS FACTOR_TYPE_ID,
				CASE
					WHEN
						SUM(DRIVER) = 0
					THEN
						0
					ELSE
						ROUND(SUM(PCA_AMOUNT) / SUM(DRIVER), 8)
				END AS FACTOR
			FROM
				(	
					SELECT
						SUBSIDIARY,
						SUBLEDGER,
						PORTFOLIO,
						NATURE,
						COHORT,
						NORM_CODE,
						DRIVER,
						PCA_AMOUNT
					FROM
						SESSION.' || V_WRK_TBL || '
					WHERE
						PORTFOLIO <> ''#''
						AND COHORT <> ''#''
						AND RATIO_TYPE = ''A''
				)
			GROUP BY
				SUBSIDIARY,
				SUBLEDGER,
				PORTFOLIO,
				NATURE,
				NORM_CODE
			UNION
			SELECT
				NULL AS SEGMENT_CODE,
				NATURE AS CONTRACT_NATURE_CODE,
				SUBSIDIARY AS SUBSIDIARY_CODE,
				SUBLEDGER AS SUBLEDGER_CODE,
				NORM_CODE,
				(
					SELECT 
						ID
					FROM 
						BI_<env>.ADJUSTMENT_FACTOR_TYPE
					WHERE 
						CODE = ''MAINTENANCE_COST_FACTOR''
				) AS FACTOR_TYPE_ID,
				CASE
					WHEN
						SUM(DRIVER) = 0
					THEN
						0
					ELSE
						ROUND(SUM(EXPENSES) / SUM(DRIVER), 8)
				END AS FACTOR
			FROM
				(
					SELECT
						SUBSIDIARY,
						SUBLEDGER,
						NATURE,
						NORM_CODE,
						EXPENSES,
						DRIVER
					FROM
						SESSION.' || V_WRK_TBL || '
					WHERE
						RATIO_TYPE = ''M''
				)
			GROUP BY
				SUBSIDIARY,
				SUBLEDGER,
				NATURE,
				NORM_CODE
		)
		INNER JOIN
			BI_<env>.REPORTING_BASIS rb
			ON TRIM(UPPER(NORM_CODE)) = TRIM(UPPER(rb.CODE))';
		
	V_LOAD_TEMP_TBL_4 := 'INSERT INTO SESSION.' || V_TEMP_TBL_3 || ' (
			REPORTING_BASIS_ID,
		    CLOSING_DATE,
		    PARAMETER_TYPE_ID,
		    SEGMENT_TYPE_ID,
		    SEGMENT_CODE,
		    CONTRACT_NATURE_CODE,
		    SUBSIDIARY_CODE,
		    SUBLEDGER_CODE,
		    LOB_CODE,
		    DOMAIN_CODE,
		    PLAN_CATEGORY_ID,
			UNDERWRITING_YEAR,
		    CURRENCY_CODE,
			FACTOR_TYPE_ID,
		    FACTOR,
		    REQUEST_ID
	)
	SELECT
		REPORTING_BASIS_ID,
		CLOSING_DATE,
		PARAMETER_TYPE_ID,
		SEGMENT_TYPE_ID,
		SEGMENT_CODE,
		CONTRACT_NATURE_CODE,
		SUBSIDIARY_CODE,
		SUBLEDGER_CODE,
		LOB_CODE,
		DOMAIN_CODE,
		PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
		CURRENCY_CODE,
		FACTOR_TYPE_ID,
		FACTOR,
		REQUEST_ID
	FROM 
		SESSION.' || V_TEMP_TBL_2 || '
	WHERE 
		REQUEST_ID = ' || P_REQUEST_ID || '
		AND (
			PARAMETER_TYPE_ID = (
				SELECT 
					ID
				FROM 
					BI_<env>.PARAMETER_TYPE 
				WHERE 
					CODE = ''AIEP''
			)
			OR (
				PARAMETER_TYPE_ID = (
				SELECT 
					ID
				FROM 
					BI_<env>.PARAMETER_TYPE 
				WHERE 
					CODE = ''AIE''
				)
				AND FACTOR_TYPE_ID = (
					SELECT 
						ID
					FROM 
						BI_<env>.ADJUSTMENT_FACTOR_TYPE
					WHERE 
						CODE = ''ACQUISITION_COST_FACTOR''
				)
			)
		)
	UNION ALL
	SELECT
		REPORTING_BASIS_ID,
		CLOSING_DATE,
		PARAMETER_TYPE_ID,
		SEGMENT_TYPE_ID,
		SEGMENT_CODE,
		CONTRACT_NATURE_CODE,
		SUBSIDIARY_CODE,
		SUBLEDGER_CODE,
		LOB_CODE,
		DOMAIN_CODE,
		PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
		CURRENCY_CODE,
		FACTOR_TYPE_ID,
		FACTOR,
		REQUEST_ID
	FROM 
		SESSION.' || V_TEMP_TBL_2 || '
		JOIN
			SESSION.' || V_TEMP_TBL || '
			ON SUBSIDIARY_CODE = SUBSIDIARY
			AND SUBLEDGER_CODE = SUBLEDGER
			AND CONTRACT_NATURE_CODE = NATURE
			AND DIVIDE_BY_TWO = 0
	WHERE 
		REQUEST_ID = ' || P_REQUEST_ID || '
		AND PARAMETER_TYPE_ID = (
			SELECT 
				ID
			FROM 
				BI_<env>.PARAMETER_TYPE 
			WHERE 
				CODE = ''AIE''
		)
		AND FACTOR_TYPE_ID = (
			SELECT 
				ID
			FROM 
				BI_<env>.ADJUSTMENT_FACTOR_TYPE
			WHERE 
				CODE = ''MAINTENANCE_COST_FACTOR''
		)
	UNION ALL
	SELECT
		REPORTING_BASIS_ID,
		CLOSING_DATE,
		PARAMETER_TYPE_ID,
		SEGMENT_TYPE_ID,
		SEGMENT_CODE,
		CONTRACT_NATURE_CODE,
		SUBSIDIARY_CODE,
		SUBLEDGER_CODE,
		LOB_CODE,
		DOMAIN_CODE,
		PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
		CURRENCY_CODE,
		FACTOR_TYPE_ID,
		FACTOR / 2 AS FACTOR,
		REQUEST_ID
	FROM 
		SESSION.' || V_TEMP_TBL_2 || '
		JOIN
			SESSION.' || V_TEMP_TBL || '
			ON SUBSIDIARY_CODE = SUBSIDIARY
			AND SUBLEDGER_CODE = SUBLEDGER
			AND CONTRACT_NATURE_CODE = NATURE
			AND DIVIDE_BY_TWO = 1
	WHERE 
		REQUEST_ID = ' || P_REQUEST_ID || '
		AND PARAMETER_TYPE_ID = (
			SELECT 
				ID
			FROM 
				BI_<env>.PARAMETER_TYPE 
			WHERE 
				CODE = ''AIE''
		)
		AND FACTOR_TYPE_ID = (
			SELECT 
				ID
			FROM 
				BI_<env>.ADJUSTMENT_FACTOR_TYPE
			WHERE 
				CODE = ''MAINTENANCE_COST_FACTOR''
		)
	UNION ALL
	SELECT
		REPORTING_BASIS_ID,
		CLOSING_DATE,
		PARAMETER_TYPE_ID,
		SEGMENT_TYPE_ID,
		SEGMENT_CODE,
		CONTRACT_NATURE_CODE,
		SUBSIDIARY_CODE,
		SUBLEDGER_CODE,
		LOB_CODE,
		DOMAIN_CODE,
		PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
		CURRENCY_CODE,
		(
			SELECT 
				ID
			FROM 
				BI_<env>.ADJUSTMENT_FACTOR_TYPE
			WHERE 
				CODE = ''ORIGINAL_MAINTENANCE_COST_FACTOR''
		) AS FACTOR_TYPE_ID,
		FACTOR,
		REQUEST_ID
	FROM 
		SESSION.' || V_TEMP_TBL_2 || '
		JOIN
			SESSION.' || V_TEMP_TBL || '
			ON SUBSIDIARY_CODE = SUBSIDIARY
			AND SUBLEDGER_CODE = SUBLEDGER
			AND CONTRACT_NATURE_CODE = NATURE
			AND DIVIDE_BY_TWO = 1
	WHERE 
		REQUEST_ID = ' || P_REQUEST_ID || '
		AND PARAMETER_TYPE_ID = (
			SELECT 
				ID
			FROM 
				BI_<env>.PARAMETER_TYPE 
			WHERE 
				CODE = ''AIE''
		)
		AND FACTOR_TYPE_ID = (
			SELECT 
				ID
			FROM 
				BI_<env>.ADJUSTMENT_FACTOR_TYPE
			WHERE 
				CODE = ''MAINTENANCE_COST_FACTOR''
		)';
	
	V_LOAD_TEMP_TBL_5 := 'INSERT INTO SESSION.' || V_TEMP_TBL_4 || ' (
		SUBSIDIARY,
		SUBLEDGER,
		PORTFOLIO,
		NATURE
	)
	SELECT DISTINCT
		s2.SSD_CF AS SUBSIDIARY,
		s2.ACCESB_CF AS SUBLEDGER,
		CASE 
			WHEN
				TRIM(s1.GRPIFRSSEG_CT) IN (''3'', ''4'', ''5'')
				OR LEFT(TRIM(s1.GRPIFRSSEG_CT), 3) = ''CRT''
			THEN
				''901''
			ELSE
				TRIM(s1.GRPIFRSSEG_CT)
		END AS PORTFOLIO,
		s2.CTRNAT_CT AS NATURE
	FROM 
		BI_<env>.TSECIFRS s1
		INNER JOIN 
			BI_<env>.TUWSEC s2 
			ON s1.CTR_NF = s2.CTR_NF
			AND s1.UWY_NF = s2.UWY_NF
			AND s1.UW_NT = s2.UW_NT
			AND s1.END_NT = s2.END_NT
			AND s1.SEC_NF = s2.SEC_NF
			AND s2.SECSTS_CT IN (12, 14, 16, 17)
			AND s2.END_D = ''9999-12-31''
			AND s2.SUPP_D = ''9999-12-31''
		INNER JOIN 
			BI_<env>.TESB sl 
			ON sl.SSD_CF = s2.SSD_CF 
			AND sl.ESB_CF = s2.ACCESB_CF 
			AND sl.LIFE_CF = 2
		LEFT JOIN
			SESSION.' || V_TEMP_TBL_3 || ' af
			ON s2.SSD_CF = af.SUBSIDIARY_CODE
			AND s2.ACCESB_CF = af.SUBLEDGER_CODE
			AND TRIM(s1.GRPIFRSSEG_CT) = CAST(af.SEGMENT_CODE AS VARCHAR)
			AND s2.CTRNAT_CT = af.CONTRACT_NATURE_CODE
			AND af.PARAMETER_TYPE_ID = (
				SELECT 
					ID
				FROM 
					BI_<env>.PARAMETER_TYPE 
				WHERE 
					CODE = ''AIE''
			)
	WHERE
		s1.GRPIFRSSEG_CT IS NOT NULL
		AND af.SUBSIDIARY_CODE IS NULL
		AND af.SUBLEDGER_CODE IS NULL
		AND af.SEGMENT_CODE IS NULL
		AND af.CONTRACT_NATURE_CODE IS NULL
	UNION ALL
	SELECT 
		SUBSIDIARY_CODE,
		SUBLEDGER_CODE,
		SEGMENT_CODE,
		CONTRACT_NATURE_CODE
	FROM 
		SESSION.' || V_TEMP_TBL_3 || ' af
	WHERE 
		FACTOR = 0
		AND PARAMETER_TYPE_ID = (
			SELECT 
				ID
			FROM 
				BI_<env>.PARAMETER_TYPE 
			WHERE 
				CODE = ''AIE''
		)
		AND FACTOR_TYPE_ID = (
			SELECT 
				ID
			FROM 
				BI_<env>.ADJUSTMENT_FACTOR_TYPE
			WHERE 
				CODE = ''ACQUISITION_COST_FACTOR''
		)
		AND REQUEST_ID = ' || P_REQUEST_ID;
	
	V_LOAD_WRK_AIE := 'INSERT INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' (
		REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
		FACTOR_TYPE_ID,
	    FACTOR,
	    REQUEST_ID
	)
	SELECT DISTINCT
		REPORTING_BASIS_ID,
		CLOSING_DATE,
		PARAMETER_TYPE_ID,
		SEGMENT_TYPE_ID,
	    TRIM(SEGMENT_CODE) AS SEGMENT_CODE,
		TRIM(CONTRACT_NATURE_CODE) AS CONTRACT_NATURE_CODE,
		CAST(SUBSIDIARY_CODE AS INTEGER) AS SUBSIDIARY_CODE,
	    CAST(SUBLEDGER_CODE AS INTEGER) AS SUBLEDGER_CODE,
	    LOB_CODE,
		DOMAIN_CODE,
		PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
		CURRENCY_CODE,
		FACTOR_TYPE_ID,
		ROUND(FACTOR, 8),
		REQUEST_ID
	FROM
		(
			SELECT DISTINCT
				REPORTING_BASIS_ID,
				CLOSING_DATE,
				PARAMETER_TYPE_ID,
				SEGMENT_TYPE_ID,
				SEGMENT_CODE,
				CONTRACT_NATURE_CODE,
				SUBSIDIARY_CODE,
				SUBLEDGER_CODE,
				LOB_CODE,
				DOMAIN_CODE,
				PLAN_CATEGORY_ID,
				UNDERWRITING_YEAR,
				CURRENCY_CODE,
				FACTOR_TYPE_ID,
				CASE 
					WHEN
						TRIM(SEGMENT_CODE) NOT IN (''121'', ''151'')
						AND FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''MAINTENANCE_COST_FACTOR''
						)
						AND MAX_FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''MAINTENANCE_COST_FACTOR''
						)
					THEN
					    FACTOR
					WHEN
						TRIM(SEGMENT_CODE) IN (''121'', ''151'')
						AND FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''MAINTENANCE_COST_FACTOR''
						) 
						AND MAX_FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''MAINTENANCE_COST_FACTOR''
						)
					THEN
					    FACTOR / 2
					WHEN
						TRIM(SEGMENT_CODE) NOT IN (''121'', ''151'')
						AND FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''MAINTENANCE_COST_FACTOR''
						) 
						AND MAX_FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''ORIGINAL_MAINTENANCE_COST_FACTOR''
						)
					THEN
					    FACTOR * 2
					WHEN
						TRIM(SEGMENT_CODE) IN (''121'', ''151'')
						AND FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''MAINTENANCE_COST_FACTOR''
						) 
						AND MAX_FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''ORIGINAL_MAINTENANCE_COST_FACTOR''
						)
					THEN
					    FACTOR					
					ELSE
						NULL
				END AS FACTOR,
				REQUEST_ID
			FROM
				(
					SELECT
						af.REPORTING_BASIS_ID,
						af.CLOSING_DATE,
						af.PARAMETER_TYPE_ID,
						af.SEGMENT_TYPE_ID,
						a.PORTFOLIO AS SEGMENT_CODE,
						a.NATURE AS CONTRACT_NATURE_CODE,
						a.SUBSIDIARY AS SUBSIDIARY_CODE,
						a.SUBLEDGER AS SUBLEDGER_CODE,
						af.LOB_CODE,
						af.DOMAIN_CODE,
						af.PLAN_CATEGORY_ID,
						af.UNDERWRITING_YEAR,
						af.CURRENCY_CODE,
						af.FACTOR_TYPE_ID,
						af.FACTOR,
						af.REQUEST_ID,
						MAX(af.FACTOR_TYPE_ID) OVER (
							PARTITION BY
								a.SUBSIDIARY,
								a.SUBLEDGER,
								a.PORTFOLIO,
								a.NATURE
						) AS MAX_FACTOR_TYPE_ID
					FROM
						(
							SELECT
								SUBSIDIARY,
								SUBLEDGER,
								PORTFOLIO,
								NATURE
							FROM
								SESSION.' || V_TEMP_TBL_4 || '
						) a
						INNER JOIN
							SESSION.' || V_TEMP_TBL_3 || ' af
							ON a.SUBSIDIARY = af.SUBSIDIARY_CODE
							AND a.SUBLEDGER = af.SUBLEDGER_CODE
							AND a.NATURE = af.CONTRACT_NATURE_CODE
							AND af.PARAMETER_TYPE_ID = (
								SELECT 
									ID
								FROM 
									BI_<env>.PARAMETER_TYPE 
								WHERE 
									CODE = ''AIE''
							)
							AND af.FACTOR_TYPE_ID NOT IN (
								SELECT 
									ID
								FROM 
									BI_<env>.ADJUSTMENT_FACTOR_TYPE
								WHERE 
									CODE = ''ACQUISITION_COST_FACTOR''
							)
				)
			WHERE
				FACTOR_TYPE_ID = (
					SELECT 
						ID
					FROM 
						BI_<env>.ADJUSTMENT_FACTOR_TYPE
					WHERE 
						CODE = ''MAINTENANCE_COST_FACTOR''
				)
			UNION ALL
			SELECT DISTINCT
				REPORTING_BASIS_ID,
				CLOSING_DATE,
				PARAMETER_TYPE_ID,
				SEGMENT_TYPE_ID,
				SEGMENT_CODE,
				CONTRACT_NATURE_CODE,
				SUBSIDIARY_CODE,
				SUBLEDGER_CODE,
				LOB_CODE,
				DOMAIN_CODE,
				PLAN_CATEGORY_ID,
				UNDERWRITING_YEAR,
				CURRENCY_CODE,
				(
					SELECT 
						ID
					FROM 
						BI_<env>.ADJUSTMENT_FACTOR_TYPE
					WHERE 
						CODE = ''ORIGINAL_MAINTENANCE_COST_FACTOR''
				) AS FACTOR_TYPE_ID,
				CASE 
					WHEN
						TRIM(SEGMENT_CODE) IN (''121'', ''151'')
						AND FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''MAINTENANCE_COST_FACTOR''
						) 
						AND MAX_FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''MAINTENANCE_COST_FACTOR''
						)
					THEN
					    FACTOR
					WHEN
						TRIM(SEGMENT_CODE) IN (''121'', ''151'')
						AND FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''MAINTENANCE_COST_FACTOR''
						) 
						AND MAX_FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''ORIGINAL_MAINTENANCE_COST_FACTOR''
						)
					THEN
					    FACTOR * 2		
					WHEN
						TRIM(SEGMENT_CODE) IN (''121'', ''151'')
						AND FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''ORIGINAL_MAINTENANCE_COST_FACTOR''
						) 
						AND MAX_FACTOR_TYPE_ID = (
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''ORIGINAL_MAINTENANCE_COST_FACTOR''
						)
					THEN
					    FACTOR
					ELSE
						NULL
				END AS FACTOR,
				REQUEST_ID
			FROM
				(
					SELECT
						af.REPORTING_BASIS_ID,
						af.CLOSING_DATE,
						af.PARAMETER_TYPE_ID,
						af.SEGMENT_TYPE_ID,
						a.PORTFOLIO AS SEGMENT_CODE,
						a.NATURE AS CONTRACT_NATURE_CODE,
						a.SUBSIDIARY AS SUBSIDIARY_CODE,
						a.SUBLEDGER AS SUBLEDGER_CODE,
						af.LOB_CODE,
						af.DOMAIN_CODE,
						af.PLAN_CATEGORY_ID,
						af.UNDERWRITING_YEAR,
						af.CURRENCY_CODE,
						af.FACTOR_TYPE_ID,
						af.FACTOR,
						af.REQUEST_ID,
						MAX(af.FACTOR_TYPE_ID) OVER (
							PARTITION BY
								a.SUBSIDIARY,
								a.SUBLEDGER,
								a.PORTFOLIO,
								a.NATURE
						) AS MAX_FACTOR_TYPE_ID
					FROM
						(
							SELECT
								SUBSIDIARY,
								SUBLEDGER,
								PORTFOLIO,
								NATURE
							FROM
								SESSION.' || V_TEMP_TBL_4 || '
						) a
						INNER JOIN
							SESSION.' || V_TEMP_TBL_3 || ' af
							ON a.SUBSIDIARY = af.SUBSIDIARY_CODE
							AND a.SUBLEDGER = af.SUBLEDGER_CODE
							AND a.NATURE = af.CONTRACT_NATURE_CODE
							AND af.PARAMETER_TYPE_ID = (
								SELECT 
									ID
								FROM 
									BI_<env>.PARAMETER_TYPE 
								WHERE 
									CODE = ''AIE''
							)
							AND af.FACTOR_TYPE_ID NOT IN (
								SELECT 
									ID
								FROM 
									BI_<env>.ADJUSTMENT_FACTOR_TYPE
								WHERE 
									CODE = ''ACQUISITION_COST_FACTOR''
							)
				)
			UNION ALL
			SELECT DISTINCT
				REPORTING_BASIS_ID,
				CLOSING_DATE,
				PARAMETER_TYPE_ID,
				SEGMENT_TYPE_ID,
				SEGMENT_CODE,
				CONTRACT_NATURE_CODE,
				SUBSIDIARY_CODE,
				SUBLEDGER_CODE,
				LOB_CODE,
				DOMAIN_CODE,
				PLAN_CATEGORY_ID,
				UNDERWRITING_YEAR,
				CURRENCY_CODE,
				CASE
					WHEN
						SEGMENT_CODE NOT IN (''121'', ''151'') 
						AND FACTOR = MAX_FACTOR
					THEN
						(
							SELECT 
								ID
							FROM 
								BI_<env>.ADJUSTMENT_FACTOR_TYPE
							WHERE 
								CODE = ''MAINTENANCE_COST_FACTOR''
						)
					ELSE
						FACTOR_TYPE_ID
				END AS FACTOR_TYPE_ID,
				CASE
					WHEN
						SEGMENT_CODE NOT IN (''121'', ''151'') 
						AND FACTOR <> MAX_FACTOR
					THEN
						FACTOR * 2
					ELSE
						FACTOR
				END AS FACTOR,
				REQUEST_ID
			FROM
				(
					SELECT
						af.REPORTING_BASIS_ID,
					    af.CLOSING_DATE,
					    af.PARAMETER_TYPE_ID,
					    af.SEGMENT_TYPE_ID,
					    af.SEGMENT_CODE,
					    af.CONTRACT_NATURE_CODE,
					    af.SUBSIDIARY_CODE,
					    af.SUBLEDGER_CODE,
					    af.LOB_CODE,
					    af.DOMAIN_CODE,
					    af.PLAN_CATEGORY_ID,
						af.UNDERWRITING_YEAR,
					    af.CURRENCY_CODE,
						af2.FACTOR_TYPE_ID,
					    af2.FACTOR,
					    af.REQUEST_ID,
					    MAX(af2.FACTOR) OVER (
							PARTITION BY
								af.SUBSIDIARY_CODE,
								af.SUBLEDGER_CODE,
								af.SEGMENT_CODE,
								af.CONTRACT_NATURE_CODE
						) AS MAX_FACTOR
					FROM
						SESSION.' || V_TEMP_TBL_3 || ' af
						JOIN 
							SESSION.' || V_TEMP_TBL_3 || ' af2
							ON af.SUBSIDIARY_CODE = af2.SUBSIDIARY_CODE
							AND af.SUBLEDGER_CODE = af2.SUBLEDGER_CODE
							AND af.CONTRACT_NATURE_CODE = af2.CONTRACT_NATURE_CODE
							AND af2.SEGMENT_CODE IS NULL
					WHERE
						af.SEGMENT_CODE IS NOT NULL
				)
			UNION ALL
			SELECT
				REPORTING_BASIS_ID,
			    CLOSING_DATE,
			    PARAMETER_TYPE_ID,
			    SEGMENT_TYPE_ID,
			    SEGMENT_CODE,
			    CONTRACT_NATURE_CODE,
			    SUBSIDIARY_CODE,
			    SUBLEDGER_CODE,
			    LOB_CODE,
			    DOMAIN_CODE,
			    PLAN_CATEGORY_ID,
				UNDERWRITING_YEAR,
			    CURRENCY_CODE,
				FACTOR_TYPE_ID,
			    FACTOR,
			    REQUEST_ID
			FROM
				SESSION.' || V_TEMP_TBL_3 || '
			WHERE
				SEGMENT_CODE IS NOT NULL
				AND FACTOR <> 0
		)
	WHERE 
		FACTOR IS NOT NULL';
		
	V_LOAD_WRK_AIEP := 'INSERT INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' (
		REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
		FACTOR_TYPE_ID,
	    FACTOR,
	    REQUEST_ID
	)
	SELECT
		rb.ID AS REPORTING_BASIS_ID,
		DATE(ADD_MONTHS(TO_DATE(''01/01/''||'|| P_FILEYEAR||',''DD/MM/YYYY''), '|| P_FILEQUARTER||' * 3) - 1) AS CLOSING_DATE,
		(
			SELECT 
				ID
			FROM 
				BI_<env>.PARAMETER_TYPE 
			WHERE 
				CODE = ''AIEP''
		) AS PARAMETER_TYPE_ID,
		(
			SELECT
				ID
			FROM
				BI_<env>.SEGMENT_TYPE
			WHERE
				CODE = ''8''
		) AS SEGMENT_TYPE_ID,
		CAST(MARKET AS INT) AS SEGMENT_CODE,
		NATURE AS CONTRACT_NATURE_CODE,
		NULL AS SUBSIDIARY_CODE, 
		NULL AS SUBLEDGER_CODE,
		NULL AS LOB_CODE,
		NULL AS DOMAIN_CODE,
		NULL AS PLAN_CATEGORY_ID,
		NULL AS UNDERWRITING_YEAR,
		NULL AS CURRENCY_CODE,
		FACTOR_TYPE_ID,
		FACTOR,
		' || P_REQUEST_ID || ' AS REQUEST_ID
	FROM
		(
			SELECT
				MARKET,
				NATURE,
				NORM_CODE,
				(
					SELECT 
						ID
					FROM 
						BI_<env>.ADJUSTMENT_FACTOR_TYPE
					WHERE 
						CODE = ''ACQUISITION_COST_FACTOR''
				) AS FACTOR_TYPE_ID,
				CASE
					WHEN
						SUM(DRIVER) = 0
					THEN
						0
					ELSE
						ROUND(SUM(PCA_AMOUNT) / SUM(DRIVER), 8)
				END AS FACTOR
			FROM
				(
					SELECT
						MARKET,
						NATURE,
						NORM_CODE,
						DRIVER,
						PCA_AMOUNT
					FROM
						SESSION.' || V_WRK_TBL || '
					WHERE
						RATIO_TYPE = ''A''
						AND COHORT <> ''#''
				)
			GROUP BY
				MARKET,
				NATURE,
				NORM_CODE
			UNION
			SELECT
				MARKET,
				NATURE,
				NORM_CODE,
				(
					SELECT 
						ID
					FROM 
						BI_<env>.ADJUSTMENT_FACTOR_TYPE
					WHERE 
						CODE = ''MAINTENANCE_COST_FACTOR''
				) AS FACTOR_TYPE_ID,
				CASE
					WHEN
						SUM(DRIVER) = 0
					THEN
						0
					ELSE
						ROUND(SUM(EXPENSES) / SUM(DRIVER), 8)
				END AS FACTOR
			FROM
				(
					SELECT
						MARKET,
						NATURE,
						NORM_CODE,
						DRIVER,
						EXPENSES
					FROM
						SESSION.' || V_WRK_TBL || '
					WHERE
						RATIO_TYPE = ''M''
						AND COHORT = ''#''
				)
			GROUP BY
				MARKET,
				NATURE,
				NORM_CODE
		)
		INNER JOIN
			BI_<env>.REPORTING_BASIS rb
			ON TRIM(UPPER(NORM_CODE)) = TRIM(UPPER(rb.CODE))';
		
	EXECUTE IMMEDIATE 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' WHERE REQUEST_ID = ' || P_REQUEST_ID;
	
	RAISE NOTICE 'Executing V_LOAD_TEMP_TBL: ''%''', V_LOAD_TEMP_TBL;

	EXECUTE IMMEDIATE V_LOAD_TEMP_TBL;

	RAISE NOTICE 'Executing V_LOAD_TEMP_TBL_2: ''%''', V_LOAD_TEMP_TBL_2;

	EXECUTE IMMEDIATE V_LOAD_TEMP_TBL_2;

	RAISE NOTICE 'Executing V_LOAD_TEMP_TBL_3: ''%''', V_LOAD_TEMP_TBL_3;

	EXECUTE IMMEDIATE V_LOAD_TEMP_TBL_3;

	RAISE NOTICE 'Executing V_LOAD_TEMP_TBL_: ''%''', V_LOAD_TEMP_TBL_4;

	EXECUTE IMMEDIATE V_LOAD_TEMP_TBL_4;

	RAISE NOTICE 'Executing V_LOAD_TEMP_TBL_5: ''%''', V_LOAD_TEMP_TBL_5;

	EXECUTE IMMEDIATE V_LOAD_TEMP_TBL_5;
	
	RAISE NOTICE 'Executing V_LOAD_WRK_AIE: ''%''', V_LOAD_WRK_AIE;

	EXECUTE IMMEDIATE V_LOAD_WRK_AIE;

	RAISE NOTICE 'Executing V_LOAD_WRK_AIEP: ''%''', V_LOAD_WRK_AIEP;

	EXECUTE IMMEDIATE V_LOAD_WRK_AIEP;

	EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_WRK_TBL || ' IF EXISTS';

	EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_TEMP_TBL || ' IF EXISTS';

	EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_TEMP_TBL_2 || ' IF EXISTS';

	EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_TEMP_TBL_3 || ' IF EXISTS';

	EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_TEMP_TBL_4 || ' IF EXISTS';

EXCEPTION 
	WHEN OTHERS THEN 
		L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
		L_ERR_MSG := SQLERRM; 
		RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
		RETURN L_ERR_CD;

END;

END_PROC;