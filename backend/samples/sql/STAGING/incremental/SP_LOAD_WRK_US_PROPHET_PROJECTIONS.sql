SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_LOAD_WRK_US_PROPHET_PROJECTIONS;

CREATE OR REPLACE PROCEDURE SP_LOAD_WRK_US_PROPHET_PROJECTIONS (BIGINT,CHARACTER VARYING(64),CHARACTER VARYING(64),CHARACTER VARYING(64),CHARACTER VARYING(64)) RETURNS INTEGER 
LANGUAGE nzplsql AS 
BEGIN_PROC 

DECLARE 
    P_REQUEST_ID            ALIAS FOR $1;
    P_SRC_SCHEMA            ALIAS FOR $2;
    P_SRC_TABLE             ALIAS FOR $3;
    P_TRG_SCHEMA            ALIAS FOR $4;
    P_TRG_TABLE             ALIAS FOR $5;
    L_ERR_CD                CHAR(5);
    L_ERR_MSG               VARCHAR(32000);
    V_REC                   RECORD;
    V_DELETE_QUERY          VARCHAR(32000);
    V_INSERT_QUERY          VARCHAR(32000);

BEGIN
SET ISOLATION TO UR;

V_DELETE_QUERY := 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' WHERE REQUEST_ID =' || P_REQUEST_ID || ' ';

V_INSERT_QUERY :=  'INSERT     INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || '
(   AOC_STEP_STEPS,
    A_R,
    FREQUENCY,
    CLOSING_DATE,
    BUSINESS_MATURITY_CODE,
    SENSITIVITY_TYPE,
    SENSITIVITY_VOLUME,
    PROJECTION_MONTH,
    PROJECTION_YEAR,
    NEW_BUSINESS_IND,
    PREMIUMS,
    SURRENDERS,
    CLAIMS,
    COMMISSIONS,
    PROFIT_COMMISSIONS,
    CLAIM_PAYMENTS_FROM_EXISTING_IBNP_RESERVES,
    SUM_ASSURED,
    RISK_ADJUSTED_SUM_ASSURED,
    PLT_NO_POLS_IF,
    PLT_PREMIUMS,
    PLT_SURRENDERS,
    PLT_CLAIMS,
    PLT_COMMISSION,
    PLT_SUM_ASSURED,
    MAINTENANCE_EXPENSES,
    MAINTENANCE_EXPENSES_EUR,
    IFRS17_ATTRIBUTABLE_EXPENSES,
    IFRS17_ATTRIBUTABLE_EXPENSES_EUR,
    IFRS17_NON_ATTRIBUTABLE_EXPENSES,
    IFRS17_NON_ATTRIBUTABLE_EXPENSES_EUR,
    TOTAL_INFLATION,
    MAINTENANCE_EXPENSES_NO_INFLATION,
    ACQUISITION_EXPENSES,
    OTHER_INCOMING_CONTRACTUAL_CASHFLOWS,
    OTHER_OUTGOING_CONTRACTUAL_CASHFLOWS,
    INITIAL_COMMISSION,
    RENEWAL_COMMISSION,
    DEPOSITED_IBNP_RESERVES,
    DEPOSITED_MATHEMATICAL_RESERVES,
    NON_DEPOSITED_IBNP_RESERVES,
    NON_DEPOSITED_MATHEMATICAL_RESERVES,
    US_STATUTORY_RESERVE,
    TAX_RESERVE,
    US_GAAP_RESERVE_BENEFIT,
    US_GAAP_RESERVE_DAC,
    IFRS_RESERVE_BENEFIT,
    IFRS_RESERVE_DAC,
    DAC,
    COLLATERAL_COSTS,
    REQUIRED_CAPITAL,
    NON_HEDGEABLE_RISK_BASED_CAPITAL,
    NET_INVESTMENT_INCOME,
    INVESTMENT_EXPENSES,
    INTEREST_ON_DEPOSITS,
    INTEREST_ON_INVESTMENTS_BACKING_RESERVES_AND_DAC,
    TAX,
    TAX_EUR,
    COVERAGE_UNITS,
    CREATED_BY,
    CREATED_DATE,
    LINE_NUMBER,
    REQUEST_ID,
    PRODUCT,
    OMEGA_TREATY_NUMBER,
    OMEGA_SECTION_NUMBER,
    RETRO_OMEGA_TREATY_NUMBER,
    RETRO_OMEGA_SECTION_NUMBER,
    SPCODE,
    LE_HOP,
    LE,
    ASSUMED_FROM,
    BASE_TREATY_NUMBER,
    ASSUMED_TREATY_NUMBER,
    QUOTE_NUMBER,
    QUOTE_PLAN_ID,
    INF,
    SPLIT,
    PHGAAP_IND,
    NDIC_ACTUAL,
    NDIC_ESTIMATED    
)
SELECT
    STG.AOC_STEP_STEPS,
    STG.A_R,
    CASE WHEN STG.FREQUENCY = ''A'' THEN ''Y'' ELSE STG.FREQUENCY     END AS FREQUENCY,
    STG.VALUATION_DATE AS CLOSING_DATE,
    CASE
        WHEN (UPPER(STG.NEWBUSINESSIND) = ''EB'') THEN ''F''
        WHEN (UPPER(STG.NEWBUSINESSIND) = ''FNB'') THEN ''FNB''
        WHEN (UPPER(STG.NEWBUSINESSIND) = ''NB'') THEN ''B''
        WHEN (UPPER(STG.NEWBUSINESSIND) = ''ANB'') THEN ''B''
        ELSE STG.NEWBUSINESSIND     END AS BUSINESS_MATURITY_CODE,
    CASE WHEN STG.SENSITIVITY_TYPE = ''N/A'' THEN NULL ELSE STG.SENSITIVITY_TYPE    END SENSITIVITY_TYPE,
    CASE WHEN STG.SENSITIVITY_VOLUME = ''N/A'' THEN NULL    ELSE CAST(STG.SENSITIVITY_VOLUME AS DECIMAL(10,6))     END ,
    STG.PROJECTION_MONTH ,
    STG.PROJECTION_YEAR ,
    STG.NEWBUSINESSIND ,
    CASE WHEN STG.PREMIUMS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.PREMIUMS)) END,
    CASE WHEN STG.SURRENDERS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.SURRENDERS)) END,
    CASE WHEN STG.CLAIMS = '''' THEN 0    ELSE DECFLOAT(TRIM(STG.CLAIMS)) END,
    CASE WHEN STG.COMMISSIONS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.COMMISSIONS)) END,
    CASE WHEN STG.PROFIT_COMMISSIONS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.PROFIT_COMMISSIONS)) END,
    CASE WHEN STG.CLAIM_PAYMENTS_FROM_EXISTING_IBNP_RESERVES = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.CLAIM_PAYMENTS_FROM_EXISTING_IBNP_RESERVES)) END,
    CASE WHEN STG.SUM_ASSURED = '''' THEN 0    ELSE DECFLOAT(TRIM(STG.SUM_ASSURED)) END,
    CASE WHEN STG.RISK_ADJUSTED_SUM_ASSURED = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.RISK_ADJUSTED_SUM_ASSURED)) END,
    CASE WHEN STG.PLT_NO_POLS_IF = '''' THEN 0    ELSE DECFLOAT(TRIM(STG.PLT_NO_POLS_IF)) END,
    CASE WHEN STG.PLT_PREMIUMS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.PLT_PREMIUMS)) END,
    CASE WHEN STG.PLT_SURRENDERS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.PLT_SURRENDERS)) END,
    CASE WHEN STG.PLT_CLAIMS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.PLT_CLAIMS)) END,
    CASE WHEN STG.PLT_COMMISSION = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.PLT_COMMISSION)) END,
    CASE WHEN STG.PLT_SUM_ASSURED = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.PLT_SUM_ASSURED)) END,
    CASE WHEN STG.MAINTENANCE_EXPENSES = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.MAINTENANCE_EXPENSES)) END,
    CASE WHEN STG.MAINTENANCE_EXPENSES_EUR = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.MAINTENANCE_EXPENSES_EUR)) END,
    CASE WHEN STG.IFRS17_ATTRIBUTABLE_EXPENSES = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.IFRS17_ATTRIBUTABLE_EXPENSES)) END,
    CASE WHEN STG.IFRS17_ATTRIBUTABLE_EXPENSES_EUR = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.IFRS17_ATTRIBUTABLE_EXPENSES_EUR)) END,
    CASE WHEN STG.IFRS17_NON_ATTRIBUTABLE_EXPENSES = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.IFRS17_NON_ATTRIBUTABLE_EXPENSES)) END,
    CASE WHEN STG.IFRS17_NON_ATTRIBUTABLE_EXPENSES_EUR = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.IFRS17_NON_ATTRIBUTABLE_EXPENSES_EUR)) END,
    CASE WHEN STG.TOTAL_INFLATION = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.TOTAL_INFLATION)) END,
    CASE WHEN STG.MAINTENANCE_EXPENSES_NO_INFLATION = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.MAINTENANCE_EXPENSES_NO_INFLATION)) END,
    CASE WHEN STG.ACQUISITION_EXPENSES = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.ACQUISITION_EXPENSES)) END,
    CASE WHEN STG.OTHER_INCOMING_CONTRACTUAL_CASHFLOWS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.OTHER_INCOMING_CONTRACTUAL_CASHFLOWS)) END,
    CASE WHEN STG.OTHER_OUTGOING_CONTRACTUAL_CASHFLOWS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.OTHER_OUTGOING_CONTRACTUAL_CASHFLOWS)) END,
    CASE WHEN STG.INITIAL_COMMISSION = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.INITIAL_COMMISSION)) END,
    CASE WHEN STG.RENEWAL_COMMISSION = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.RENEWAL_COMMISSION)) END,
    CASE WHEN STG.DEPOSITED_IBNP_RESERVES = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.DEPOSITED_IBNP_RESERVES)) END,
    CASE WHEN STG.DEPOSITED_MATHEMATICAL_RESERVES = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.DEPOSITED_MATHEMATICAL_RESERVES)) END,
    CASE WHEN STG.NON_DEPOSITED_IBNP_RESERVES = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.NON_DEPOSITED_IBNP_RESERVES)) END,
    CASE WHEN STG.NON_DEPOSITED_MATHEMATICAL_RESERVES = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.NON_DEPOSITED_MATHEMATICAL_RESERVES)) END,
    CASE WHEN STG.US_STATUTORY_RESERVE = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.US_STATUTORY_RESERVE)) END,
    CASE WHEN STG.TAX_RESERVE = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.TAX_RESERVE)) END,
    CASE WHEN STG.US_GAAP_RESERVE_BENEFIT = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.US_GAAP_RESERVE_BENEFIT)) END,
    CASE WHEN STG.US_GAAP_RESERVE_DAC = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.US_GAAP_RESERVE_DAC)) END,
    CASE WHEN STG.IFRS_RESERVE_BENEFIT = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.IFRS_RESERVE_BENEFIT)) END,
    CASE WHEN STG.IFRS_RESERVE_DAC = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.IFRS_RESERVE_DAC)) END,
    CASE WHEN STG.DAC = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.DAC)) END,
    CASE WHEN STG.COLLATERAL_COSTS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.COLLATERAL_COSTS)) END,
    CASE WHEN STG.REQUIRED_CAPITAL = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.REQUIRED_CAPITAL)) END,
    CASE WHEN STG.NON_HEDGEABLE_RISK_BASED_CAPITAL = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.NON_HEDGEABLE_RISK_BASED_CAPITAL)) END,
    CASE WHEN STG.NET_INVESTMENT_INCOME = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.NET_INVESTMENT_INCOME)) END,
    CASE WHEN STG.INVESTMENT_EXPENSES = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.INVESTMENT_EXPENSES)) END,
    CASE WHEN STG.INTEREST_ON_DEPOSITS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.INTEREST_ON_DEPOSITS)) END,
    CASE WHEN STG.INTEREST_ON_INVESTMENTS_BACKING_RESERVES_AND_DAC = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.INTEREST_ON_INVESTMENTS_BACKING_RESERVES_AND_DAC)) END,
    CASE WHEN STG.TAX = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.TAX)) END,
    CASE WHEN STG.TAX_EUR = '''' THEN 0 ELSE DECFLOAT(TRIM( REPLACE(REPLACE(REPLACE(STG.TAX_EUR, chr(13), ''''), '','', ''.''),''null'', 0))) END,
    CASE WHEN STG.COVERAGE_UNITS = '''' THEN 0 ELSE DECFLOAT(TRIM(STG.COVERAGE_UNITS)) END,
    ''US PROPHET'' ,
    CURRENT_TIMESTAMP ,
    STG.LINE_NUMBER ,
    ' || P_REQUEST_ID || ' ,
    STG.PRODUCT ,
    CASE WHEN STG.OMEGATREATYNUMBER != '''' THEN STG.OMEGATREATYNUMBER END,
    CASE WHEN STG.OMEGASECTIONNUMBER != '''' THEN STG.OMEGASECTIONNUMBER END,
    CASE WHEN TRIM(STG.RETROOMEGATREATYNUMBER) != '''' THEN STG.RETROOMEGATREATYNUMBER END,
    CASE WHEN TRIM(STG.RETROOMEGASECTIONNUMBER) != '''' THEN STG.RETROOMEGASECTIONNUMBER END,
    STG.SPCODE,
    STG.LE_HOP,
    STG.LE,
    STG.ASSUMED_FROM,
    STG.BASETREATYNUMBER,
    STG.ASSUMEDTREATYNUMBER,
    STG.QUOTENUMBER,
    STG.QUOTEPLANID,
    STG.INF,
    UCASE(STG.MODELLED_PERM_TERM_IND) AS SPLIT,
    STG.PHGAAP_IND,
    STG.NDIC_ACTUAL,
    STG.NDIC_ESTIMATED
FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' STG
';
    
RAISE NOTICE 'Executing V_DELETE_QUERY: ''%''',V_DELETE_QUERY; 
EXECUTE IMMEDIATE V_DELETE_QUERY; 

RAISE NOTICE 'Executing V_INSERT_QUERY: ''%''',V_INSERT_QUERY;
EXECUTE IMMEDIATE V_INSERT_QUERY;

EXCEPTION WHEN OTHERS THEN L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
    L_ERR_MSG := SQLERRM; 
    RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
    RETURN L_ERR_CD; 
 
END; 

END_PROC;
