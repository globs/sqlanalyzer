SET SCHEMA STAGING_<env>;

CREATE OR REPLACE PROCEDURE SP_LOAD_CHECK_RD_FACTOR_PROJECTION ( 
   BIGINT,
   CHARACTER VARYING(50),
   CHARACTER VARYING(50),
   CHARACTER VARYING(50),
   CHARACTER VARYING(50) 
) RETURNS INTEGER
LANGUAGE NZPLSQL AS 
BEGIN_PROC

DECLARE 
    P_REQUEST_ID ALIAS FOR $1;
    P_SRC_SCHEMA ALIAS FOR $2;
    P_SRC_TABLE ALIAS FOR $3;
    P_TRG_SCHEMA ALIAS FOR $4;
    P_TRG_TABLE ALIAS FOR $5;
    V_REQ_ID BIGINT;
    V_WRK_TBL VARCHAR(1000);
    L_ERR_CD CHAR(5);
    L_ERR_MSG VARCHAR(32000);

BEGIN
SET ISOLATION TO UR;
V_REQ_ID := P_REQUEST_ID;
V_WRK_TBL := 'RD_FACTOR_PROJ_WRK_' || P_REQUEST_ID;

EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_WRK_TBL || ' IF EXISTS';
EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_WRK_TBL || ' AS 
(
   SELECT 
      LINE_NUMBER,
      AOC_STEP,  
      CSM_CASHFLOW,
      REPORTING_BASIS_CODE,
      PERIOD_ID,
      ' || P_REQUEST_ID || ' AS REQUEST_ID
   FROM 
      ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || '       
)WITH NO DATA ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

EXECUTE IMMEDIATE 'INSERT INTO SESSION.' || V_WRK_TBL || '
(
   SELECT 
      LINE_NUMBER,
      AOC_STEP,  
      CSM_CASHFLOW,
      REPORTING_BASIS_CODE,
      PERIOD_ID,
      ' || P_REQUEST_ID || ' AS REQUEST_ID
   FROM 
      ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || '             
)';
      
EXECUTE IMMEDIATE 'INSERT INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || '
(
   REQUEST_ID, 
   ERROR_MESSAGE_ID, 
   ERROR_ROW
)
SELECT 
   REQUEST_ID,
   41 AS ERROR_MESSAGE_ID,
   LINE_NUMBER
FROM SESSION.' || V_WRK_TBL || ' WT   
LEFT OUTER JOIN BI_<env>.LEVEL_OF_ANALYSIS  LA ON UPPER(WT.AOC_STEP) = UPPER(LA.CODE) AND DATE(LA.VALID_TO) = DATE(''9999-12-31'')
WHERE LA.CODE IS NULL
    UNION
SELECT 
  REQUEST_ID,
   43 AS ERROR_MESSAGE_ID,
   LINE_NUMBER
FROM SESSION.' || V_WRK_TBL || ' WT
LEFT OUTER JOIN DWHD1_<env>.V_MAPPING_POSITION MP ON UPPER(WT.CSM_CASHFLOW) = UPPER(MP.MAP_POSITION_CODE)  AND MP.IS_CSM_MAP is true AND DATE(MP.VALID_TO) = DATE(''9999-12-31'')
WHERE MP.MAP_POSITION_CODE IS NULL
    UNION
SELECT 
   REQUEST_ID,
   46 AS ERROR_MESSAGE_ID,
   LINE_NUMBER
FROM SESSION.' || V_WRK_TBL || ' WT
LEFT OUTER JOIN BI_<env>.REPORTING_BASIS RB ON UPPER(RB.CODE)=UPPER(WT.REPORTING_BASIS_CODE)
WHERE RB.CODE IS NULL
    UNION
SELECT 
   REQUEST_ID,
   51 AS ERROR_MESSAGE_ID,
   LINE_NUMBER
FROM SESSION.' || V_WRK_TBL || ' WT
LEFT OUTER JOIN BI_<env>.PERIOD_TYPE PT ON (UPPER(PT.CODE)=(CASE WT.PERIOD_ID WHEN 3 THEN ''Y'' WHEN 2 THEN  ''Q'' WHEN 1 THEN ''M'' END)) 
WHERE PT.CODE IS NULL
';

EXECUTE IMMEDIATE 'COMMIT';

EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_WRK_TBL || ' IF EXISTS';

EXCEPTION WHEN OTHERS THEN
	L_ERR_CD := SUBSTR(SQLERRM,8,5); 
	L_ERR_MSG := SQLERRM;
	RAISE EXCEPTION '% Error while executing SQL statement',L_ERR_MSG;
	RETURN L_ERR_CD;

END;

END_PROC
;

