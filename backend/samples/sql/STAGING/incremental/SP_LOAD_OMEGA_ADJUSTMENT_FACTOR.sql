SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_LOAD_OMEGA_ADJUSTMENT_FACTOR;

CREATE OR REPLACE PROCEDURE SP_LOAD_OMEGA_ADJUSTMENT_FACTOR (
	BIGINT,
	CHARACTER VARYING(64),
	CHARACTER VARYING(64)
) 
RETURNS INTEGER
language nzplsql
AS
BEGIN_PROC

DECLARE
	P_REQUEST_ID	ALIAS FOR $1;
    P_TRG_SCHEMA	ALIAS FOR $2;
    P_TRG_TABLE		ALIAS FOR $3;
	V_INS_RA		VARCHAR(ANY);
	V_INS_ER		VARCHAR(ANY);
	V_INS_LRA		VARCHAR(ANY);
	V_INS_DEF		VARCHAR(ANY);
	V_INS_DWH		VARCHAR(ANY);
	V_WRK_TBL		VARCHAR(1000);
	V_HASH_KEY      VARCHAR(1000);
	V_PIVOT_KEY     VARCHAR(1000);
    V_SUPP_TS       TIMESTAMP;
	L_ERR_CD		CHAR(5);
	L_ERR_MSG		VARCHAR(32000);

BEGIN
	SET ISOLATION TO UR;

	V_WRK_TBL := P_TRG_TABLE || '_STG';
	V_SUPP_TS = '9999-12-31'; 

	DROP TABLE SESSION.KEYS IF EXISTS; 

	CREATE TEMP TABLE SESSION.KEYS (NAME VARCHAR(50), VALUE VARCHAR(1000)) DISTRIBUTE ON RANDOM;
	
	EXECUTE IMMEDIATE 'INSERT INTO SESSION.KEYS  
		SELECT
			CFK.KEY_NAME AS NAME, 
	    	''HASH(NVL(''||LISTAGG(
				CASE 
					WHEN C.TYPENAME = ''DATE'' THEN ''VARCHAR_FORMAT(''||CFK.COLUMN_NAME||'', ''''YYYYMMDD'''')'' 
					WHEN C.TYPENAME = ''TIMESTAMP'' THEN ''VARCHAR_FORMAT(''||CFK.COLUMN_NAME||'', ''''yyyymmddhh24miss'''')'' 
					ELSE CFK.COLUMN_NAME 
				END,'', ''''0'''')||''''-''''||NVL('') WITHIN GROUP(ORDER BY CFK.COLUMN_ORDER) ||'', ''''0''''), 2)'' AS VALUE 
		FROM DELIVERY_<env>.CONF_TABLE_KEY CFK
	    INNER JOIN SYSCAT.COLUMNS C
				ON C.COLNAME = CFK.COLUMN_NAME
				AND C.TABSCHEMA = ''' || P_TRG_SCHEMA || ''' 
				AND C.TABNAME = ''' || P_TRG_TABLE || ''' 
				AND C.COLNAME <> ''RANDOM_DISTRIBUTION_KEY''
		WHERE 
			TABLE_NAME = ''' || P_TRG_TABLE || '''
		GROUP BY 
			CFK.KEY_NAME WITH UR';
	
	SELECT VALUE INTO V_HASH_KEY FROM SESSION.KEYS WHERE NAME = 'HASH_KEY';
	SELECT VALUE INTO V_PIVOT_KEY FROM SESSION.KEYS WHERE NAME = 'PIVOT_KEY';
	
	EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_WRK_TBL || ' IF EXISTS';

	EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION. ' || V_WRK_TBL || '(
		REPORTING_BASIS_ID SMALLINT,
		CLOSING_DATE DATE NOT NULL,
		PARAMETER_TYPE_ID SMALLINT NOT NULL,
		SEGMENT_TYPE_ID SMALLINT,
		SEGMENT_CODE VARCHAR(16),
		CONTRACT_NATURE_CODE CHAR(1),
		SUBSIDIARY_CODE SMALLINT,
		SUBLEDGER_CODE SMALLINT,
		LOB_CODE CHAR(2),
		DOMAIN_CODE VARCHAR(16),
		PLAN_CATEGORY_ID SMALLINT,
		UNDERWRITING_YEAR SMALLINT,
		CURRENCY_CODE CHAR(3),
		FACTOR_TYPE_ID SMALLINT,
		FACTOR DECFLOAT NOT NULL,
		VALID_FROM TIMESTAMP NOT NULL,
		VALID_TO TIMESTAMP NOT NULL,
		REQUEST_ID BIGINT
	) ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON RANDOM';

	V_INS_RA := 'INSERT INTO SESSION.' || V_WRK_TBL || ' (
	    REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
	    FACTOR_TYPE_ID,
		FACTOR,
		VALID_FROM,
		VALID_TO,
	    REQUEST_ID
	)
	SELECT
		REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    TRIM(SEGMENT_CODE) AS SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
	    FACTOR_TYPE_ID,
		CAST(FACTOR AS DECFLOAT) AS FACTOR,
		VALID_FROM,
		VALID_TO,
	    REQUEST_ID
	FROM
		(
			SELECT 
				rb.ID AS REPORTING_BASIS_ID,
				A.CLODAT_D AS CLOSING_DATE,
				a.CRE_D AS VALID_FROM,
				COALESCE(lead (a.cre_d,1) OVER (PARTITION BY A.CLODAT_D, A.SSD_CF, A.ESB_CF, C.SGMT_LS, A.CTRNAT_CT, A.DOMAIN_CF
					ORDER BY A.CLODAT_D, A.SSD_CF, A.ESB_CF, C.SGMT_LS, A.CTRNAT_CT, A.DOMAIN_CF, a.CRE_D), 
					''9999-12-31-00.00.00'') AS VALID_TO,
				3 AS PARAMETER_TYPE_ID,
				B.SGTTYP_NT AS SEGMENT_TYPE_ID,
				C.SGMT_LS AS SEGMENT_CODE,
				A.CTRNAT_CT AS CONTRACT_NATURE_CODE,
				A.SSD_CF AS SUBSIDIARY_CODE,
				A.ESB_CF AS SUBLEDGER_CODE,
				NULL AS LOB_CODE,
				A.DOMAIN_CF AS DOMAIN_CODE,
				NULL AS PLAN_CATEGORY_ID,
				NULL AS UNDERWRITING_YEAR,
				NULL AS CURRENCY_CODE,
				1 AS FACTOR_TYPE_ID,
				A.PRMRAT_R AS FACTOR,
				' || P_REQUEST_ID || ' AS REQUEST_ID
			FROM 
			    BI_<env>.TSEGMENTATION B
				JOIN  
					BI_<env>.TSEGMT C
			  		ON B.SGT_NT = C.SGT_NT
			 		AND B.SGTVER_NT = C.SGTVER_NT
				JOIN  
					BI_<env>.TRARAT A 
			  		ON C.SGMT_NF = A.SEG_NF
			  	JOIN
			    	BI_<env>.REPORTING_BASIS rb
			    	ON COALESCE(A.NORME_CF, ''I17G'') = rb.CODE
			WHERE 
				B.SGTTYP_NT = 2 
				AND B.SGTVER_NT = (
					SELECT 
						MAX(SGTVER_NT)
					FROM 
						BI_<env>.TSEGMENTATION 
					WHERE 
						SGTTYP_NT = 2)
				AND A.CLODAT_D >= ''2019-09-30-00.00.00''
				AND COALESCE(A.NORME_CF, ''I17G'') = ''I17G''
				AND COALESCE(A.PER_CF, ''POS'') IN (''INV'',''POS'',''POC'')
			UNION ALL
			SELECT 
				rb.ID AS REPORTING_BASIS_ID,
				A.CLODAT_D AS CLOSING_DATE,
				a.CRE_D AS VALID_FROM,
				COALESCE(lead (a.cre_d,1) OVER (PARTITION BY A.CLODAT_D, A.SSD_CF, A.ESB_CF, C.SGMT_LS, A.CTRNAT_CT, A.DOMAIN_CF
					ORDER BY A.CLODAT_D, A.SSD_CF, A.ESB_CF, C.SGMT_LS, A.CTRNAT_CT, A.DOMAIN_CF, a.CRE_D), 
					''9999-12-31-00.00.00'') AS VALID_TO,
				3 AS PARAMETER_TYPE_ID, 
				B.SGTTYP_NT AS SEGMENT_TYPE_ID,
				C.SGMT_LS AS SEGMENT_CODE,
				A.CTRNAT_CT AS CONTRACT_NATURE_CODE,
				A.SSD_CF AS SUBSIDIARY_CODE,
				A.ESB_CF AS SUBLEDGER_CODE,
				NULL AS LOB_CODE,
				A.DOMAIN_CF AS DOMAIN_CODE,
				NULL AS PLAN_CATEGORY_ID,
				NULL AS UNDERWRITING_YEAR,
				NULL AS CURRENCY_CODE,
				2 AS FACTOR_TYPE_ID,
				A.RSRVRAT_R AS FACTOR,
				' || P_REQUEST_ID || ' AS REQUEST_ID
			FROM 
			    BI_<env>.TSEGMENTATION B
				JOIN  
					BI_<env>.TSEGMT C
			  		ON B.SGT_NT = C.SGT_NT
			 		AND B.SGTVER_NT = C.SGTVER_NT
				JOIN  
					BI_<env>.TRARAT A 
			  		ON C.SGMT_NF = A.SEG_NF
			  	JOIN
			    	BI_<env>.REPORTING_BASIS rb
			    	ON COALESCE(A.NORME_CF, ''I17G'') = rb.CODE
			WHERE 
				B.SGTTYP_NT = 2 
				AND B.SGTVER_NT = (
					SELECT 
						MAX(SGTVER_NT)
					FROM 
						BI_<env>.TSEGMENTATION 
					WHERE 
						SGTTYP_NT = 2)
				AND A.CLODAT_D >= ''2019-09-30-00.00.00''
				AND COALESCE(A.NORME_CF, ''I17G'') = ''I17G''
				AND COALESCE(A.PER_CF, ''POS'') IN (''INV'',''POS'',''POC'')
		)
	WHERE
		VALID_TO <> VALID_FROM
	GROUP BY
		REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
	    FACTOR_TYPE_ID,
		FACTOR,
		VALID_FROM,
		VALID_TO,
	    REQUEST_ID';

	V_INS_ER := 'INSERT INTO SESSION.' || V_WRK_TBL || ' (
	    REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
	    FACTOR_TYPE_ID,
		FACTOR,
		VALID_FROM,
		VALID_TO,
	    REQUEST_ID
	)
	SELECT
		REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    TRIM(SEGMENT_CODE) AS SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
	    FACTOR_TYPE_ID,
		CAST(FACTOR AS DECFLOAT) AS FACTOR,
		VALID_FROM,
		VALID_TO,
	    REQUEST_ID
	FROM
		(
			SELECT 
				rb.ID AS REPORTING_BASIS_ID,
				A.CLODAT_D AS CLOSING_DATE,
				a.CRE_D AS VALID_FROM,
				COALESCE(lead (a.cre_d,1) OVER (PARTITION BY A.CLODAT_D, A.SSD_CF, A.ESB_CF, C.SGMT_LS, A.CTRNAT_CT
					ORDER BY A.CLODAT_D, A.SSD_CF, A.ESB_CF, C.SGMT_LS, A.CTRNAT_CT, a.CRE_D)
					, ''9999-12-31-00.00.00'') AS VALID_TO,
				4 AS PARAMETER_TYPE_ID,
				B.SGTTYP_NT AS SEGMENT_TYPE_ID,
				C.SGMT_LS AS SEGMENT_CODE,
				A.CTRNAT_CT AS CONTRACT_NATURE_CODE,
				A.SSD_CF AS SUBSIDIARY_CODE,
				A.ESB_CF AS SUBLEDGER_CODE,
				NULL AS LOB_CODE,
				NULL AS DOMAIN_CODE,
				NULL AS PLAN_CATEGORY_ID,
				NULL AS UNDERWRITING_YEAR,
				NULL AS CURRENCY_CODE,
			    5 AS FACTOR_TYPE_ID,   
				A.ACQRAT_R AS FACTOR,
				' || P_REQUEST_ID || ' AS REQUEST_ID
			FROM  
				BI_<env>.TSEGMENTATION B
				JOIN  
					BI_<env>.TSEGMT C
			  		ON B.SGT_NT = C.SGT_NT
					AND B.SGTVER_NT = C.SGTVER_NT
				JOIN  
					BI_<env>.TEXPRAT A
			  		ON C.SGMT_NF = A.SEG_NF
			  	JOIN
			    	BI_<env>.REPORTING_BASIS rb
			    	ON COALESCE(A.NORME_CF, ''I17G'') = rb.CODE
			WHERE 
				B.SGTTYP_NT = 8
				AND B.SGTVER_NT = (
					SELECT 
						MAX(SGTVER_NT) 
					FROM 
						BI_<env>.TSEGMENTATION 
					WHERE 
						SGTTYP_NT = 8
					) 
				AND A.CLODAT_D >= ''2019-09-30-00.00.00''
				AND COALESCE(A.NORME_CF, ''I17G'') = ''I17G''
				AND COALESCE(A.PER_CF,''POS'') IN (''INV'',''POS'',''POC'')
			UNION ALL
			SELECT 
				rb.ID AS REPORTING_BASIS_ID,
				A.CLODAT_D AS CLOSING_DATE,
				a.CRE_D AS VALID_FROM,
				COALESCE(lead (a.cre_d,1) OVER (PARTITION BY A.CLODAT_D, A.SSD_CF, A.ESB_CF, C.SGMT_LS, A.CTRNAT_CT
					ORDER BY A.CLODAT_D, A.SSD_CF, A.ESB_CF, C.SGMT_LS, A.CTRNAT_CT, a.CRE_D)
					, ''9999-12-31-00.00.00'') AS VALID_TO,
				4 AS PARAMETER_TYPE_ID,
				B.SGTTYP_NT AS SEGMENT_TYPE_ID,
				C.SGMT_LS AS SEGMENT_CODE,
				A.CTRNAT_CT AS CONTRACT_NATURE_CODE,
				A.SSD_CF AS SUBSIDIARY_CODE,
				A.ESB_CF AS SUBLEDGER_CODE,
				NULL AS LOB_CODE,
				NULL AS DOMAIN_CODE,
				NULL AS PLAN_CATEGORY_ID,
				NULL AS UNDERWRITING_YEAR,
				NULL AS CURRENCY_CODE,
			    6 AS FACTOR_TYPE_ID,   
				A.MAINTRAT_R AS RATE,
				' || P_REQUEST_ID || ' AS REQUEST_ID
			FROM  
				BI_<env>.TSEGMENTATION B
				JOIN  
					BI_<env>.TSEGMT C
			  		ON B.SGT_NT = C.SGT_NT
					AND B.SGTVER_NT = C.SGTVER_NT
				JOIN  
					BI_<env>.TEXPRAT A
			  		ON C.SGMT_NF = A.SEG_NF
			  	JOIN
			    	BI_<env>.REPORTING_BASIS rb
			    	ON COALESCE(A.NORME_CF, ''I17G'') = rb.CODE
			WHERE 
				B.SGTTYP_NT = 8
				AND B.SGTVER_NT = (
					SELECT 
						MAX(SGTVER_NT) 
					FROM 
						BI_<env>.TSEGMENTATION 
					WHERE 
						SGTTYP_NT = 8
					) 
				AND A.CLODAT_D >= ''2019-09-30-00.00.00''
				AND COALESCE(A.NORME_CF, ''I17G'') = ''I17G''
				AND COALESCE(A.PER_CF,''POS'') IN (''INV'',''POS'',''POC'')
		)
	WHERE
		VALID_TO <> VALID_FROM
	GROUP BY
		REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
	    FACTOR_TYPE_ID,
		FACTOR,
		VALID_FROM,
		VALID_TO,
	    REQUEST_ID';
	   
		V_INS_LRA := 'INSERT INTO SESSION.' || V_WRK_TBL || ' (
		    REPORTING_BASIS_ID,
		    CLOSING_DATE,
		    PARAMETER_TYPE_ID,
		    SEGMENT_TYPE_ID,
		    SEGMENT_CODE,
		    CONTRACT_NATURE_CODE,
		    SUBSIDIARY_CODE,
		    SUBLEDGER_CODE,
		    LOB_CODE,
		    DOMAIN_CODE,
		    PLAN_CATEGORY_ID,
			UNDERWRITING_YEAR,
		    CURRENCY_CODE,
		    FACTOR_TYPE_ID,
			FACTOR,
			VALID_FROM,
			VALID_TO,
		    REQUEST_ID
		)
		SELECT DISTINCT
			(SELECT ID FROM BI_<env>.REPORTING_BASIS WHERE code = ''I17G'') AS REPORTING_BASIS_ID,
			''9999-12-31-00.00.00'' AS CLOSING_DATE,
			1 AS PARAMETER_TYPE_ID,
			(SELECT ID FROM BI_<env>.SEGMENT_TYPE WHERE CODE = ''1'') AS SEGMENT_TYPE_ID,
			TRIM(b.SEG_NF) AS SEGMENT_CODE,
			NULL AS CONTRACT_NATURE_CODE,
			NULL AS SUBSIDIARY_CODE,
			NULL AS SUBLEDGER_CODE,
			NULL AS LOB_CODE,
			NULL AS DOMAIN_CODE,
			NULL AS PLAN_CATEGORY_ID,
			b.UWY_NF AS UNDERWRITING_YEAR,
			NULL AS CURRENCY_CODE,
			(SELECT ID FROM BI_<env>.ADJUSTMENT_FACTOR_TYPE WHERE code =''LOSS_RATIO_ADJUSTMENT_FACTOR'') AS FACTOR_TYPE_ID,
			CAST(b.LOSRAT_R AS DECFLOAT) AS FACTOR,
			NOW AS VALID_FROM,
			''9999-12-31-00.00.00'' AS VALID_TO,
			' || P_REQUEST_ID || ' AS REQUEST_ID
		FROM 
			(
				SELECT
					b.SEG_NF, 
					b.UWY_NF, 
					MAX(v.LOADING_D) AS LastLoad
				FROM 
					BI_<env>.TSEGEST b
					INNER JOIN 
						BI_<env>.TVERSION v 
						ON v.VRS_NF = b.VRS_NF 
						AND v.SEGTYP_CT = b.SEGTYP_CT
				WHERE 
					b.LOSRAT_R IS NOT NULL
					AND b.SEGTYP_CT = ''A''
					AND b.UWY_NF >= 2019
					AND b.UWY_NF NOT IN (2050, 2052, 10003, 10001, 9999)
				GROUP BY 
					b.SEG_NF, 
					b.UWY_NF
			) lv
			INNER JOIN 
				BI_<env>.TVERSION v 
				ON v.Loading_D = lv.LastLoad 
				AND v.segtyp_ct = ''A''
			INNER JOIN 
				BI_<env>.TSEGEST b 
				ON b.seg_nf = lv.seg_nf 
				AND b.uwy_nf = lv.uwy_nf 
				AND b.vrs_nf = v.vrs_nf 
				AND b.losrat_r IS NOT NULL 
				AND b.segtyp_ct = ''A''';
	
	V_INS_DEF := 'INSERT INTO SESSION.' || V_WRK_TBL || ' (
	    REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
	    FACTOR_TYPE_ID,
		FACTOR,
		VALID_FROM,
		VALID_TO,
	    REQUEST_ID
	)
	SELECT 
		2 AS REPORTING_BASIS,
		CASE WHEN
			PARAMETER_TYPE_ID = 1 THEN TO_TIMESTAMP(''9999-12-31'', ''YYYY-MM-DD'')
		ELSE
			TO_TIMESTAMP(''2001-06-30'', ''YYYY-MM-DD'') 
		END AS CLOSING_DATE,
		PARAMETER_TYPE_ID,
		SEGMENT_TYPE_ID,
		''Default'' AS SEGMENT_CODE,
		CONTRACT_NATURE,
		NULL AS SUBSIDIARU_CODE,
		NULL AS SUBLEDGER_CODE,
		NULL AS LOB_CODE,
		NULL AS DOMAIN_CODE,
		NULL AS PLAN_CATEGORY_ID,
		NULL AS UNDERWRITING_YEAR,
		NULL AS CURRENCY_CODE,
		FACTOR_TYPE_ID,
		CAST(FACTOR AS DECFLOAT) AS FACTOR,
		CURRENT TIMESTAMP AS VALID_FROM,
		TO_TIMESTAMP(''9999-12-31'', ''YYYY-MM-DD'') AS VALID_TO,
		' || P_REQUEST_ID || ' AS REQUEST_ID
	FROM
		(
			VALUES
				(
					(SELECT ID AS PARAMETER_TYPE_ID FROM BI_<env>.PARAMETER_TYPE WHERE CODE = ''LRA''),
					0,
					NULL,
					(SELECT ID FROM BI_<env>.ADJUSTMENT_FACTOR_TYPE WHERE code = ''LOSS_RATIO_ADJUSTMENT_FACTOR''),
					0
				),
				(
					(SELECT ID AS PARAMETER_TYPE_ID FROM BI_<env>.PARAMETER_TYPE WHERE CODE = ''RA''),
					0,
					''F'',
					(SELECT ID FROM BI_<env>.ADJUSTMENT_FACTOR_TYPE WHERE code = ''PREMIUM_RATE''),
					0.0614
				),
				(
					(SELECT ID AS PARAMETER_TYPE_ID FROM BI_<env>.PARAMETER_TYPE WHERE CODE = ''RA''),
					0,
					''P'',
					(SELECT ID FROM BI_<env>.ADJUSTMENT_FACTOR_TYPE WHERE code = ''PREMIUM_RATE''),
					0.0549
				),
				(
					(SELECT ID AS PARAMETER_TYPE_ID FROM BI_<env>.PARAMETER_TYPE WHERE CODE = ''RA''),
					0,
					''N'',
					(SELECT ID FROM BI_<env>.ADJUSTMENT_FACTOR_TYPE WHERE code = ''PREMIUM_RATE''),
					0.1606
				),
				(
					(SELECT ID AS PARAMETER_TYPE_ID FROM BI_<env>.PARAMETER_TYPE WHERE CODE = ''AIE''),
					0,
					''F'',
					(SELECT ID FROM BI_<env>.ADJUSTMENT_FACTOR_TYPE WHERE code = ''ACQUISITION_COST_FACTOR''),
					0.047815 
				),
				(
					(SELECT ID AS PARAMETER_TYPE_ID FROM BI_<env>.PARAMETER_TYPE WHERE CODE = ''AIE''),
					0,
					''F'',
					(SELECT ID FROM BI_<env>.ADJUSTMENT_FACTOR_TYPE WHERE code = ''MAINTENANCE_COST_FACTOR''),
					0.008141 
				),
				(
					(SELECT ID AS PARAMETER_TYPE_ID FROM BI_<env>.PARAMETER_TYPE WHERE CODE = ''AIE''),
					0,
					''P'',
					(SELECT ID FROM BI_<env>.ADJUSTMENT_FACTOR_TYPE WHERE code = ''ACQUISITION_COST_FACTOR''),
					0.02460
				),
				(
					(SELECT ID AS PARAMETER_TYPE_ID FROM BI_<env>.PARAMETER_TYPE WHERE CODE = ''AIE''),
					0,
					''P'',
					(SELECT ID FROM BI_<env>.ADJUSTMENT_FACTOR_TYPE WHERE code = ''MAINTENANCE_COST_FACTOR''),
					0.00508
				),
				(
					(SELECT ID AS PARAMETER_TYPE_ID FROM BI_<env>.PARAMETER_TYPE WHERE CODE = ''AIE''),
					0,
					''N'',
					(SELECT ID FROM BI_<env>.ADJUSTMENT_FACTOR_TYPE WHERE code = ''ACQUISITION_COST_FACTOR''),
					0.03424
				),
				(
					(SELECT ID AS PARAMETER_TYPE_ID FROM BI_<env>.PARAMETER_TYPE WHERE CODE = ''AIE''),
					0,
					''N'',
					(SELECT ID FROM BI_<env>.ADJUSTMENT_FACTOR_TYPE WHERE code = ''MAINTENANCE_COST_FACTOR''),
					0.00803
				)
		) factors(PARAMETER_TYPE_ID, SEGMENT_TYPE_ID, CONTRACT_NATURE, FACTOR_TYPE_ID, FACTOR)';
	   
	V_INS_DWH := 'INSERT INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' (
	    REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
	    FACTOR_TYPE_ID,
		FACTOR,
		HASH_KEY,  
		VALID_FROM,
		VALID_TO,
		PIVOT_KEY,
		SUPP_DATE,
		CREATED_REQUEST_ID,
		MODIFIED_REQUEST_ID,
		DELETED_REQUEST_ID
	)
	SELECT
		REPORTING_BASIS_ID,
	    CLOSING_DATE,
	    PARAMETER_TYPE_ID,
	    SEGMENT_TYPE_ID,
	    SEGMENT_CODE,
	    CONTRACT_NATURE_CODE,
	    SUBSIDIARY_CODE,
	    SUBLEDGER_CODE,
	    LOB_CODE,
	    DOMAIN_CODE,
	    PLAN_CATEGORY_ID,
		UNDERWRITING_YEAR,
	    CURRENCY_CODE,
	    FACTOR_TYPE_ID,
		CAST(FACTOR AS DECFLOAT) AS FACTOR,
		' || V_HASH_KEY || ' AS HASH_KEY,  
		VALID_FROM,
		VALID_TO,
		' || V_PIVOT_KEY || ' AS PIVOT_KEY,
		''' || V_SUPP_TS || ''' AS SUPP_DATE,
		REQUEST_ID AS CREATED_REQUEST_ID,
		NULL AS MODIFIED_REQUEST_ID,
		NULL AS DELETED_REQUEST_ID
	FROM
		SESSION.' || V_WRK_TBL || '';

	EXECUTE IMMEDIATE 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' WHERE CREATED_REQUEST_ID = ' || P_REQUEST_ID;

	RAISE NOTICE 'Executing V_INS_RA: ''%''', V_INS_RA;

	EXECUTE IMMEDIATE V_INS_RA;

	RAISE NOTICE 'Executing V_INS_ER: ''%''', V_INS_ER;

	EXECUTE IMMEDIATE V_INS_ER;

	RAISE NOTICE 'Executing V_INS_LRA: ''%''', V_INS_LRA;

	EXECUTE IMMEDIATE V_INS_LRA;

	RAISE NOTICE 'Executing V_INS_DEF: ''%''', V_INS_DEF;

	EXECUTE IMMEDIATE V_INS_DEF;

	RAISE NOTICE 'Executing V_INS_DWH: ''%''', V_INS_DWH;

	EXECUTE IMMEDIATE V_INS_DWH;

	EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_WRK_TBL || ' IF EXISTS';

	DROP TABLE SESSION.KEYS IF EXISTS;

EXCEPTION 
	WHEN OTHERS THEN 
		L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
		L_ERR_MSG := SQLERRM; 
		RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
		RETURN L_ERR_CD;

END;

END_PROC;