SET SCHEMA STAGING_<env>;

DROP PROCEDURE SP_LOAD_WRK_CAN_AXIS_PROJECTIONS;

CREATE OR REPLACE PROCEDURE SP_LOAD_WRK_CAN_AXIS_PROJECTIONS (BIGINT,CHARACTER VARYING(64),CHARACTER VARYING(64),CHARACTER VARYING(64),CHARACTER VARYING(64)) RETURNS INTEGER 
LANGUAGE nzplsql AS 
BEGIN_PROC 

DECLARE 
    P_REQUEST_ID            ALIAS FOR $1;
    P_SRC_SCHEMA            ALIAS FOR $2;
    P_SRC_TABLE             ALIAS FOR $3;
    P_TRG_SCHEMA            ALIAS FOR $4;
    P_TRG_TABLE             ALIAS FOR $5;
    L_ERR_CD                CHAR(5);
    L_ERR_MSG               VARCHAR(32000);
    V_REC                   RECORD;
    V_DELETE_QUERY          VARCHAR(32000);
    V_INSERT_QUERY          VARCHAR(32000);

BEGIN
SET ISOLATION TO UR;

V_DELETE_QUERY := 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' WHERE REQUEST_ID =' || P_REQUEST_ID || ' ';

V_INSERT_QUERY :=  'INSERT INTO ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || '
(   REPORT_NAME,
	CURRENT_DATE_TIME,
	DATASET_LONG_NAME,
	VALUATION_DATE,
	AOC_STEP,
	AOC_STEP_DETAIL,
	BASIS,
	BUSINESS_MATURITY,
	SENSITIVITY_VALUE,
	SENSITIVITY_TYPE,
	CLOSING_DATE,
	NAME,
	CONTRACT_NUMBER,
	SECTION_NUMBER,
	ASSUMED_CONTRACT_NUMBER,
	ASSUMED_SECTION_NUMBER,
	POLICY_UWY,
	CURRENCY,
	POSITION,
	PERIOD_DESCRIPTION,
	PROJECTION_MONTH,
	PROJECTION_YEAR,
	PROJECTION_AMOUNT,
	CREATED_BY,
	CREATED_DATE,
	SPLIT,
	LINE_NUMBER,
	REQUEST_ID  
	) 
SELECT
    REPORT_NAME,
    CASE WHEN LENGTH(CURRENT_DATE_TIME) <> 0 OR CURRENT_DATE_TIME <> '''' THEN TO_DATE(CURRENT_DATE_TIME, ''DD/MM/YYYY'') END AS CURRENT_DATE_TIME,
    DATASET_LONG_NAME,
    TO_DATE(VALUATION_DATE, ''DD/MM/YYYY'') AS VALUATION_DATE,
    AOC_STEP,
    AOC_STEP_DETAIL,
    BASIS,
    BUSINESS_MATURITY,
    CAST(SENSITIVITY_VALUE AS DECIMAL(10,6)) AS SENSITIVITY_VALUE,
    SENSITIVITY_TYPE,
    TO_DATE(CLOSING_DATE,''DD/MM/YYYY'') AS CLOSING_DATE,
    NAME,
    OMEGA_TREATY_NUMBER AS CONTRACT_NUMBER,
    OMEGA_SECTION AS SECTION_NUMBER,
    CASE WHEN LENGTH(GROSS_ASSUMED_OMEGA_TREATY_NUMBER) > 0 THEN GROSS_ASSUMED_OMEGA_TREATY_NUMBER END AS ASSUMED_CONTRACT_NUMBER,
    CASE WHEN LENGTH(GROSS_ASSUMED_OMEGA_TREATY_SECTION) > 0 THEN GROSS_ASSUMED_OMEGA_TREATY_SECTION END AS ASSUMED_SECTION_NUMBER,
    CASE WHEN LENGTH(POLICY_UWY) <> 0 THEN POLICY_UWY ELSE NULL END AS POLICY_UWY,
    CURRENCY,
    POSITION,
    PERIOD_DESCRIPTION,
    CASE
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M1_'' THEN 1
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M2_'' THEN 2
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M3_'' THEN 3
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M4_'' THEN 4
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M5_'' THEN 5
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M6_'' THEN 6
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M7_'' THEN 7
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M8_'' THEN 8
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M9_'' THEN 9
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M10'' THEN 10
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M11'' THEN 11
    WHEN SUBSTRING(PERIOD, 1, 3)= ''M12'' THEN 12
    WHEN SUBSTRING(PERIOD, 1, 2)= ''Q1'' THEN 3
    WHEN SUBSTRING(PERIOD, 1, 2)= ''Q2'' THEN 6
    WHEN SUBSTRING(PERIOD, 1, 2)= ''Q3'' THEN 9
    WHEN SUBSTRING(PERIOD, 1, 2)= ''Q4'' THEN 12
    WHEN SUBSTRING(PERIOD, 1, 1)= ''Y'' THEN 12 ELSE 12 END AS PROJECTION_MONTH,
    RIGHT(PERIOD,4) AS PROJECTION_YEAR,
    CASE WHEN LENGTH(PROJECTION_AMOUNT) <> 0 OR PROJECTION_AMOUNT <> '''' THEN CAST(PROJECTION_AMOUNT AS DECFLOAT) END AS PROJECTION_AMOUNT,
    ''CANADA_AXIS'' AS CREATED_BY,
    CURRENT_TIMESTAMP AS CREATED_DATE,
    Product_Type AS SPLIT,
    LINE_NUMBER,
' || P_REQUEST_ID || '
FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' STG
WHERE SUBSTRING(NAME, 6, 10 ) <> ''TOTAL''
';

RAISE NOTICE 'Executing V_DELETE_QUERY: ''%''',V_DELETE_QUERY; 
EXECUTE IMMEDIATE V_DELETE_QUERY; 

RAISE NOTICE 'Executing V_INSERT_QUERY: ''%''',V_INSERT_QUERY;
EXECUTE IMMEDIATE V_INSERT_QUERY;

EXCEPTION WHEN OTHERS THEN L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
	L_ERR_MSG := SQLERRM; 
	RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
	RETURN L_ERR_CD; 
 
END; 

END_PROC;