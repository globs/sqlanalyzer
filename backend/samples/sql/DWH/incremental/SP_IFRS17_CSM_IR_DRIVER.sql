CREATE OR REPLACE
PROCEDURE IFRS17_CSM_IR_DRIVER_DTM(VARCHAR(7),
VARCHAR(10),
VARCHAR(50),
VARCHAR(50),
SMALLINT,
VARCHAR(36),
VARCHAR(7),
SMALLINT,
VARCHAR(9)) RETURNS INTEGER
LANGUAGE nzplsql AS BEGIN_PROC
DECLARE/* 
usage :  CALL DWHD1_<env>.IFRS17_CSM_IR_DRIVER_DTM('Q12022', '2022-03-31','DWHD1_<env>','BI_<env>',1,'SGL','I17G',1111,'SEMI-YEAR');


truncate TCSM_IR_DRIVER_DTM;
select * from TCSM_IR_DRIVER_DTM where CASHFLOW_TYPE_CD<>'EXR' and AOC_RULE_CD<>'0429';
*/
P_CLOSING_QUARTER ALIAS FOR $1;
P_REAL_CLOSING_DATE ALIAS FOR $2;
P_DWH_SCHEMA ALIAS FOR $3;
P_BI_SCHEMA ALIAS FOR $4;
P_SCENARIO_ID ALIAS FOR $5;
P_ENTITY_ID ALIAS FOR $6;
P_NORM_CODE ALIAS FOR $7;
P_RUN_ID ALIAS FOR $8;
P_INTERVAL ALIAS FOR $9;


V_CLEAR_DATA_QUERY CHAR(64000);
V_QUERY CHAR(64000);
V_FILTER CHAR(64000);


L_ERR_CD CHAR(5);
L_ERR_MSG CHAR(32000);


V_CURRENT_TS TIMESTAMP;



BEGIN
V_CLEAR_DATA_QUERY = 'DELETE FROM ' || P_DWH_SCHEMA || '.TCSM_IR_DRIVER_DTM  
						WHERE REPORTING_DT = VARCHAR_FORMAT(''' || P_REAL_CLOSING_DATE || ''' , ''DD/MM/YYYY'') 
							AND CLOSING_QUARTER_CODE = ''' || P_CLOSING_QUARTER || '''
							AND SCENARIO_ID   = ' || P_SCENARIO_ID || ' 
							AND ENTITY_ID =''' || P_ENTITY_ID || '''
							AND RUN_ID   = ' || P_RUN_ID || '
							AND NORM_CD  = ''' || P_NORM_CODE || ''' 
							AND INTERVAL =''' || P_INTERVAL || ''' ';


EXECUTE IMMEDIATE V_CLEAR_DATA_QUERY;


EXECUTE IMMEDIATE 'COMMIT;';

IF P_INTERVAL = 'SEMI-YEAR' 
	THEN V_FILTER = 'AND (
 ' || '						(QUARTER(CLOSING_DATE)>2 AND QUARTER(PROJECTION_DATE)>2)
 ' || '						OR 
 ' || '						(QUARTER(CLOSING_DATE)<3 AND QUARTER(PROJECTION_DATE)<3)
 ' || '			)';
ELSE V_FILTER = '';
END IF;




V_QUERY = 'INSERT INTO ' || P_DWH_SCHEMA || '.TCSM_IR_DRIVER_DTM
 ' || 'WITH QRATE AS (
 ' || '		SELECT QUOT.*,VARCHAR_FORMAT(REPORTING_DT, ''DD/MM/YYYY'') REPORTING_DT
 ' || '		FROM ' || P_BI_SCHEMA || '.TBOCURQUOT2 QUOT
 ' || '		INNER JOIN (
 ' || '					SELECT SSD_CF||CUR_CF SSD_CUR,LAST_DAY(EXC_D +(3*QUARTER(EXC_D)-MONTH(EXC_D)) MONTH) REPORTING_DT
 ' || '							,MAX(EXC_D) EXC_D
 ' || '					FROM  ' || P_BI_SCHEMA || '.TBOCURQUOT2
 ' || '					WHERE EXC_CT=''C''
 ' || '					AND  YEAR(EXC_D) =  YEAR(''' || P_REAL_CLOSING_DATE || ''')
 ' || '					GROUP BY SSD_CF||CUR_CF,LAST_DAY(EXC_D +(3*QUARTER(EXC_D)-MONTH(EXC_D)) MONTH)) QRT
 ' || '			ON SSD_CF||CUR_CF = SSD_CUR
 ' || '			AND QUOT.EXC_D = QRT.EXC_D
 ' || '			AND EXC_CT=''C''
 ' || '		WHERE REPORTING_DT = ''' || P_REAL_CLOSING_DATE || ''')
 ' || ',TRT AS (
 ' || '		SELECT CTR_NF, SEC_NF, SECUWY_NF, ANNUAL_COHORT, PCPCUR_CF, SSD_CF, PROFIT_SIGN_FLG, INSURANCE_CONTRACT_GROUP_ID, ICG_FLAG
 ' || '			FROM ' || P_BI_SCHEMA || '.TCSM_TRT_CHARACS
 ' || '			WHERE REPORTING_DT = VARCHAR_FORMAT(''' || P_REAL_CLOSING_DATE || ''' , ''DD/MM/YYYY'') 
 ' || '				AND CLOSING_QUARTER_CODE = ''' || P_CLOSING_QUARTER || '''
 ' || '				AND SCENARIO_ID   = ' || P_SCENARIO_ID || ' 
 ' || '				AND ENTITY_ID =''' || P_ENTITY_ID || '''
 ' || '				AND NORM_CD  = ''' || P_NORM_CODE || ''' 
 ' || '				AND INTERVAL =''' || P_INTERVAL || ''' 
 ' || '				AND RUN_ID   = ' || P_RUN_ID || '
 ' || '			GROUP BY CTR_NF, SEC_NF, SECUWY_NF, ANNUAL_COHORT, PCPCUR_CF, SSD_CF, PROFIT_SIGN_FLG, INSURANCE_CONTRACT_GROUP_ID, ICG_FLAG)
 ' || 'SELECT  ''' || P_CLOSING_QUARTER || ''' ,
 ' || '    B.REPORTING_DT,
 ' || '    ' || P_SCENARIO_ID || '  SCENARIO_ID,
 ' || '    ''' || P_ENTITY_ID || ''' ENTITY_ID,
 ' || '    INSURANCE_CONTRACT_GROUP_ID,
 ' || '    RISK_DRIVER_NM,
 ' || '    CEDED_FLG,
 ' || '    NVL(PCPCUR_CF,CURRENCY_CODE) CURRENCY_CD,
 ' || '    PROJECTION_DT,
 ' || '    SUM(NVL((Q1.EXC_R/Q2.EXC_R),1)*RISK_DRIVER_AMT) RISK_DRIVER_AMT,
 ' || '    ''' || P_NORM_CODE || ''' NORM_CODE,
 ' || '	 	' || P_RUN_ID || ' AS RUN_ID,
 ' || '		''' || P_INTERVAL || ''' AS INTERVAL,
 ' || '		TO_CHAR(SYSDATE, ''YYYYMMDD'') AS ASOFDAY,
 ' || '		AOC_RULE_CD
 ' || 'FROM
 ' || '    (
 ' || '    SELECT  
 ' || '		VARCHAR_FORMAT(CLOSING_DATE, ''DD/MM/YYYY'')  AS REPORTING_DT,
 ' || '			CASE WHEN ICG_FLAG=''Y'' AND ANNUAL_COHORT IS NOT NULL 
 ' || '				THEN CONTRACT_NUMBER || ''_'' || SECTION_NUMBER || ''_'' || ANNUAL_COHORT
 ' || '				ELSE TRT.INSURANCE_CONTRACT_GROUP_ID
 ' || '			END	 AS INSURANCE_CONTRACT_GROUP_ID,
 ' || '		P.CODE AS RISK_DRIVER_NM,
 ' || '		CEDED_FLG,
 ' || '		PR.CURRENCY_CODE ,PCPCUR_CF,SSD_CF,
 ' || '		VARCHAR_FORMAT(PROJECTION_DATE, ''DD/MM/YYYY'')  PROJECTION_DT,
 ' || '		AOC_RULE_CD,
 ' || '		SUM(AMOUNT) AS RISK_DRIVER_AMT
 ' || '	FROM ' || P_BI_SCHEMA || '.PROJECTION_FACT PR
 ' || '	    INNER JOIN (
 ' || '		        SELECT
 ' || '		            CASE WHEN nvl(MATH_OPERATOR,'''')=''''  THEN MP.POSITION_ID
 ' || '		                ELSE P.ID
 ' || '		            END POSITION_ID,
 ' || '		            ID, POSITION_TYPE_ID, CODE
 ' || '		        FROM ' || P_BI_SCHEMA || '.POSITION_MAPPING MP
 ' || '		        INNER JOIN ' || P_BI_SCHEMA || '.POSITION P 
 ' || '		        	ON MP.MAPPING_POSITION_ID = P.ID
 ' || '		            AND P.IS_CSM
 ' || '		            AND P.CSM_POSITION_TYPE_ID = 2
 ' || '		            AND P.VALID_TO = ''9999-12-31''
 ' || '		            AND MP.VALID_TO = ''9999-12-31'') P 
 ' || '	        ON PR.POSITION_ID = P.POSITION_ID
 ' || '	INNER JOIN ' || P_BI_SCHEMA || '.LEVEL_OF_ANALYSIS LOA
 ' || '		ON LOA.ID=PR.LEVEL_OF_ANALYSIS_ID
 ' || '		AND LOA.LOC_CODE_CSM <> ''''
 ' || '		AND LOA.VALID_TO = ''9999-12-31''
 ' || '	INNER JOIN TRT ON 
 ' || ' 	PR.CONTRACT_NUMBER = TRT.CTR_NF 
 ' || ' 	AND PR.SECTION_NUMBER = TRT.SEC_NF 
 ' || ' 	AND 
 ' || ' 		CASE
 ' || '				WHEN TRT.ICG_FLAG = ''Y'' THEN PR.POLICY_UW_YEAR = TRT.SECUWY_NF
 ' || '				ELSE 1=1
 ' || '			END
 ' || '	INNER JOIN  (SELECT CTR_NF,''N'' CEDED_FLG  FROM ' || P_BI_SCHEMA || '.TUWCTR GROUP BY CTR_NF
 ' || '				UNION
 ' || '				SELECT RETCTR_NF, ''Y'' CEDED_FLG  FROM ' || P_BI_SCHEMA || '.TUWRETRO GROUP BY RETCTR_NF
 ' || '				) CTR
 ' || '		ON CTR.CTR_NF= PR.CONTRACT_NUMBER 
 ' || '	WHERE  PR.LEVEL_OF_ANALYSIS_ID=16
 ' || '		AND PR.VALID_TO =''9999-12-31'' 
 ' || '		AND PR.SUPP_DATE=''9999-12-31'' 
 ' || '		AND CLOSING_DATE= ''' || P_REAL_CLOSING_DATE || '''
 ' || '		AND (CLOSING_DATE < PROJECTION_DATE
 ' || '			OR (YEAR(CLOSING_DATE) = YEAR(PROJECTION_DATE)
 ' || '				' || V_FILTER || '
 ' || '			))
 ' || '	GROUP BY  CLOSING_DATE,
 ' || '			CASE WHEN ICG_FLAG=''Y'' AND ANNUAL_COHORT IS NOT NULL 
 ' || '				THEN CONTRACT_NUMBER || ''_'' || SECTION_NUMBER || ''_'' || ANNUAL_COHORT
 ' || '				ELSE TRT.INSURANCE_CONTRACT_GROUP_ID
 ' || '			END,
 ' || '			P.CODE ,
 ' || '			CEDED_FLG,
 ' || '			CURRENCY_CODE ,
 ' || '			PCPCUR_CF,SSD_CF,
 ' || '			PROJECTION_DATE,
 ' || '			AOC_RULE_CD
 ' || '		) B
 ' || 'LEFT JOIN QRATE  Q1
 ' || '	ON (Q1.SSD_CF = B.SSD_CF 
 ' || '	AND Q1.CUR_CF = B.CURRENCY_CODE
 ' || '	AND Q1.EXC_CT = ''C''
 ' || '	AND Q1.REPORTING_DT =B.REPORTING_DT)
 ' || 'LEFT JOIN QRATE  Q2
 ' || '	ON (Q2.SSD_CF = B.SSD_CF 
 ' || '	AND Q2.CUR_CF = B.PCPCUR_CF
 ' || '	AND Q2.EXC_CT = ''C''
 ' || '	AND Q2.REPORTING_DT =B.REPORTING_DT)
 ' || 'GROUP BY B.REPORTING_DT,
 ' || '    INSURANCE_CONTRACT_GROUP_ID,
 ' || '    RISK_DRIVER_NM,
 ' || '    CEDED_FLG,
 ' || '    NVL(PCPCUR_CF,CURRENCY_CODE),
 ' || '    PROJECTION_DT,
 ' || '    AOC_RULE_CD';

EXECUTE IMMEDIATE V_QUERY;


EXECUTE IMMEDIATE 'COMMIT;';


EXCEPTION
WHEN OTHERS THEN L_ERR_CD := substr(SQLERRM,8,5);


L_ERR_MSG := SQLERRM;


RAISE EXCEPTION '% Error while executing SQL statement',
L_ERR_MSG;


RETURN L_ERR_CD;

END;


END_PROC;