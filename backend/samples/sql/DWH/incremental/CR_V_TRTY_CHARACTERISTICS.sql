SET SQL_COMPAT='NPS';

DROP VIEW V_TRTY_CHARACTERISTICS;

CREATE OR REPLACE VIEW V_TRTY_CHARACTERISTICS AS
SELECT
    REPORTING_DT,
    SCENARIO_ID,
    ENTITY_ID_GRP,
    ENTITY_ID_PAR,
    ENTITY_ID_LOC,
    LEGALENTITY_CF,
    LEGALENTITY_LL,
    PARTLEGENTITY_CF,
    PARTLEGENTITY_LL,
    LEBRANCH_CF,
    LEBRANCH_LL,
    PARTLEBRANCH_CF,
    PARTLEBRANCH_LL,
    PRDSIT_CF,
    SSD_CF,
    SSD_LS,
    ESB_CF,
    ESB_LS,
    CTR_NF,
    CTRPCPNAM_LL,
    SEC_NF,
    SECLAB_LM,
    UOA_CUR,
    TRT_CUR,
    PCPCUR_CF,
    SSDCUR_CF,
    UOA_GRP,
    UOA_PAR,
    UOA_LOC,
    PROFIT_SIGN_GRP,
    PROFIT_SIGN_PAR,
    PROFIT_SIGN_LOC,
    PROFIT_SIGN_FLG,
    PROFIT_LVL_GRP,
    PROFIT_LVL_PAR,
    PROFIT_LVL_LOC,
    SEG_PAR_CF,
    SEG_PAR_LS,
    SEG_LOC_CF,
    SEG_LOC_LS,
    SEG_GRP_CF,
    SEG_GRP_LS,
    LOB_CF,
    LOB_HS,
    LIFPRDLIN_CF,
    LIFPRDLIN_LL,
    LIFLOB_CF,
    LIFLOB_LL,
    USGAAP_CT,
    USGAAP_CT_LB,
    BUSUNIT_CF,
    BUSUNIT_LM,
    MRKUNT_NT,
    MRKUNT_LS,
    SUBMRK_NT,
    SUBMRK_LS,
    CR_NF,
    CR_LM,
    ANNUAL_COHORT,
    FRSSECUWY_NF,
    CTRUWY_NF,
    SECUWY_NF,
    CTRINC_D,
    SECINC_D,
    CTRFRSINC_D,
    SECFRSINC_D,
    CTRFRSPAYM_D,
    SECFRSPAYM_D,
    FRSPRICONER_D,
    TERM_D,
    CANCTR_D,
    SECCAN_D,
    CTRNEW_CT,
    RETFLG_CF,
    INTOPEFL_CF,
    TERMPERM_CF,
    NEWORMODIF_CF,
    MODTYP_CF,
    SECSTS_CT,
    SECSTS_LS,
    ACCADMTYP_CT,
    SECACCSTS_CT,
    SECACCSTS_LS,
    NAT_CF,
    NAT_GD,
    ACCFRQ_CT,
    LIFTRTTYP_CF,
    LIFTRTTYP_LS,
    RETROTYP_CF,
    RETRO_RA_LO_CF,
    RENTYP_CT,
    CTROLDNBR_LM,
    PARSEC_NF,
    ESTCRB_CT,
    INSURANCE_CONTRACT_GROUP_ID,
    GRPRATEINDEX_CT,
    PARRATEINDEX_CT,
    LOCRATEINDEX_CT,
    COV_RTO,
    COC_RTO,
    X_DIM_RETRO_PATH_ID,
    INTERNAL_RETRO_FLG,
    TRANSITION_APPROACH_CD_GRP,
    TRANSITION_FLG_GRP,
    EXP_ADJ_PREM_CSM_ALLOC_RAT_GRP,
    EXP_ADJ_RCOM_CSM_ALLOC_RAT_GRP,
    EXP_ADJ_NDIC_CSM_ALLOC_RAT_GRP,
    TRANSITION_LOCKINDATE_GRP,
    TRANSITION_APPROACH_CD_PAR,
    TRANSITION_FLG_PAR,
    EXP_ADJ_PREM_CSM_ALLOC_RAT_PAR,
    EXP_ADJ_RCOM_CSM_ALLOC_RAT_PAR,
    EXP_ADJ_NDIC_CSM_ALLOC_RAT_PAR,
    TRANSITION_LOCKINDATE_PAR,
    TRANSITION_APPROACH_CD_LOC,
    TRANSITION_FLG_LOC,
    EXP_ADJ_PREM_CSM_ALLOC_RAT_LOC,
    EXP_ADJ_RCOM_CSM_ALLOC_RAT_LOC,
    EXP_ADJ_NDIC_CSM_ALLOC_RAT_LOC,
    TRANSITION_LOCKINDATE_LOC,
    NPR_DEFAULT_INI_RAT,
    NPR_DEFAULT_CURRENT_RAT,
    NPR_RECOVERY_INI_RAT,
    NPR_RECOVERY_CURRENT_RAT,
    NPR_CALCULATION_FLG,
    REINS_FIXED_RECOVER_PCT,
    TRANSITION_INPUT_CSM_AMT,
    DIRECT_TRANSITION_ACQ_COSTS_AMT
FROM
    (
    SELECT
        CAST(REPORTING_DT AS CHAR(10)) AS REPORTING_DT,
        CAST(SCENARIO_ID AS BIGINT) AS SCENARIO_ID,
        CAST(ENTITY_ID_GRP AS CHAR(36)) AS ENTITY_ID_GRP,
        CAST(ENTITY_ID_PAR AS CHAR(36)) AS ENTITY_ID_PAR,
        CAST(ENTITY_ID_LOC AS CHAR(36)) AS ENTITY_ID_LOC,
        CAST(LEGALENTITY_CF AS CHAR(5)) AS LEGALENTITY_CF,
        CAST(LEGALENTITY_LL AS CHAR(32)) AS LEGALENTITY_LL,
        CAST(PARTLEGENTITY_CF AS CHAR(5)) AS PARTLEGENTITY_CF,
        CAST(PARTLEGENTITY_LL AS CHAR(32)) AS PARTLEGENTITY_LL,
        CAST(LEBRANCH_CF AS CHAR(5)) AS LEBRANCH_CF,
        CAST(LEBRANCH_LL AS CHAR(32)) AS LEBRANCH_LL,
        CAST(PARTLEBRANCH_CF AS CHAR(5)) AS PARTLEBRANCH_CF,
        CAST(PARTLEBRANCH_LL AS CHAR(32)) AS PARTLEBRANCH_LL,
        CAST(PRDSIT_CF AS CHAR(4)) AS PRDSIT_CF,
        SSD_CF,
        CAST(SSD_LS AS CHAR(12)) AS SSD_LS,
        ESB_CF,
        CAST(ESB_LS AS CHAR(16)) AS ESB_LS,
        CAST(CTR_NF AS CHAR(9)) AS CTR_NF,
        CAST(CTRPCPNAM_LL AS CHAR(64)) AS CTRPCPNAM_LL,
        SEC_NF,
        CAST(SECLAB_LM AS CHAR(32)) AS SECLAB_LM,
        UOA_CUR,
        CAST(TRT_CUR AS CHAR(3)) AS TRT_CUR,
        CAST(PCPCUR_CF AS CHAR(3)) AS PCPCUR_CF,
        CAST(SSDCUR_CF AS CHAR(3)) AS SSDCUR_CF,
        CAST(UOA_GRP AS CHAR(36)) AS UOA_GRP,
        CAST(UOA_PAR AS CHAR(36)) AS UOA_PAR,
        CAST(UOA_LOC AS CHAR(36)) AS UOA_LOC,
        CAST(PROFIT_SIGN_GRP AS CHAR(36))AS PROFIT_SIGN_GRP,
        CAST(PROFIT_SIGN_PAR AS CHAR(36))AS PROFIT_SIGN_PAR,
        CAST(PROFIT_SIGN_LOC AS CHAR(36))AS PROFIT_SIGN_LOC,
        PROFIT_SIGN_FLG,
        CAST(PROFIT_LVL_GRP AS CHAR(36)) AS PROFIT_LVL_GRP,
        CAST(PROFIT_LVL_PAR AS CHAR(36)) AS PROFIT_LVL_PAR,
        CAST(PROFIT_LVL_LOC AS CHAR(36)) AS PROFIT_LVL_LOC,
        CAST(SEG_PAR_CF AS CHAR(30)) AS SEG_PAR_CF,
        CAST(SEG_PAR_LS AS CHAR(64)) AS SEG_PAR_LS,
        CAST(SEG_LOC_CF AS CHAR(30)) AS SEG_LOC_CF,
        CAST(SEG_LOC_LS AS CHAR(64)) AS SEG_LOC_LS,
        CAST(SEG_GRP_CF AS CHAR(30)) AS SEG_GRP_CF,
        CAST(SEG_GRP_LS AS CHAR(64)) AS SEG_GRP_LS,
        CAST(LOB_CF AS CHAR(2)) AS LOB_CF,
        CAST(LOB_HS AS CHAR(20)) AS LOB_HS,
        CAST(LIFPRDLIN_CF AS CHAR(5)) AS LIFPRDLIN_CF,
        CAST(LIFPRDLIN_LL AS CHAR(32)) AS LIFPRDLIN_LL,
        CAST(LIFLOB_CF AS CHAR(5)) AS LIFLOB_CF,
        CAST(LIFLOB_LL AS CHAR(32)) AS LIFLOB_LL,
        USGAAP_CT,
        CAST(USGAAP_CT_LB AS CHAR(32)) AS USGAAP_CT_LB,
        CAST(BUSUNIT_CF AS VARCHAR(8)) AS BUSUNIT_CF,
        CAST(BUSUNIT_LM AS CHAR(32)) AS BUSUNIT_LM,
        MRKUNT_NT,
        CAST(MRKUNT_LS AS CHAR(32)) AS MRKUNT_LS,
        SUBMRK_NT,
        CAST(SUBMRK_LS AS CHAR(26)) AS SUBMRK_LS,
        CAST(CR_NF AS CHAR(9)) AS CR_NF,
        CAST(CR_LM AS CHAR(5)) AS CR_LM,
        ANNUAL_COHORT,
        FRSSECUWY_NF,
        CTRUWY_NF,
        CASE
            WHEN ACCADMTYP_CT = 1
            AND SECSTS_CT IN (14,
            16) THEN MAX(SECUWY_NF)
            WHEN ACCADMTYP_CT = 4
            AND SECSTS_CT = 19 THEN MAX(SECUWY_NF)
            WHEN ACCADMTYP_CT IN (2,
            3,
            5)
            AND SECSTS_CT IN (14,
            16,
            17,
            19) THEN SECUWY_NF
        END AS SECUWY_NF,
        CAST(CTRINC_D AS CHAR(10)) AS CTRINC_D,
        CAST(SECINC_D AS CHAR(10)) AS SECINC_D,
        CAST(CTRFRSINC_D AS CHAR(10)) AS CTRFRSINC_D,
        CAST(SECFRSINC_D AS CHAR(10)) AS SECFRSINC_D,
        CAST(CTRFRSPAYM_D AS CHAR(10)) AS CTRFRSPAYM_D,
        CAST(SECFRSPAYM_D AS CHAR(10)) AS SECFRSPAYM_D,
        CAST(FRSPRICONER_D AS CHAR(10))AS FRSPRICONER_D,
        CAST(TERM_D AS CHAR(10)) AS TERM_D,
        CAST(CANCTR_D AS CHAR(10)) AS CANCTR_D,
        CAST(SECCAN_D AS CHAR(10)) AS SECCAN_D,
        CAST(CTRNEW_CT AS CHAR(1)) AS CTRNEW_CT,
        RETFLG_CF,
        INTOPEFL_CF,
        CAST(TERMPERM_CF AS CHAR(12)) AS TERMPERM_CF,
        NEWORMODIF_CF,
        MODTYP_CF,
        SECSTS_CT,
        CAST(SECSTS_LS AS CHAR(20)) AS SECSTS_LS,
        ACCADMTYP_CT,
        SECACCSTS_CT,
        CAST(SECACCSTS_LS AS CHAR(16)) AS SECACCSTS_LS,
        NAT_CF,
        CAST(NAT_GD AS CHAR(4)) AS NAT_GD,
        ACCFRQ_CT,
        CAST(LIFTRTTYP_CF AS CHAR(2)) AS LIFTRTTYP_CF,
        CAST(LIFTRTTYP_LS AS CHAR(20)) AS LIFTRTTYP_LS,
        CAST(RETROTYP_CF AS CHAR(17)) AS RETROTYP_CF,
        CAST(RETRO_RA_LO_CF AS CHAR(38))AS RETRO_RA_LO_CF,
        RENTYP_CT,
        CAST(CTROLDNBR_LM AS CHAR(10)) AS CTROLDNBR_LM,
        PARSEC_NF,
        CAST(ESTCRB_CT AS CHAR(1)) AS ESTCRB_CT,
        CAST(INSURANCE_CONTRACT_GROUP_ID AS CHAR(36)) AS INSURANCE_CONTRACT_GROUP_ID,
        CAST(GRPRATEINDEX_CT AS CHAR(32)) AS GRPRATEINDEX_CT,
        CAST(PARRATEINDEX_CT AS CHAR(32)) AS PARRATEINDEX_CT,
        CAST(LOCRATEINDEX_CT AS CHAR(32)) AS LOCRATEINDEX_CT,
        CAST(COV_RTO AS DECIMAL(8,
        2)) AS COV_RTO,
        CAST(COC_RTO AS DECIMAL(8,
        2)) AS COC_RTO,
        CAST(X_DIM_RETRO_PATH_ID AS CHAR(32)) AS X_DIM_RETRO_PATH_ID,
        CAST(INTERNAL_RETRO_FLG AS CHAR(1)) AS INTERNAL_RETRO_FLG,
        CAST(TRANSITION_APPROACH_CD_GRP AS CHAR(10)) AS TRANSITION_APPROACH_CD_GRP,
        CAST(TRANSITION_FLG_GRP AS CHAR(1)) AS TRANSITION_FLG_GRP,
        CAST(EXP_ADJ_PREM_CSM_ALLOC_RAT_GRP AS DECFLOAT) AS EXP_ADJ_PREM_CSM_ALLOC_RAT_GRP,
        CAST(EXP_ADJ_RCOM_CSM_ALLOC_RAT_GRP AS DECFLOAT) AS EXP_ADJ_RCOM_CSM_ALLOC_RAT_GRP,
        CAST(EXP_ADJ_NDIC_CSM_ALLOC_RAT_GRP AS DECFLOAT) AS EXP_ADJ_NDIC_CSM_ALLOC_RAT_GRP,
        TRANSITION_LOCKINDATE_GRP,
        CAST(TRANSITION_APPROACH_CD_PAR AS CHAR(10)) AS TRANSITION_APPROACH_CD_PAR,
        CAST(TRANSITION_FLG_PAR AS CHAR(1)) AS TRANSITION_FLG_PAR,
        CAST(EXP_ADJ_PREM_CSM_ALLOC_RAT_PAR AS DECFLOAT) AS EXP_ADJ_PREM_CSM_ALLOC_RAT_PAR,
        CAST(EXP_ADJ_RCOM_CSM_ALLOC_RAT_PAR AS DECFLOAT) AS EXP_ADJ_RCOM_CSM_ALLOC_RAT_PAR,
        CAST(EXP_ADJ_NDIC_CSM_ALLOC_RAT_PAR AS DECFLOAT) AS EXP_ADJ_NDIC_CSM_ALLOC_RAT_PAR,
        TRANSITION_LOCKINDATE_PAR,
        CAST(TRANSITION_APPROACH_CD_LOC AS CHAR(10)) AS TRANSITION_APPROACH_CD_LOC,
        CAST(TRANSITION_FLG_LOC AS CHAR(1)) AS TRANSITION_FLG_LOC,
        CAST(EXP_ADJ_PREM_CSM_ALLOC_RAT_LOC AS DECFLOAT) AS EXP_ADJ_PREM_CSM_ALLOC_RAT_LOC,
        CAST(EXP_ADJ_RCOM_CSM_ALLOC_RAT_LOC AS DECFLOAT) AS EXP_ADJ_RCOM_CSM_ALLOC_RAT_LOC,
        EXP_ADJ_NDIC_CSM_ALLOC_RAT_LOC,
        TRANSITION_LOCKINDATE_LOC,
        CAST (NPR_DEFAULT_INI_RAT AS DECIMAL(9,8))AS  NPR_DEFAULT_INI_RAT,
        CAST (NPR_DEFAULT_CURRENT_RAT AS DECIMAL(9,8))AS NPR_DEFAULT_CURRENT_RAT,
        CAST (NPR_RECOVERY_INI_RAT AS DECIMAL(9,8))AS NPR_RECOVERY_INI_RAT,
        CAST (NPR_RECOVERY_CURRENT_RAT AS DECIMAL(9,8))AS NPR_RECOVERY_CURRENT_RAT,
        CAST(NPR_CALCULATION_FLG AS CHAR(1)) AS NPR_CALCULATION_FLG,
        CAST(REINS_FIXED_RECOVER_PCT AS DECFLOAT) AS REINS_FIXED_RECOVER_PCT,
        CAST(TRANSITION_INPUT_CSM_AMT AS DECFLOAT) AS TRANSITION_INPUT_CSM_AMT,
        CAST(DIRECT_TRANSITION_ACQ_COSTS_AMT AS DECFLOAT) AS DIRECT_TRANSITION_ACQ_COSTS_AMT
    FROM
        (
        SELECT
            CASE
                WHEN (DAY(CURRENT TIMESTAMP) BETWEEN 1 AND 31)
                AND (MONTH(CURRENT TIMESTAMP) BETWEEN 1 AND 3) THEN '31/03/' || YEAR(CURRENT_DATE)
                WHEN (DAY(CURRENT TIMESTAMP) BETWEEN 1 AND 31)
                AND (MONTH(CURRENT TIMESTAMP) BETWEEN 4 AND 6) THEN '30/06/' || YEAR(CURRENT_DATE)
                WHEN (DAY(CURRENT TIMESTAMP) BETWEEN 1 AND 31)
                AND (MONTH(CURRENT TIMESTAMP) BETWEEN 7 AND 9) THEN '30/09/' || YEAR(CURRENT_DATE)
                WHEN (DAY(CURRENT TIMESTAMP) BETWEEN 1 AND 31)
                AND (MONTH(CURRENT TIMESTAMP) BETWEEN 10 AND 12)THEN '31/12/' || YEAR(CURRENT_DATE)
            END AS REPORTING_DT,
            NULL AS SCENARIO_ID,
            'SGL' AS ENTITY_ID_GRP,
            NULL AS ENTITY_ID_PAR,
            NULL AS ENTITY_ID_LOC,
            A.LEGALENTITY_CF AS LEGALENTITY_CF,
            A.LEGALENTITY_LL AS LEGALENTITY_LL,
            A.PARTLEGENTITY_CF AS PARTLEGENTITY_CF,
            A.PARTLEGENTITY_LL AS PARTLEGENTITY_LL,
            A.LEBRANCH_CF AS LEBRANCH_CF,
            A.LEBRANCH_LL AS LEBRANCH_LL,
            A.PARTLEBRANCH_CF AS PARTLEBRANCH_CF,
            A.PARTLEBRANCH_LL AS PARTLEBRANCH_LL,
            C.PRDSIT_CF AS PRDSIT_CF,
            B.SSD_CF AS SSD_CF,
            C.SSD_LL AS SSD_LS,
            A.ACCESB_CF AS ESB_CF,
            D.ESB_LL AS ESB_LS,
            B.CTR_NF AS CTR_NF,
            B.CTRPCPNAM_LL AS CTRPCPNAM_LL,
            A.SEC_NF AS SEC_NF,
            A.SECLAB_LM AS SECLAB_LM,
            'EUR' AS UOA_CUR,
            C.SSDCUR_CF AS TRT_CUR,
            A.PCPCUR_CF AS PCPCUR_CF,
            C.SSDCUR_CF AS SSDCUR_CF,
            NULL AS UOA_GRP,
            NULL AS UOA_PAR,
            NULL AS UOA_LOC,
            CASE
                WHEN E.GRPINIPRO_CF = 1 THEN 'ONEROUS'
                WHEN E.GRPINIPRO_CF = 2 THEN 'REMAINING'
                WHEN E.GRPINIPRO_CF = 3 THEN 'NOT_ONEROUS'
                ELSE ''
            END AS PROFIT_SIGN_GRP,
            CASE
                WHEN E.PARINIPRO_CF = 1 THEN 'ONEROUS'
                WHEN E.PARINIPRO_CF = 2 THEN 'REMAINING'
                WHEN E.PARINIPRO_CF = 3 THEN 'NOT_ONEROUS'
                ELSE ''
            END AS PROFIT_SIGN_PAR,
            CASE
                WHEN E.LOCINIPRO_CF = 1 THEN 'ONEROUS'
                WHEN E.LOCINIPRO_CF = 2 THEN 'REMAINING'
                WHEN E.LOCINIPRO_CF = 3 THEN 'NOT_ONEROUS'
                ELSE ''
            END AS PROFIT_SIGN_LOC,
            NULL AS PROFIT_SIGN_FLG,
            COALESCE(J.CR_NF,
            B.CTR_NF) AS PROFIT_LVL_GRP,
            NULL AS PROFIT_LVL_PAR,
            NULL AS PROFIT_LVL_LOC,
            E.PARIFRSSEG_CT AS SEG_PAR_CF,
            E.PARIFRSSEG_LL AS SEG_PAR_LS,
            E.LOCIFRSSEG_CT AS SEG_LOC_CF,
            E.LOCIFRSSEG_LL AS SEG_LOC_LS,
            NVL(E.GRPIFRSSEG1_CT,
            A.CTR_NF) AS SEG_GRP_CF,
            E.GRPIFRSSEG1_LL AS SEG_GRP_LS,
            A.LOB_CF AS LOB_CF,
            A.LOB_HS AS LOB_HS,
            A.LIFPRDLINA_CF AS LIFPRDLIN_CF,
            A.LIFPRDLINA_LL AS LIFPRDLIN_LL,
            A.LIFLOBA_CF AS LIFLOB_CF,
            A.LIFLOBA_LL AS LIFLOB_LL,
            A.USGAAP_CT AS USGAAP_CT,
            I.COLVAL_LM AS USGAAP_CT_LB,
            CASE
                WHEN A.BUSUNIT_CF IS NOT NULL THEN CAST(A.BUSUNIT_CF AS CHAR)
                WHEN A.BUSUNIT_CF IS NULL THEN A.CTR_NF
            END AS BUSUNIT_CF,
            A.BUSUNIT_LM AS BUSUNIT_LM,
            A.MRKUNT_NT AS MRKUNT_NT,
            A.MRKUNT_LS AS MRKUNT_LS,
            A.SUBMRK_NT AS SUBMRK_NT,
            A.SUBMRK_LS AS SUBMRK_LS,
            J.CR_NF AS CR_NF,
            NULL AS CR_LM,
            B.FRSCTRUWY_NF AS ANNUAL_COHORT,
            A.FRSSECUWY_NF AS FRSSECUWY_NF,
            B.UWY_NF AS CTRUWY_NF,
            A.UWY_NF AS SECUWY_NF,
            VARCHAR_FORMAT(B.CTRINC_D,
            'DD/MM/YYYY') AS CTRINC_D,
            VARCHAR_FORMAT(A.SECINC_D,
            'DD/MM/YYYY') AS SECINC_D,
            VARCHAR_FORMAT(B.FRSINC_D,
            'DD/MM/YYYY') AS CTRFRSINC_D,
            VARCHAR_FORMAT(INCEP_DATE.SECINC_D,
            'DD/MM/YYYY') AS SECFRSINC_D,
            NULL AS CTRFRSPAYM_D,
            NULL AS SECFRSPAYM_D,
            NULL AS FRSPRICONER_D,
            NULL AS TERM_D,
            VARCHAR_FORMAT(L.CAN_DT,
            'DD/MM/YYYY') AS CANCTR_D,
            VARCHAR_FORMAT(A.SECCAN_D,
            'DD/MM/YYYY') AS SECCAN_D,
            B.CTRNEW_CT AS CTRNEW_CT,
            'N' AS RETFLG_CF,
            NULL AS INTOPEFL_CF,
            NULL AS TERMPERM_CF,
            'N' AS NEWORMODIF_CF,
            L.DATATYP_CT AS MODTYP_CF,
            A.SECSTS_CT AS SECSTS_CT,
            A.SECSTS_LS AS SECSTS_LS,
            A.ACCADMTYP_CT AS ACCADMTYP_CT,
            A.SECACCSTS_CT AS SECACCSTS_CT,
            A.SECACCSTS_LS AS SECACCSTS_LS,
            CAST (A.NAT_CF AS BIGINT) AS NAT_CF,
            A.NAT_GD AS NAT_GD,
            B.ACCFRQ_CT AS ACCFRQ_CT,
            A.LIFTRTTYP_CF AS LIFTRTTYP_CF,
            A.LIFTRTTYP_LS AS LIFTRTTYP_LS,
            NULL AS RETROTYP_CF,
            NULL AS RETRO_RA_LO_CF,
            B.RENTYP_CT AS RENTYP_CT,
            B.CTROLDNBR_LM AS CTROLDNBR_LM,
            A.PARSEC_NF AS PARSEC_NF,
            L.ESTCRB_CT AS ESTCRB_CT,
            A.CTR_NF || '_' || A.SEC_NF || '_' || A.UWY_NF AS INSURANCE_CONTRACT_GROUP_ID,
            E.GRPRATEINDEX_CT AS GRPRATEINDEX_CT,
            E.PARRATEINDEX_CT,
            E.LOCRATEINDEX_CT,
            0.06 AS COV_RTO,
            2 AS COC_RTO,
            LIKS.RETCTR_NF_LVL1 AS X_DIM_RETRO_PATH_ID,
            CASE
                WHEN E.CTR_NF IN (
                SELECT
                    CTR_NF
                FROM
                    BI_<env>.TSSDACTR) THEN 1
                ELSE 0
            END AS INTERNAL_RETRO_FLG,
            CASE
                WHEN E.GRPIFRSTRA_CT = 1 THEN 'FRA'
                WHEN E.GRPIFRSTRA_CT = 2 THEN 'MRA'
                WHEN E.GRPIFRSTRA_CT = 3 THEN 'FV'
                WHEN E.GRPIFRSTRA_CT = 4 THEN 'OTHERS'
            END AS TRANSITION_APPROACH_CD_GRP,
            CASE
                WHEN E.GRPIFRSTRA_CT IS NOT NULL THEN 1
                ELSE 0
            END AS TRANSITION_FLG_GRP,
            NULL AS EXP_ADJ_PREM_CSM_ALLOC_RAT_GRP,
            NULL AS EXP_ADJ_RCOM_CSM_ALLOC_RAT_GRP,
            1 AS EXP_ADJ_NDIC_CSM_ALLOC_RAT_GRP,
            NULL AS TRANSITION_LOCKINDATE_GRP,
            CASE
                WHEN E.PARIFRSTRA_CT = 1 THEN 'FRA'
                WHEN E.PARIFRSTRA_CT = 2 THEN 'MRA'
                WHEN E.PARIFRSTRA_CT = 3 THEN 'FV'
                WHEN E.PARIFRSTRA_CT = 4 THEN 'OTHERS'
            END AS TRANSITION_APPROACH_CD_PAR,
            CASE
                WHEN E.PARIFRSTRA_CT IS NOT NULL THEN 1
                ELSE 0
            END AS TRANSITION_FLG_PAR,
            NULL AS EXP_ADJ_PREM_CSM_ALLOC_RAT_PAR,
            NULL AS EXP_ADJ_RCOM_CSM_ALLOC_RAT_PAR,
            1 AS EXP_ADJ_NDIC_CSM_ALLOC_RAT_PAR,
            NULL AS TRANSITION_LOCKINDATE_PAR,
            CASE
                WHEN E.LOCIFRSTRA_CT = 1 THEN 'FRA'
                WHEN E.LOCIFRSTRA_CT = 2 THEN 'MRA'
                WHEN E.LOCIFRSTRA_CT = 3 THEN 'FV'
                WHEN E.LOCIFRSTRA_CT = 4 THEN 'OTHERS'
            END AS TRANSITION_APPROACH_CD_LOC,
            CASE
                WHEN E.LOCIFRSTRA_CT IS NOT NULL THEN 1
                ELSE 0
            END AS TRANSITION_FLG_LOC,
            NULL AS EXP_ADJ_PREM_CSM_ALLOC_RAT_LOC,
            NULL AS EXP_ADJ_RCOM_CSM_ALLOC_RAT_LOC,
            1 AS EXP_ADJ_NDIC_CSM_ALLOC_RAT_LOC,
            NULL AS TRANSITION_LOCKINDATE_LOC,
            NULL AS NPR_DEFAULT_INI_RAT,
            NULL AS NPR_DEFAULT_CURRENT_RAT,
            NULL AS NPR_RECOVERY_INI_RAT,
            NULL AS NPR_RECOVERY_CURRENT_RAT,
            NULL AS NPR_CALCULATION_FLG,
            NULL AS REINS_FIXED_RECOVER_PCT,
            NULL AS TRANSITION_INPUT_CSM_AMT,
            NULL AS DIRECT_TRANSITION_ACQ_COSTS_AMT
        FROM
            BI_<env>.TUWSEC A
        INNER JOIN (
            SELECT
                CTR_NF,
				UW_NT,
				END_NT,
				SEC_NF,
				UWY_NF,
				END_D,
				SUPP_D,
				SECINC_D,
				RANK_NM
			
            FROM
                (
                SELECT
                    TMP.CTR_NF ,
                    TMP.UW_NT ,
                    TMP.END_NT ,
                    TMP.SEC_NF ,
                    TMP.UWY_NF ,
                    TMP.END_D ,
                    TMP.SUPP_D ,
                    TMP.SECINC_D ,
                    ROW_NUMBER() OVER ( PARTITION BY TMP.CTR_NF,
                    TMP.UW_NT,
                    TMP.END_NT,
                    TMP.SEC_NF
                ORDER BY
                    TMP.SECINC_D ASC) AS RANK_NM
                FROM
                    BI_<env>.TUWSEC TMP
                WHERE
                    TMP.LOB_CF IN (30,
                    31)
                    AND TMP.END_D = '9999-12-31-00.00.00.000000'
                    AND TMP.SUPP_D = '9999-12-31-00.00.00.000000'
                    AND TMP.SSD_CF NOT IN (14,
                    25)
                    AND TMP.SECACCSTS_CT NOT IN (8,
                    9) )
            WHERE
                RANK_NM = 1) INCEP_DATE ON
            (A.CTR_NF = INCEP_DATE.CTR_NF
            AND A.UW_NT = INCEP_DATE.UW_NT
            AND A.END_NT = INCEP_DATE.END_NT
            AND A.SEC_NF = INCEP_DATE.SEC_NF
            AND A.END_D = INCEP_DATE.END_D
            AND A.SUPP_D = INCEP_DATE.SUPP_D)
        LEFT OUTER JOIN BI_<env>.TUWCTR B ON
            (A.SSD_CF = B.SSD_CF
            AND A.CTR_NF = B.CTR_NF
            AND A.UWY_NF = B.UWY_NF
            AND A.END_NT = B.END_NT
            AND A.UW_NT = B.UW_NT
            AND A.END_D = B.END_D
            AND A.SUPP_D = B.SUPP_D)
        LEFT OUTER JOIN BI_<env>.TSUBSID C ON
            (A.SSD_CF = C.SSD_CF)
        LEFT OUTER JOIN BI_<env>.TESB D ON
            (A.SSD_CF = D.SSD_CF
            AND A.ACCESB_CF = D.ESB_CF)
        LEFT OUTER JOIN BI_<env>.TSECIFRS E ON
            ( A.SSD_CF = E.SSD_CF
            AND A.CTR_NF = E.CTR_NF
            AND A.UWY_NF = E.UWY_NF
            AND A.END_NT = E.END_NT
            AND A.UW_NT = E.UW_NT
            AND A.SEC_NF = E.SEC_NF )
        LEFT OUTER JOIN BI_<env>.TBANTECL I ON
            ( A.FACACTSCT_CT = I.COLVAL_CT
            AND I.LAG_CF = 'E'
            AND I.COL_LS = 'FACACTSCT_CT')
        LEFT OUTER JOIN BI_<env>.TCRCONTR J ON
            ( A.SSD_CF = J.SSD_CF
            AND A.CTR_NF = J.CTR_NF
            AND A.UWY_NF = J.UWY_NF
            AND A.END_NT = J.END_NT
            AND A.UW_NT = J.UW_NT)
        LEFT OUTER JOIN BI_<env>.TCONTR L ON
            ( B.SSD_CF = L.SSD_CF
            AND B.CTR_NF = L.CTR_NF
            AND B.UWY_NF = L.UWY_NF
            AND B.END_NT = L.END_NT
            AND B.UW_NT = L.UW_NT
            AND B.SUPP_D = L.SUPP_D)
        LEFT OUTER JOIN BI_<env>.TWRETRO_LINKS_FINAL LIKS ON
            ( LIKS.AC0SSD = A.SSD_CF
            AND LIKS.AC0CTR = A.CTR_NF
            AND LIKS.AC0SEC = A.SEC_NF
            AND LIKS.AC0UWY = A.UWY_NF
            AND LIKS.ASSD_CF_LVL1 = A.SSD_CF
            AND LIKS.ACCESB_CF_LVL1 = A.ACCESB_CF
            AND LIKS.CTR_NF_LVL1 = A.CTR_NF
            AND LIKS.SEC_NF_LVL1 = A.SEC_NF
            AND LIKS.UWY_NF_LVL1 = A.UWY_NF
            AND LIKS.ASSD_CF_LVL2 = A.SSD_CF
            AND LIKS.ACCESB_CF_LVL2 = A.ACCESB_CF
            AND LIKS.CTR_NF_LVL2 = A.CTR_NF
            AND LIKS.SEC_NF_LVL2 = A.SEC_NF
            AND LIKS.UWY_NF_LVL2 = A.UWY_NF
            AND LIKS.ASSD_CF_LVL3 = A.SSD_CF
            AND LIKS.ACCESB_CF_LVL3 = A.ACCESB_CF
            AND LIKS.CTR_NF_LVL3 = A.CTR_NF
            AND LIKS.SEC_NF_LVL3 = A.SEC_NF
            AND LIKS.UWY_NF_LVL3 = A.UWY_NF
            AND LIKS.ASSD_CF_LVL4 = A.SSD_CF
            AND LIKS.ACCESB_CF_LVL4 = A.ACCESB_CF
            AND LIKS.CTR_NF_LVL4 = A.CTR_NF
            AND LIKS.SEC_NF_LVL4 = A.SEC_NF
            AND LIKS.UWY_NF_LVL4 = A.UWY_NF)
        WHERE
            A.LOB_CF IN (30,
            31)
            AND A.SSD_CF NOT IN (14,
            25)
            AND A.SECACCSTS_CT NOT IN (8,
            9)
            AND A.END_D = '9999-12-31-00.00.00.000000'
            AND A.SUPP_D = '9999-12-31-00.00.00.000000'
            AND D.LIFE_CF = 1)
    GROUP BY
        REPORTING_DT,
        SCENARIO_ID,
        ENTITY_ID_GRP,
        ENTITY_ID_PAR,
        ENTITY_ID_LOC,
        LEGALENTITY_CF,
        LEGALENTITY_LL,
        PARTLEGENTITY_CF,
        PARTLEGENTITY_LL,
        LEBRANCH_CF,
        LEBRANCH_LL,
        PARTLEBRANCH_CF,
        PARTLEBRANCH_LL,
        PRDSIT_CF,
        SSD_CF,
        SSD_LS,
        ESB_CF,
        ESB_LS,
        CTR_NF,
        CTRPCPNAM_LL,
        SEC_NF,
        SECLAB_LM,
        UOA_CUR,
        TRT_CUR,
        PCPCUR_CF,
        SSDCUR_CF,
        UOA_GRP,
        UOA_PAR,
        UOA_LOC,
        PROFIT_SIGN_GRP,
        PROFIT_SIGN_PAR,
        PROFIT_SIGN_LOC,
        PROFIT_SIGN_FLG,
        PROFIT_LVL_GRP,
        PROFIT_LVL_PAR,
        PROFIT_LVL_LOC,
        SEG_PAR_CF,
        SEG_PAR_LS,
        SEG_LOC_CF,
        SEG_LOC_LS,
        SEG_GRP_CF,
        SEG_GRP_LS,
        LOB_CF,
        LOB_HS,
        LIFPRDLIN_CF,
        LIFPRDLIN_LL,
        LIFLOB_CF,
        LIFLOB_LL,
        USGAAP_CT,
        USGAAP_CT_LB,
        BUSUNIT_CF,
        BUSUNIT_LM,
        MRKUNT_NT,
        MRKUNT_LS,
        SUBMRK_NT,
        SUBMRK_LS,
        CR_NF,
        CR_LM,
        ANNUAL_COHORT,
        FRSSECUWY_NF,
        CTRUWY_NF,
        SECUWY_NF,
        CTRINC_D,
        SECINC_D,
        CTRFRSINC_D,
        SECFRSINC_D,
        CTRFRSPAYM_D,
        SECFRSPAYM_D,
        FRSPRICONER_D,
        TERM_D,
        CANCTR_D,
        SECCAN_D,
        CTRNEW_CT,
        RETFLG_CF,
        INTOPEFL_CF,
        TERMPERM_CF,
        NEWORMODIF_CF,
        MODTYP_CF,
        SECSTS_CT,
        SECSTS_LS,
        ACCADMTYP_CT,
        SECACCSTS_CT,
        SECACCSTS_LS,
        NAT_CF,
        NAT_GD,
        ACCFRQ_CT,
        LIFTRTTYP_CF,
        LIFTRTTYP_LS,
        RETROTYP_CF,
        RETRO_RA_LO_CF,
        RENTYP_CT,
        CTROLDNBR_LM,
        PARSEC_NF,
        ESTCRB_CT,
        INSURANCE_CONTRACT_GROUP_ID,
        GRPRATEINDEX_CT,
        PARRATEINDEX_CT,
        LOCRATEINDEX_CT,
        COV_RTO,
        COC_RTO,
        X_DIM_RETRO_PATH_ID,
        INTERNAL_RETRO_FLG,
        TRANSITION_APPROACH_CD_GRP,
        TRANSITION_FLG_GRP,
        EXP_ADJ_PREM_CSM_ALLOC_RAT_GRP,
        EXP_ADJ_RCOM_CSM_ALLOC_RAT_GRP,
        EXP_ADJ_NDIC_CSM_ALLOC_RAT_GRP,
        TRANSITION_LOCKINDATE_GRP,
        TRANSITION_APPROACH_CD_PAR,
        TRANSITION_FLG_PAR,
        EXP_ADJ_PREM_CSM_ALLOC_RAT_PAR,
        EXP_ADJ_RCOM_CSM_ALLOC_RAT_PAR,
        EXP_ADJ_NDIC_CSM_ALLOC_RAT_PAR,
        TRANSITION_LOCKINDATE_PAR,
        TRANSITION_APPROACH_CD_LOC,
        TRANSITION_FLG_LOC,
        EXP_ADJ_PREM_CSM_ALLOC_RAT_LOC,
        EXP_ADJ_RCOM_CSM_ALLOC_RAT_LOC,
        EXP_ADJ_NDIC_CSM_ALLOC_RAT_LOC,
        TRANSITION_LOCKINDATE_LOC,
        NPR_DEFAULT_INI_RAT,
        NPR_DEFAULT_CURRENT_RAT,
        NPR_RECOVERY_INI_RAT,
        NPR_RECOVERY_CURRENT_RAT,
        NPR_CALCULATION_FLG,
        REINS_FIXED_RECOVER_PCT,
        TRANSITION_INPUT_CSM_AMT,
        DIRECT_TRANSITION_ACQ_COSTS_AMT)
WHERE
    SECUWY_NF IS NOT NULL
UNION ALL
    SELECT
        CAST(REPORTING_DT AS CHAR(10)) AS REPORTING_DT,
        CAST(SCENARIO_ID AS BIGINT) AS SCENARIO_ID,
        CAST(ENTITY_ID_GRP AS CHAR(36)) AS ENTITY_ID_GRP,
        CAST(ENTITY_ID_PAR AS CHAR(36)) AS ENTITY_ID_PAR,
        CAST(ENTITY_ID_LOC AS CHAR(36)) AS ENTITY_ID_LOC,
        CAST(LEGALENTITY_CF AS CHAR(5)) AS LEGALENTITY_CF,
        CAST(LEGALENTITY_LL AS CHAR(32)) AS LEGALENTITY_LL,
        CAST(PARTLEGENTITY_CF AS CHAR(5)) AS PARTLEGENTITY_CF,
        CAST(PARTLEGENTITY_LL AS CHAR(32)) AS PARTLEGENTITY_LL,
        CAST(LEBRANCH_CF AS CHAR(5)) AS LEBRANCH_CF,
        CAST(LEBRANCH_LL AS CHAR(32)) AS LEBRANCH_LL,
        CAST(PARTLEBRANCH_CF AS CHAR(5)) AS PARTLEBRANCH_CF,
        CAST(PARTLEBRANCH_LL AS CHAR(32)) AS PARTLEBRANCH_LL,
        CAST(PRDSIT_CF AS CHAR(4)) AS PRDSIT_CF,
        SSD_CF,
        CAST(SSD_LS AS CHAR(12)) AS SSD_LS,
        ESB_CF,
        CAST(ESB_LS AS CHAR(16)) AS ESB_LS,
        CAST(CTR_NF AS CHAR(9)) AS CTR_NF,
        CAST(CTRPCPNAM_LL AS CHAR(64)) AS CTRPCPNAM_LL,
        SEC_NF,
        CAST(SECLAB_LM AS CHAR(32)) AS SECLAB_LM,
        UOA_CUR,
        CAST(TRT_CUR AS CHAR(3)) AS TRT_CUR,
        CAST(PCPCUR_CF AS CHAR(3)) AS PCPCUR_CF,
        CAST(SSDCUR_CF AS CHAR(3)) AS SSDCUR_CF,
        CAST(UOA_GRP AS CHAR(36)) AS UOA_GRP,
        CAST(UOA_PAR AS CHAR(36)) AS UOA_PAR,
        CAST(UOA_LOC AS CHAR(36)) AS UOA_LOC,
        CAST(PROFIT_SIGN_GRP AS CHAR(36))AS PROFIT_SIGN_GRP,
        CAST(PROFIT_SIGN_PAR AS CHAR(36))AS PROFIT_SIGN_PAR,
        CAST(PROFIT_SIGN_LOC AS CHAR(36))AS PROFIT_SIGN_LOC,
        PROFIT_SIGN_FLG,
        CAST(PROFIT_LVL_GRP AS CHAR(36)) AS PROFIT_LVL_GRP,
        CAST(PROFIT_LVL_PAR AS CHAR(36)) AS PROFIT_LVL_PAR,
        CAST(PROFIT_LVL_LOC AS CHAR(36)) AS PROFIT_LVL_LOC,
        CAST(SEG_PAR_CF AS CHAR(30)) AS SEG_PAR_CF,
        CAST(SEG_PAR_LS AS CHAR(64)) AS SEG_PAR_LS,
        CAST(SEG_LOC_CF AS CHAR(30)) AS SEG_LOC_CF,
        CAST(SEG_LOC_LS AS CHAR(64)) AS SEG_LOC_LS,
        CAST(SEG_GRP_CF AS CHAR(30)) AS SEG_GRP_CF,
        CAST(SEG_GRP_LS AS CHAR(64)) AS SEG_GRP_LS,
        CAST(LOB_CF AS CHAR(2)) AS LOB_CF,
        CAST(LOB_HS AS CHAR(20)) AS LOB_HS,
        CAST(LIFPRDLIN_CF AS CHAR(5)) AS LIFPRDLIN_CF,
        CAST(LIFPRDLIN_LL AS CHAR(32)) AS LIFPRDLIN_LL,
        CAST(LIFLOB_CF AS CHAR(5)) AS LIFLOB_CF,
        CAST(LIFLOB_LL AS CHAR(32)) AS LIFLOB_LL,
        USGAAP_CT,
        CAST(USGAAP_CT_LB AS CHAR(32)) AS USGAAP_CT_LB,
        CAST(BUSUNIT_CF AS VARCHAR(9)) AS BUSUNIT_CF,
        CAST(BUSUNIT_LM AS CHAR(32)) AS BUSUNIT_LM,
        MRKUNT_NT,
        CAST(MRKUNT_LS AS CHAR(32)) AS MRKUNT_LS,
        SUBMRK_NT,
        CAST(SUBMRK_LS AS CHAR(26)) AS SUBMRK_LS,
        CAST(CR_NF AS CHAR(9)) AS CR_NF,
        CAST(CR_LM AS CHAR(5)) AS CR_LM,
        ANNUAL_COHORT,
        FRSSECUWY_NF,
        CTRUWY_NF,
        SECUWY_NF,
        CAST(CTRINC_D AS CHAR(10)) AS CTRINC_D,
        CAST(SECINC_D AS CHAR(10)) AS SECINC_D,
        CAST(CTRFRSINC_D AS CHAR(10)) AS CTRFRSINC_D,
        CAST(SECFRSINC_D AS CHAR(10)) AS SECFRSINC_D,
        CAST(CTRFRSPAYM_D AS CHAR(10)) AS CTRFRSPAYM_D,
        CAST(SECFRSPAYM_D AS CHAR(10)) AS SECFRSPAYM_D,
        CAST(FRSPRICONER_D AS CHAR(10))AS FRSPRICONER_D,
        CAST(TERM_D AS CHAR(10)) AS TERM_D,
        CAST(CANCTR_D AS CHAR(10)) AS CANCTR_D,
        CAST(SECCAN_D AS CHAR(10)) AS SECCAN_D,
        CAST(CTRNEW_CT AS CHAR(1)) AS CTRNEW_CT,
        RETFLG_CF,
        INTOPEFL_CF,
        CAST(TERMPERM_CF AS CHAR(12)) AS TERMPERM_CF,
        NEWORMODIF_CF,
        MODTYP_CF,
        SECSTS_CT,
        CAST(SECSTS_LS AS CHAR(20)) AS SECSTS_LS,
        ACCADMTYP_CT,
        SECACCSTS_CT,
        CAST(SECACCSTS_LS AS CHAR(16)) AS SECACCSTS_LS,
        CAST(NAT_CF AS BIGINT) AS NAT_CF,
        CAST(NAT_GD AS CHAR(4)) AS NAT_GD,
        ACCFRQ_CT,
        CAST(LIFTRTTYP_CF AS CHAR(2)) AS LIFTRTTYP_CF,
        CAST(LIFTRTTYP_LS AS CHAR(20)) AS LIFTRTTYP_LS,
        CAST(RETROTYP_CF AS CHAR(17)) AS RETROTYP_CF,
        CAST(RETRO_RA_LO_CF AS CHAR(38))AS RETRO_RA_LO_CF,
        RENTYP_CT,
        CAST(CTROLDNBR_LM AS CHAR(10)) AS CTROLDNBR_LM,
        PARSEC_NF,
        CAST(ESTCRB_CT AS CHAR(1)) AS ESTCRB_CT,
        CAST(INSURANCE_CONTRACT_GROUP_ID AS CHAR(36)) AS INSURANCE_CONTRACT_GROUP_ID,
        CAST(GRPRATEINDEX_CT AS CHAR(32)) AS GRPRATEINDEX_CT,
        CAST(PARRATEINDEX_CT AS CHAR(32)) AS PARRATEINDEX_CT,
        CAST(LOCRATEINDEX_CT AS CHAR(32)) AS LOCRATEINDEX_CT,
        CAST(COV_RTO AS DECIMAL(8,
        2)) AS COV_RTO,
        CAST(COC_RTO AS DECIMAL(8,
        2)) AS COC_RTO,
        CAST(X_DIM_RETRO_PATH_ID AS CHAR(32)) AS X_DIM_RETRO_PATH_ID,
        CAST(INTERNAL_RETRO_FLG AS CHAR(1)) AS INTERNAL_RETRO_FLG,
        CAST(TRANSITION_APPROACH_CD_GRP AS CHAR(10)) AS TRANSITION_APPROACH_CD_GRP,
        CAST(TRANSITION_FLG_GRP AS CHAR(1)) AS TRANSITION_FLG_GRP,
        CAST(EXP_ADJ_PREM_CSM_ALLOC_RAT_GRP AS DECFLOAT) AS EXP_ADJ_PREM_CSM_ALLOC_RAT_GRP,
        CAST(EXP_ADJ_RCOM_CSM_ALLOC_RAT_GRP AS DECFLOAT) AS EXP_ADJ_RCOM_CSM_ALLOC_RAT_GRP,
        CAST(EXP_ADJ_NDIC_CSM_ALLOC_RAT_GRP AS DECFLOAT) AS EXP_ADJ_NDIC_CSM_ALLOC_RAT_GRP,
        TRANSITION_LOCKINDATE_GRP,
        CAST(TRANSITION_APPROACH_CD_PAR AS CHAR(10)) AS TRANSITION_APPROACH_CD_PAR,
        CAST(TRANSITION_FLG_PAR AS CHAR(1)) AS TRANSITION_FLG_PAR,
        CAST(EXP_ADJ_PREM_CSM_ALLOC_RAT_PAR AS DECFLOAT) AS EXP_ADJ_PREM_CSM_ALLOC_RAT_PAR,
        CAST(EXP_ADJ_RCOM_CSM_ALLOC_RAT_PAR AS DECFLOAT) AS EXP_ADJ_RCOM_CSM_ALLOC_RAT_PAR,
        CAST(EXP_ADJ_NDIC_CSM_ALLOC_RAT_PAR AS DECFLOAT) AS EXP_ADJ_NDIC_CSM_ALLOC_RAT_PAR,
        TRANSITION_LOCKINDATE_PAR,
        CAST(TRANSITION_APPROACH_CD_LOC AS CHAR(10)) AS TRANSITION_APPROACH_CD_LOC,
        CAST(TRANSITION_FLG_LOC AS CHAR(1)) AS TRANSITION_FLG_LOC,
        CAST(EXP_ADJ_PREM_CSM_ALLOC_RAT_LOC AS DECFLOAT) AS EXP_ADJ_PREM_CSM_ALLOC_RAT_LOC,
        CAST(EXP_ADJ_RCOM_CSM_ALLOC_RAT_LOC AS DECFLOAT) AS EXP_ADJ_RCOM_CSM_ALLOC_RAT_LOC,
        EXP_ADJ_NDIC_CSM_ALLOC_RAT_LOC,
        TRANSITION_LOCKINDATE_LOC,
        CAST (DEFAULT_PROBABILITY_RATE_INIT AS DECIMAL(9,8))AS  NPR_DEFAULT_INI_RAT,
        CAST (DEFAULT_PROBABILITY_RATE_CURRENT AS DECIMAL(9,8))AS NPR_DEFAULT_CURRENT_RAT,
        CAST (RECOVERY_RATE_INIT AS DECIMAL(9,8)) AS NPR_RECOVERY_INI_RAT,
        CAST (RECOVERY_RATE_CURRENT AS DECIMAL(9,8)) AS NPR_RECOVERY_CURRENT_RAT,
        CAST (NPR_CALCULATION_FLG AS CHAR(1)) AS NPR_CALCULATION_FLG,
        CAST(REINS_FIXED_RECOVER_PCT AS DECFLOAT) AS REINS_FIXED_RECOVER_PCT,
        CAST(TRANSITION_INPUT_CSM_AMT AS DECFLOAT) AS TRANSITION_INPUT_CSM_AMT,
        CAST(DIRECT_TRANSITION_ACQ_COSTS_AMT AS DECFLOAT) AS DIRECT_TRANSITION_ACQ_COSTS_AMT
    FROM
        (
        SELECT
            REPORTING_DT ,
            SCENARIO_ID ,
            ENTITY_ID_GRP ,
            ENTITY_ID_PAR ,
            ENTITY_ID_LOC ,
            LEGALENTITY_CF ,
            LEGALENTITY_LL ,
            PARTLEGENTITY_CF ,
            PARTLEGENTITY_LL ,
            LEBRANCH_CF ,
            LEBRANCH_LL ,
            PARTLEBRANCH_CF ,
            PARTLEBRANCH_LL ,
            PRDSIT_CF ,
            SSD_CF ,
            SSD_LS ,
            ESB_CF ,
            ESB_LS ,
            CTR_NF ,
            CTRPCPNAM_LL ,
            SEC_NF ,
            SECLAB_LM ,
            UOA_CUR ,
            TRT_CUR ,
            PCPCUR_CF ,
            SSDCUR_CF ,
            UOA_GRP ,
            UOA_PAR ,
            UOA_LOC ,
            PROFIT_SIGN_GRP ,
            PROFIT_SIGN_PAR ,
            PROFIT_SIGN_LOC ,
            PROFIT_SIGN_FLG ,
            PROFIT_LVL_GRP ,
            PROFIT_LVL_PAR ,
            PROFIT_LVL_LOC ,
            SEG_PAR_CF ,
            SEG_PAR_LS ,
            SEG_LOC_CF ,
            SEG_LOC_LS ,
            SEG_GRP_CF ,
            SEG_GRP_LS ,
            LOB_CF ,
            LOB_HS ,
            LIFPRDLIN_CF ,
            LIFPRDLIN_LL ,
            LIFLOB_CF ,
            LIFLOB_LL ,
            USGAAP_CT ,
            USGAAP_CT_LB ,
            BUSUNIT_CF ,
            BUSUNIT_LM ,
            MRKUNT_NT ,
            MRKUNT_LS ,
            SUBMRK_NT ,
            SUBMRK_LS ,
            CR_NF ,
            CR_LM ,
            ANNUAL_COHORT ,
            FRSSECUWY_NF ,
            CTRUWY_NF ,
            SECUWY_NF ,
            CTRINC_D ,
            SECINC_D ,
            CTRFRSINC_D ,
            SECFRSINC_D ,
            CTRFRSPAYM_D ,
            SECFRSPAYM_D ,
            FRSPRICONER_D ,
            TERM_D ,
            CANCTR_D ,
            SECCAN_D ,
            CTRNEW_CT ,
            RETFLG_CF ,
            INTOPEFL_CF ,
            TERMPERM_CF ,
            NEWORMODIF_CF ,
            MODTYP_CF ,
            SECSTS_CT ,
            SECSTS_LS ,
            ACCADMTYP_CT ,
            SECACCSTS_CT ,
            SECACCSTS_LS ,
            NAT_CF ,
            NAT_GD ,
            ACCFRQ_CT ,
            LIFTRTTYP_CF ,
            LIFTRTTYP_LS ,
            RETROTYP_CF ,
            RETRO_RA_LO_CF ,
            RENTYP_CT ,
            CTROLDNBR_LM ,
            PARSEC_NF ,
            ESTCRB_CT ,
            INSURANCE_CONTRACT_GROUP_ID ,
            GRPRATEINDEX_CT ,
            PARRATEINDEX_CT ,
            LOCRATEINDEX_CT ,
            COV_RTO ,
            COC_RTO ,
            X_DIM_RETRO_PATH_ID ,
            INTERNAL_RETRO_FLG ,
            TRANSITION_APPROACH_CD_GRP ,
            TRANSITION_FLG_GRP ,
            EXP_ADJ_PREM_CSM_ALLOC_RAT_GRP ,
            EXP_ADJ_RCOM_CSM_ALLOC_RAT_GRP ,
            EXP_ADJ_NDIC_CSM_ALLOC_RAT_GRP ,
            TRANSITION_LOCKINDATE_GRP ,
            TRANSITION_APPROACH_CD_PAR ,
            TRANSITION_FLG_PAR ,
            EXP_ADJ_PREM_CSM_ALLOC_RAT_PAR ,
            EXP_ADJ_RCOM_CSM_ALLOC_RAT_PAR ,
            EXP_ADJ_NDIC_CSM_ALLOC_RAT_PAR ,
            TRANSITION_LOCKINDATE_PAR ,
            TRANSITION_APPROACH_CD_LOC ,
            TRANSITION_FLG_LOC ,
            EXP_ADJ_PREM_CSM_ALLOC_RAT_LOC ,
            EXP_ADJ_RCOM_CSM_ALLOC_RAT_LOC ,
            EXP_ADJ_NDIC_CSM_ALLOC_RAT_LOC ,
            TRANSITION_LOCKINDATE_LOC ,
            NPR_CALCULATION_FLG ,
            REINS_FIXED_RECOVER_PCT ,
            TRANSITION_INPUT_CSM_AMT ,
            DIRECT_TRANSITION_ACQ_COSTS_AMT ,
            RTO_NF ,
            RATING_CF ,
            CLOSING_DATE_CURRENT ,
            DEFAULT_PROBABILITY_RATE_CURRENT ,
            RECOVERY_RATE_CURRENT ,
            CLOSING_DATE_INIT ,
            DEFAULT_PROBABILITY_RATE_INIT ,
            RECOVERY_RATE_INIT ,
            ROW_NUMBER () OVER (PARTITION BY REPORTING_DT,
            CTR_NF,
            SEC_NF,
            SECUWY_NF,
            SSD_CF
        ORDER BY
            DEFAULT_PROBABILITY_RATE_CURRENT*RECOVERY_RATE_CURRENT DESC) ROW_NUMBER_VALUE
        FROM
            (
            SELECT
                T_RETRO.REPORTING_DT ,
                T_RETRO.SCENARIO_ID ,
                T_RETRO.ENTITY_ID_GRP ,
                T_RETRO.ENTITY_ID_PAR ,
                T_RETRO.ENTITY_ID_LOC ,
                T_RETRO.LEGALENTITY_CF ,
                T_RETRO.LEGALENTITY_LL ,
                T_RETRO.PARTLEGENTITY_CF ,
                T_RETRO.PARTLEGENTITY_LL ,
                T_RETRO.LEBRANCH_CF ,
                T_RETRO.LEBRANCH_LL ,
                T_RETRO.PARTLEBRANCH_CF ,
                T_RETRO.PARTLEBRANCH_LL ,
                T_RETRO.PRDSIT_CF ,
                T_RETRO.SSD_CF ,
                T_RETRO.SSD_LS ,
                T_RETRO.ESB_CF ,
                T_RETRO.ESB_LS ,
                T_RETRO.CTR_NF ,
                T_RETRO.CTRPCPNAM_LL ,
                T_RETRO.SEC_NF ,
                T_RETRO.SECLAB_LM ,
                T_RETRO.UOA_CUR ,
                T_RETRO.TRT_CUR ,
                T_RETRO.PCPCUR_CF ,
                T_RETRO.SSDCUR_CF ,
                T_RETRO.UOA_GRP ,
                T_RETRO.UOA_PAR ,
                T_RETRO.UOA_LOC ,
                T_RETRO.PROFIT_SIGN_GRP ,
                T_RETRO.PROFIT_SIGN_PAR ,
                T_RETRO.PROFIT_SIGN_LOC ,
                T_RETRO.PROFIT_SIGN_FLG ,
                T_RETRO.PROFIT_LVL_GRP ,
                T_RETRO.PROFIT_LVL_PAR ,
                T_RETRO.PROFIT_LVL_LOC ,
                T_RETRO.SEG_PAR_CF ,
                T_RETRO.SEG_PAR_LS ,
                T_RETRO.SEG_LOC_CF ,
                T_RETRO.SEG_LOC_LS ,
                T_RETRO.SEG_GRP_CF ,
                T_RETRO.SEG_GRP_LS ,
                T_RETRO.LOB_CF ,
                T_RETRO.LOB_HS ,
                T_RETRO.LIFPRDLIN_CF ,
                T_RETRO.LIFPRDLIN_LL ,
                T_RETRO.LIFLOB_CF ,
                T_RETRO.LIFLOB_LL ,
                T_RETRO.USGAAP_CT ,
                T_RETRO.USGAAP_CT_LB ,
                T_RETRO.BUSUNIT_CF ,
                T_RETRO.BUSUNIT_LM ,
                T_RETRO.MRKUNT_NT ,
                T_RETRO.MRKUNT_LS ,
                T_RETRO.SUBMRK_NT ,
                T_RETRO.SUBMRK_LS ,
                T_RETRO.CR_NF ,
                T_RETRO.CR_LM ,
                T_RETRO.ANNUAL_COHORT ,
                T_RETRO.FRSSECUWY_NF ,
                T_RETRO.CTRUWY_NF ,
                T_RETRO.SECUWY_NF ,
                T_RETRO.CTRINC_D ,
                T_RETRO.SECINC_D ,
                T_RETRO.CTRFRSINC_D ,
                T_RETRO.SECFRSINC_D ,
                T_RETRO.CTRFRSPAYM_D ,
                T_RETRO.SECFRSPAYM_D ,
                T_RETRO.FRSPRICONER_D ,
                T_RETRO.TERM_D ,
                T_RETRO.CANCTR_D ,
                T_RETRO.SECCAN_D ,
                T_RETRO.CTRNEW_CT ,
                T_RETRO.RETFLG_CF ,
                T_RETRO.INTOPEFL_CF ,
                T_RETRO.TERMPERM_CF ,
                T_RETRO.NEWORMODIF_CF ,
                T_RETRO.MODTYP_CF ,
                T_RETRO.SECSTS_CT ,
                T_RETRO.SECSTS_LS ,
                T_RETRO.ACCADMTYP_CT ,
                T_RETRO.SECACCSTS_CT ,
                T_RETRO.SECACCSTS_LS ,
                T_RETRO.NAT_CF ,
                T_RETRO.NAT_GD ,
                T_RETRO.ACCFRQ_CT ,
                T_RETRO.LIFTRTTYP_CF ,
                T_RETRO.LIFTRTTYP_LS ,
                T_RETRO.RETROTYP_CF ,
                T_RETRO.RETRO_RA_LO_CF ,
                T_RETRO.RENTYP_CT ,
                T_RETRO.CTROLDNBR_LM ,
                T_RETRO.PARSEC_NF ,
                T_RETRO.ESTCRB_CT ,
                T_RETRO.INSURANCE_CONTRACT_GROUP_ID ,
                T_RETRO.GRPRATEINDEX_CT ,
                T_RETRO.PARRATEINDEX_CT ,
                T_RETRO.LOCRATEINDEX_CT ,
                T_RETRO.COV_RTO ,
                T_RETRO.COC_RTO ,
                T_RETRO.X_DIM_RETRO_PATH_ID ,
                T_RETRO.INTERNAL_RETRO_FLG ,
                T_RETRO.TRANSITION_APPROACH_CD_GRP ,
                T_RETRO.TRANSITION_FLG_GRP ,
                T_RETRO.EXP_ADJ_PREM_CSM_ALLOC_RAT_GRP ,
                T_RETRO.EXP_ADJ_RCOM_CSM_ALLOC_RAT_GRP ,
                T_RETRO.EXP_ADJ_NDIC_CSM_ALLOC_RAT_GRP ,
                T_RETRO.TRANSITION_LOCKINDATE_GRP ,
                T_RETRO.TRANSITION_APPROACH_CD_PAR ,
                T_RETRO.TRANSITION_FLG_PAR ,
                T_RETRO.EXP_ADJ_PREM_CSM_ALLOC_RAT_PAR ,
                T_RETRO.EXP_ADJ_RCOM_CSM_ALLOC_RAT_PAR ,
                T_RETRO.EXP_ADJ_NDIC_CSM_ALLOC_RAT_PAR ,
                T_RETRO.TRANSITION_LOCKINDATE_PAR ,
                T_RETRO.TRANSITION_APPROACH_CD_LOC ,
                T_RETRO.TRANSITION_FLG_LOC ,
                T_RETRO.EXP_ADJ_PREM_CSM_ALLOC_RAT_LOC ,
                T_RETRO.EXP_ADJ_RCOM_CSM_ALLOC_RAT_LOC ,
                T_RETRO.EXP_ADJ_NDIC_CSM_ALLOC_RAT_LOC ,
                T_RETRO.TRANSITION_LOCKINDATE_LOC ,
                T_RETRO.NPR_CALCULATION_FLG ,
                T_RETRO.REINS_FIXED_RECOVER_PCT ,
                T_RETRO.TRANSITION_INPUT_CSM_AMT ,
                T_RETRO.DIRECT_TRANSITION_ACQ_COSTS_AMT ,
                T_RATE_CURRENT_FINAL.RTO_NF ,
                T_RATE_CURRENT_FINAL.RATING_CF ,
                T_RATE_CURRENT_FINAL.ROW_NUMBER_VALUE ,
                T_RATE_CURRENT_FINAL.CLOSING_D AS CLOSING_DATE_CURRENT ,
                T_RATE_CURRENT_FINAL.DEFPROB_R AS DEFAULT_PROBABILITY_RATE_CURRENT ,
                T_RATE_CURRENT_FINAL.RECOVRAT_R AS RECOVERY_RATE_CURRENT ,
                COALESCE(T_RATE_INIT_FINAL.ROW_NUMBER_VALUE,
                T_RATE_INIT_2_FINAL.ROW_NUMBER_VALUE) ,
                COALESCE(T_RATE_INIT_FINAL.CLOSING_D,
                T_RATE_INIT_2_FINAL.CLOSING_D) AS CLOSING_DATE_INIT ,
                COALESCE(T_RATE_INIT_FINAL.DEFPROB_R,
                T_RATE_INIT_2_FINAL.DEFPROB_R) AS DEFAULT_PROBABILITY_RATE_INIT ,
                COALESCE(T_RATE_INIT_FINAL.RECOVRAT_R,
                T_RATE_INIT_2_FINAL.RECOVRAT_R) AS RECOVERY_RATE_INIT
            FROM
                V_TREATY_RETRO T_RETRO
            LEFT JOIN (
                SELECT
                    REPORTING_DT,
					CTR_NF,
					SEC_NF,
					SECUWY_NF,
					SSD_CF,
					RTO_NF,
					CLISHONAM_LD,
					RATING_CF,
					NORME_CF,
					DEFPROB_R,
					RECOVRAT_R,
					CLOSING_D,
					ROW_NUMBER_VALUE
					
                FROM
                    (
                    SELECT
                        T_RETRO.REPORTING_DT,
                        T_RETRO.CTR_NF,
                        T_RETRO.SEC_NF,
                        T_RETRO.SECUWY_NF,
                        T_RETRO.SSD_CF,
                        TPL.RTO_NF,
                        CLISHONAM_LD,
                        RATING_CF,
                        NORME_CF,
                        DEFPROB_R,
                        RECOVRAT_R,
                        CLOSING_D ,
                        ROW_NUMBER () OVER (PARTITION BY T_RETRO.REPORTING_DT,
                        T_RETRO.CTR_NF,
                        T_RETRO.SEC_NF,
                        T_RETRO.SECUWY_NF,
                        T_RETRO.SSD_CF,
                        RATING_CF,
                        NORME_CF
                    ORDER BY
                        CLOSING_D DESC) ROW_NUMBER_VALUE
                    FROM
                        (
                        SELECT
                            REPORTING_DT,
                            CTR_NF,
                            SEC_NF,
                            SECUWY_NF,
                            SSD_CF
                        FROM
                            V_TREATY_RETRO
                        WHERE
                            RETFLG_CF = 'Y' ) T_RETRO
                    INNER JOIN (
                        SELECT
                            RETCTR_NF,
                            RTY_NF,
                            SSD_CF,
                            RTO_NF
                        FROM
                            BI_<env>.TPLACEMT
                        WHERE
                            PLCSTS_CT IN (16,
                            19) ) TPL ON
                        T_RETRO.CTR_NF = TPL.RETCTR_NF
                        AND T_RETRO.SECUWY_NF = TPL.RTY_NF
                        AND T_RETRO.SSD_CF = TPL.SSD_CF
                    LEFT JOIN (
                        SELECT
                            RTO_RATING.RTO_NF,
                            CLISHONAM_LD,
                            RATING_CF,
                            NORME_CF,
                            DEFPROB_R,
                            RECOVRAT_R,
                            CLOSING_D
                        FROM
                            (
                            SELECT
                                RTO_NF,
                                CLISHONAM_LD,
                                COALESCE(COLVAL_LS,
                                'NR') AS RATING_CODE
                            FROM
                                BI_<env>.TPLACEMT TPL
                            LEFT JOIN BI_<env>.TCLSTABI TCL ON
                                TCL.CLI_NF = TPL.RTO_NF
                            LEFT JOIN BI_<env>.TBANALL TBA ON
                                TBA.COLVAL_CT = CAST(TCL.ISICURRAT_CT AS VARCHAR)
                                AND TBA.COL_LS = 'ISICURRAT_CT'
                                AND TBA.LAG_CF = 'E'
                            LEFT JOIN BI_<env>.TCLIENT TCI ON
                                TCI.CLI_NF = TPL.RTO_NF
                            GROUP BY
                                RTO_NF,
                                CLISHONAM_LD,
                                COALESCE(COLVAL_LS,
                                'NR') ) RTO_RATING
                        LEFT JOIN BI_<env>.TRATINGSII TRA ON
                            TRA.RATING_CF = RTO_RATING.RATING_CODE
                            AND TRA.NORME_CF = 'ALLNO' )T_RATE ON
                        T_RATE.RTO_NF = TPL.RTO_NF
                        AND CAST(T_RATE.CLOSING_D AS TIMESTAMP) <= TIMESTAMP_FORMAT(REPORTING_DT,
                        'DD/MM/YYYY') ) T_RATE_CURRENT
                WHERE
                    ROW_NUMBER_VALUE = 1 ) T_RATE_CURRENT_FINAL ON
                T_RATE_CURRENT_FINAL.REPORTING_DT = T_RETRO.REPORTING_DT
                AND T_RATE_CURRENT_FINAL.CTR_NF = T_RETRO.CTR_NF
                AND T_RATE_CURRENT_FINAL.SEC_NF = T_RETRO.SEC_NF
                AND T_RATE_CURRENT_FINAL.SECUWY_NF = T_RETRO.SECUWY_NF
                AND T_RATE_CURRENT_FINAL.SSD_CF = T_RETRO.SSD_CF
            LEFT JOIN (
                SELECT
                    REPORTING_DT,
					CTR_NF,
					SEC_NF,
					SECUWY_NF,
					SSD_CF,
					RTO_NF,
					CLISHONAM_LD,
					RATING_CF,
					NORME_CF,
					DEFPROB_R,
					RECOVRAT_R,
					CLOSING_D,
					ROW_NUMBER_VALUE
			FROM
                    (
                    SELECT
                        T_RETRO.REPORTING_DT,
                        T_RETRO.CTR_NF,
                        T_RETRO.SEC_NF,
                        T_RETRO.SECUWY_NF,
                        T_RETRO.SSD_CF,
                        TPL.RTO_NF,
                        CLISHONAM_LD,
                        RATING_CF,
                        NORME_CF,
                        DEFPROB_R,
                        RECOVRAT_R,
                        CLOSING_D ,
                        ROW_NUMBER () OVER (PARTITION BY T_RETRO.REPORTING_DT,
                        T_RETRO.CTR_NF,
                        T_RETRO.SEC_NF,
                        T_RETRO.SECUWY_NF,
                        T_RETRO.SSD_CF,
                        RATING_CF,
                        NORME_CF
                    ORDER BY
                        CLOSING_D DESC) ROW_NUMBER_VALUE
                    FROM
                        (
                        SELECT
                            REPORTING_DT,
                            CTR_NF,
                            SEC_NF,
                            SECUWY_NF,
                            SSD_CF
                        FROM
                            V_TREATY_RETRO ) T_RETRO
                    INNER JOIN (
                        SELECT
                            RETCTR_NF,
                            RTY_NF,
                            SSD_CF,
                            RTO_NF
                        FROM
                            BI_<env>.TPLACEMT
                        WHERE
                            PLCSTS_CT IN (16,
                            19) ) TPL ON
                        T_RETRO.CTR_NF = TPL.RETCTR_NF
                        AND T_RETRO.SECUWY_NF = TPL.RTY_NF
                        AND T_RETRO.SSD_CF = TPL.SSD_CF
                    LEFT JOIN (
                        SELECT
                            RTO_RATING.RTO_NF,
                            CLISHONAM_LD,
                            RATING_CF,
                            NORME_CF,
                            DEFPROB_R,
                            RECOVRAT_R,
                            CLOSING_D
                        FROM
                            (
                            SELECT
                                RTO_NF,
                                CLISHONAM_LD,
                                COALESCE(COLVAL_LS,
                                'NR') AS RATING_CODE
                            FROM
                                BI_<env>.TPLACEMT TPL
                            LEFT JOIN BI_<env>.TCLSTABI TCL ON
                                TCL.CLI_NF = TPL.RTO_NF
                            LEFT JOIN BI_<env>.TBANALL TBA ON
                                TBA.COLVAL_CT = CAST(TCL.ISICURRAT_CT AS VARCHAR)
                                AND TBA.COL_LS = 'ISICURRAT_CT'
                                AND TBA.LAG_CF = 'E'
                            LEFT JOIN BI_<env>.TCLIENT TCI ON
                                TCI.CLI_NF = TPL.RTO_NF
                            GROUP BY
                                RTO_NF,
                                CLISHONAM_LD,
                                COALESCE(COLVAL_LS,
                                'NR') ) RTO_RATING
                        LEFT JOIN BI_<env>.TRATINGSII TRA ON
                            TRA.RATING_CF = RTO_RATING.RATING_CODE
                            AND TRA.NORME_CF = 'ALLNO' )T_RATE ON
                        T_RATE.RTO_NF = TPL.RTO_NF
                        AND YEAR(CAST(T_RATE.CLOSING_D AS TIMESTAMP)) < YEAR(TIMESTAMP_FORMAT(REPORTING_DT,
                        'DD/MM/YYYY')) ) T_RATE_INIT
                WHERE
                    ROW_NUMBER_VALUE = 1 ) T_RATE_INIT_FINAL ON
                T_RATE_INIT_FINAL.REPORTING_DT = T_RETRO.REPORTING_DT
                AND T_RATE_INIT_FINAL.CTR_NF = T_RETRO.CTR_NF
                AND T_RATE_INIT_FINAL.SEC_NF = T_RETRO.SEC_NF
                AND T_RATE_INIT_FINAL.SECUWY_NF = T_RETRO.SECUWY_NF
                AND T_RATE_INIT_FINAL.SSD_CF = T_RETRO.SSD_CF
            LEFT JOIN (
                SELECT
                   REPORTING_DT, 
					CTR_NF,
					SEC_NF,
					SECUWY_NF,
					SSD_CF,
					RTO_NF,
					CLISHONAM_LD,
					RATING_CF,
					NORME_CF,
					DEFPROB_R,
					RECOVRAT_R,
					CLOSING_D,
					ROW_NUMBER_VALUE
				
                FROM
                    (
                    SELECT
                        T_RETRO.REPORTING_DT,
                        T_RETRO.CTR_NF,
                        T_RETRO.SEC_NF,
                        T_RETRO.SECUWY_NF,
                        T_RETRO.SSD_CF,
                        TPL.RTO_NF,
                        CLISHONAM_LD,
                        RATING_CF,
                        NORME_CF,
                        DEFPROB_R,
                        RECOVRAT_R,
                        CLOSING_D ,
                        ROW_NUMBER () OVER (PARTITION BY T_RETRO.REPORTING_DT,
                        T_RETRO.CTR_NF,
                        T_RETRO.SEC_NF,
                        T_RETRO.SECUWY_NF,
                        T_RETRO.SSD_CF,
                        RATING_CF,
                        NORME_CF
                    ORDER BY
                        CLOSING_D DESC) ROW_NUMBER_VALUE
                    FROM
                        (
                        SELECT
                            REPORTING_DT,
                            CTR_NF,
                            SEC_NF,
                            SECUWY_NF,
                            SSD_CF
                        FROM
                            V_TREATY_RETRO ) T_RETRO
                    INNER JOIN (
                        SELECT
                            RETCTR_NF,
                            RTY_NF,
                            SSD_CF,
                            RTO_NF
                        FROM
                            BI_<env>.TPLACEMT
                        WHERE
                            PLCSTS_CT IN (16,
                            19))TPL ON
                        T_RETRO.CTR_NF = TPL.RETCTR_NF
                        AND T_RETRO.SECUWY_NF = TPL.RTY_NF
                        AND T_RETRO.SSD_CF = TPL.SSD_CF
                    LEFT JOIN (
                        SELECT
                            RTO_RATING.RTO_NF,
                            CLISHONAM_LD,
                            RATING_CF,
                            NORME_CF,
                            DEFPROB_R,
                            RECOVRAT_R,
                            CLOSING_D
                        FROM
                            (
                            SELECT
                                RTO_NF,
                                CLISHONAM_LD,
                                COALESCE(COLVAL_LS,
                                'NR') AS RATING_CODE
                            FROM
                                BI_<env>.TPLACEMT TPL
                            LEFT JOIN BI_<env>.TCLSTABI TCL ON
                                TCL.CLI_NF = TPL.RTO_NF
                            LEFT JOIN BI_<env>.TBANALL TBA ON
                                TBA.COLVAL_CT = CAST(TCL.ISICURRAT_CT AS VARCHAR)
                                AND TBA.COL_LS = 'ISICURRAT_CT'
                                AND TBA.LAG_CF = 'E'
                            LEFT JOIN BI_<env>.TCLIENT TCI ON
                                TCI.CLI_NF = TPL.RTO_NF
                            GROUP BY
                                RTO_NF,
                                CLISHONAM_LD,
                                COALESCE(COLVAL_LS,
                                'NR') ) RTO_RATING
                        LEFT JOIN BI_<env>.TRATINGSII TRA ON
                            TRA.RATING_CF = RTO_RATING.RATING_CODE
                            AND TRA.NORME_CF = 'ALLNO' )T_RATE ON
                        T_RATE.RTO_NF = TPL.RTO_NF
                        AND YEAR(CAST(T_RATE.CLOSING_D AS TIMESTAMP)) = YEAR(TIMESTAMP_FORMAT(REPORTING_DT,
                        'DD/MM/YYYY')) ) T_RATE_INIT_2
                WHERE
                    ROW_NUMBER_VALUE = 1 ) T_RATE_INIT_2_FINAL ON
                T_RATE_INIT_2_FINAL.REPORTING_DT = T_RETRO.REPORTING_DT
                AND T_RATE_INIT_2_FINAL.CTR_NF = T_RETRO.CTR_NF
                AND T_RATE_INIT_2_FINAL.SEC_NF = T_RETRO.SEC_NF
                AND T_RATE_INIT_2_FINAL.SECUWY_NF = T_RETRO.SECUWY_NF
                AND T_RATE_INIT_2_FINAL.SSD_CF = T_RETRO.SSD_CF )
        WHERE
            ROW_NUMBER_VALUE = 1 ) NPR_QUERY;