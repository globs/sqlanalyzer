DROP PROCEDURE SP_INIT_FACTORS ;

CREATE OR REPLACE PROCEDURE SP_INIT_FACTORS() RETURNS INTEGER
language nzplsql
AS
BEGIN_PROC

DECLARE    
    L_ERR_CD           CHAR(5);          
    L_ERR_MSG          VARCHAR(32000);       
    P_REQUEST_ID       BIGINT;
    V_CALL1_QUERY      VARCHAR(255);
    V_CALL2_QUERY      VARCHAR(255);
    V_CALL3_QUERY      VARCHAR(255);
    V_CALL4_QUERY      VARCHAR(255);
   	V_UPDATE1_QUERY    VARCHAR(ANY);
    V_UPDATE2_QUERY    VARCHAR(ANY);
    V_UPDATE3_QUERY    VARCHAR(ANY);
    V_UPDATE4_QUERY    VARCHAR(ANY);
	
BEGIN
	SET ISOLATION TO UR;
	
	P_REQUEST_ID = -1;
	
	V_CALL1_QUERY :=  'CALL STAGING_<env>.SP_LOAD_OMEGA_ADJUSTMENT_FACTOR('|| P_REQUEST_ID ||', ''DWHD1_<env>'', ''DWH_ADJUSTMENT_FACTOR'')';
	V_CALL2_QUERY :=  'CALL STAGING_<env>.SP_LOAD_OMEGA_ECONOMIC_RATE('|| P_REQUEST_ID ||', ''DWHD1_<env>'', ''DWH_ECONOMIC_RATE'')';
	V_CALL3_QUERY :=  'CALL STAGING_<env>.SP_LOAD_YCMS_ECONOMIC_RATE('|| P_REQUEST_ID ||', ''STAGING_<env>'', ''YCMS_OUTPUTS_FWD'', ''STAGING_<env>'', ''WRK_ECONOMIC_RATE'')';
	V_CALL4_QUERY :=  'CALL DWHD1_<env>.GP_HISTORIZATION('|| P_REQUEST_ID ||', ''INCREMENTAL'', ''STAGING_<env>'', ''WRK_ECONOMIC_RATE'', ''DWHD1_<env>'', ''DWH_ECONOMIC_RATE'', ''DELIVERY_<env>'', ''CONF_TABLE_KEY'', FALSE)';
	
	EXECUTE IMMEDIATE 'DELETE FROM DWHD1_<env>.DWH_ECONOMIC_RATE WHERE CREATED_REQUEST_ID = ' || P_REQUEST_ID;
	
	EXECUTE IMMEDIATE 'DELETE FROM DWHD1_<env>.DWH_ADJUSTMENT_FACTOR WHERE CREATED_REQUEST_ID = ' || P_REQUEST_ID;
	
	RAISE NOTICE 'EXECUTING CALL SP_LOAD_OMEGA_ADJUSTMENT_FACTOR'; 
	EXECUTE IMMEDIATE V_CALL1_QUERY;
	
	RAISE NOTICE 'EXECUTING CALL SP_LOAD_OMEGA_ECONOMIC_RATE'; 
	EXECUTE IMMEDIATE V_CALL2_QUERY;

	RAISE NOTICE 'EXECUTING CALL SP_LOAD_YCMS_ECONOMIC_RATE'; 
	EXECUTE IMMEDIATE V_CALL3_QUERY;
	
	RAISE NOTICE 'EXECUTING CALL GP_HISTORIZATION'; 
	EXECUTE IMMEDIATE V_CALL4_QUERY;
	
	EXECUTE IMMEDIATE 'COMMIT';

EXCEPTION 
	WHEN OTHERS THEN
	    L_ERR_CD := SUBSTR(SQLERRM,8,5); 
	    L_ERR_MSG := SQLERRM;
	    RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG;
	    RETURN L_ERR_CD;

END;

END_PROC;