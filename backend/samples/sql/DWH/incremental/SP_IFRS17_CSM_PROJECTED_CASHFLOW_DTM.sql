DROP PROCEDURE IFRS17_CSM_PROJECTED_CASHFLOW_DTM;

CREATE OR REPLACE PROCEDURE IFRS17_CSM_PROJECTED_CASHFLOW_DTM(VARCHAR(7),
VARCHAR(10),
VARCHAR(50),
VARCHAR(50),
SMALLINT,
VARCHAR(36),
VARCHAR(7),
SMALLINT,
VARCHAR(9)) RETURNS INTEGER
LANGUAGE nzplsql AS BEGIN_PROC
DECLARE 
P_CLOSING_QUARTER ALIAS FOR $1;
P_REAL_CLOSING_DATE ALIAS FOR $2;
P_DWH_SCHEMA ALIAS FOR $3;
P_BI_SCHEMA ALIAS FOR $4;
P_SCENARIO_ID ALIAS FOR $5;
P_ENTITY_ID ALIAS FOR $6;
P_NORM_CODE ALIAS FOR $7;
P_RUN_ID ALIAS FOR $8;
P_INTERVAL ALIAS FOR $9;


V_CLEAR_DATA_QUERY CHAR(64000);
V_QUERY CHAR(64000);
V_QUERY_INI CHAR(64000);
V_FILTER_SY CHAR(64000);


L_ERR_CD CHAR(5);
L_ERR_MSG CHAR(32000);


V_CURRENT_TS TIMESTAMP;



BEGIN
SET ISOLATION TO UR;

RAISE NOTICE 'Inserting accept data';


V_CLEAR_DATA_QUERY = 'DELETE FROM ' || P_DWH_SCHEMA || '.TCSM_PROJECTED_CASHFLOW_DTM  
						WHERE REPORTING_DT = VARCHAR_FORMAT(''' || P_REAL_CLOSING_DATE || ''' , ''DD/MM/YYYY'') 
							AND CLOSING_QUARTER_CODE = ''' || P_CLOSING_QUARTER || '''
							AND SCENARIO_ID   = ' || P_SCENARIO_ID || ' 
							AND ENTITY_ID =''' || P_ENTITY_ID || '''
							AND RUN_ID   = ' || P_RUN_ID || '
							AND NORM_CD  = ''' || P_NORM_CODE || ''' 
							AND INTERVAL =''' || P_INTERVAL || ''' ';


EXECUTE IMMEDIATE V_CLEAR_DATA_QUERY;


EXECUTE IMMEDIATE 'COMMIT;';


IF P_INTERVAL = 'SEMI-YEAR' 
	THEN V_FILTER_SY = 'AND (
' || '						(QUARTER(CLOSING_DATE)>2 AND QUARTER(PROJECTION_DATE)>2)
' || '						OR 
' || '						(QUARTER(CLOSING_DATE)<3 AND QUARTER(PROJECTION_DATE)<3)
' || '			)';
ELSE V_FILTER_SY = '';
END IF;


V_QUERY = 'INSERT INTO ' || P_DWH_SCHEMA || '.TCSM_PROJECTED_CASHFLOW_DTM
' || 'WITH QRATE AS (
' || '		SELECT QUOT.*,VARCHAR_FORMAT(REPORTING_DT, ''DD/MM/YYYY'') REPORTING_DT
' || '		FROM ' || P_BI_SCHEMA || '.TBOCURQUOT2 QUOT
' || '		INNER JOIN (
' || '					SELECT SSD_CF||CUR_CF SSD_CUR,LAST_DAY(EXC_D +(3*QUARTER(EXC_D)-MONTH(EXC_D)) MONTH) REPORTING_DT
' || '							,MAX(EXC_D) EXC_D
' || '					FROM  ' || P_BI_SCHEMA || '.TBOCURQUOT2
' || '					WHERE EXC_CT=''C''
' || '					AND  YEAR(EXC_D) =  YEAR(''' || P_REAL_CLOSING_DATE || ''')
' || '					GROUP BY SSD_CF||CUR_CF,LAST_DAY(EXC_D +(3*QUARTER(EXC_D)-MONTH(EXC_D)) MONTH)) QRT
' || '			ON SSD_CF||CUR_CF = SSD_CUR
' || '			AND QUOT.EXC_D = QRT.EXC_D
' || '			AND EXC_CT=''C''
' || '		WHERE REPORTING_DT = ''' || P_REAL_CLOSING_DATE || ''')
' || ',TRT AS (
' || '		SELECT CTR_NF, SEC_NF, SECUWY_NF, ANNUAL_COHORT, PCPCUR_CF, SSD_CF, PROFIT_SIGN_FLG, INSURANCE_CONTRACT_GROUP_ID, ICG_FLAG
' || '			FROM ' || P_BI_SCHEMA || '.TCSM_TRT_CHARACS
' || '			WHERE REPORTING_DT = VARCHAR_FORMAT(''' || P_REAL_CLOSING_DATE || ''' , ''DD/MM/YYYY'') 
' || '				AND CLOSING_QUARTER_CODE = ''' || P_CLOSING_QUARTER || '''
' || '				AND SCENARIO_ID   = ' || P_SCENARIO_ID || ' 
' || '				AND ENTITY_ID =''' || P_ENTITY_ID || '''
' || '				AND INTERVAL =''' || P_INTERVAL || ''' 
' || '				AND RUN_ID   = ' || P_RUN_ID || '
' || '			GROUP BY CTR_NF, SEC_NF, SECUWY_NF, ANNUAL_COHORT, PCPCUR_CF, SSD_CF, PROFIT_SIGN_FLG, INSURANCE_CONTRACT_GROUP_ID, ICG_FLAG)
' || 'SELECT  ''' || P_CLOSING_QUARTER || ''',
' || '    A.REPORTING_DT,
' || '		' || P_SCENARIO_ID || ' AS SCENARIO_ID,		
' || '		''' || P_ENTITY_ID || ''' AS ENTITY_ID,			
' || '		CASE WHEN ICG_FLAG=''Y'' AND ANNUAL_COHORT IS NOT NULL 
' || '			THEN CONTRACT_NUMBER || ''_'' || SECTION_NUMBER || ''_'' || ANNUAL_COHORT
' || '			ELSE TRT.INSURANCE_CONTRACT_GROUP_ID
' || '		END	 AS INSURANCE_CONTRACT_GROUP_ID,
' || '    CASHFLOW_LEG_NM,
' || '    CEDED_FLG,
' || '    CASHFLOW_TYPE_CD,
' || '    NVL(PCPCUR_CF,CURRENCY_CD) CURRENCY_CD,
' || '    INCURRED_CLAIM_DT,
' || '    CASHFLOW_DT,
' || '    SUM(NVL((Q1.EXC_R/Q2.EXC_R),1)*CASHFLOW_AMT) CASHFLOW_AMT,
' || '		''' || P_NORM_CODE || ''' AS NORM_CD,
' || '    DATA_TYPE,
' || '		' || P_RUN_ID || ' AS RUN_ID,
' || '		''' || P_INTERVAL || ''' AS INTERVAL,
' || '		TO_CHAR(SYSDATE, ''YYYYMMDD'') AS ASOFDAY,
' || '		AOC_RULE_CD
' || 'FROM (
' || '	SELECT  
' || '	    REPORTING_DT,	
' || '	    CONTRACT_NUMBER,
' || '	    SECTION_NUMBER,
' || '	    POLICY_UW_YEAR,
' || '	    UNDERWRITING_YEAR,
' || '	    CASHFLOW_LEG_NM,
' || '	    CEDED_FLG,
' || '	    CASHFLOW_TYPE_CD,
' || '	    CURRENCY_CD,
' || '	    INCURRED_CLAIM_DT,
' || '	    CASHFLOW_DT,
' || '		AOC_RULE_CD,
' || '	    SUM(CASHFLOW_AMT) CASHFLOW_AMT
' || '	FROM
' || '	    (
' || '	    SELECT  
' || '			VARCHAR_FORMAT(CLOSING_DATE, ''DD/MM/YYYY'')  AS REPORTING_DT,
' || '			CONTRACT_NUMBER,
' || '			SECTION_NUMBER,
' || '			PR.POLICY_UW_YEAR,
' || '			PR.UNDERWRITING_YEAR,
' || '			P.CODE AS CASHFLOW_LEG_NM,
' || '			CEDED_FLG,
' || '			LOC_CODE_CSM  AS CASHFLOW_TYPE_CD,
' || '			PR.CURRENCY_CODE AS CURRENCY_CD,
' || '			CASE
' || '			    WHEN  P.CODE IN (''LCL_CLAIMS_AMT'',''LCL_RSK_ADJ_AMT'',''LCL_PROVENUES_AMT'',''LCL_SETTL_COSTS_AMT''
' || '		                            ,''LCL_RE_DEF_AMT'',''LCL_CLAIMS_PLT_AMT'',''LCL_CLAIMS_LT_AMT'',''LCL_INVESTMENT_AMT'') 
' || '					THEN VARCHAR_FORMAT(PR.PROJECTION_DATE, ''DD/MM/YYYY'') 
' || '				ELSE ''01/01/1960''
' || '			END AS INCURRED_CLAIM_DT,
' || '			VARCHAR_FORMAT(PR.PROJECTION_DATE, ''DD/MM/YYYY'')  AS CASHFLOW_DT,
' || '			AMOUNT AS CASHFLOW_AMT,
' || '			AOC_RULE_CD
' || '		FROM ' || P_BI_SCHEMA || '.PROJECTION_FACT PR
' || '		    INNER JOIN (
' || '			        SELECT DISTINCT
' || '			            CASE WHEN nvl(MATH_OPERATOR,'''')= '''' THEN MP.POSITION_ID
' || '			                ELSE P.ID
' || '			            END POSITION_ID,
' || '			            ID, POSITION_TYPE_ID, CODE
' || '			        FROM ' || P_BI_SCHEMA || '.POSITION_MAPPING MP
' || '			        INNER JOIN ' || P_BI_SCHEMA || '.POSITION P 
' || '			        	ON MP.MAPPING_POSITION_ID = P.ID
' || '			            AND P.IS_CSM
' || '			            AND P.CSM_POSITION_TYPE_ID in (1,5)
' || '			            AND P.VALID_TO = ''9999-12-31''
' || '			            AND MP.VALID_TO = ''9999-12-31'') P 
' || '		        ON PR.POSITION_ID = P.POSITION_ID
' || '		INNER JOIN ' || P_BI_SCHEMA || '.LEVEL_OF_ANALYSIS LOA
' || '			ON LOA.ID=PR.LEVEL_OF_ANALYSIS_ID
' || '			AND LOA.LOC_CODE_CSM NOT IN ('''', ''INI'') 
' || '			AND LOA.VALID_TO = ''9999-12-31''
' || '		INNER JOIN ' || P_BI_SCHEMA || '.SCENARIO_TYPE ST 
' || '			ON PR.SCENARIO_TYPE_ID = ST.ID
' || '			AND ST.CODE = ''ESTIMATE''
' || '			AND ST.VALID_TO = ''9999-12-31''
' || '		INNER JOIN ' || P_BI_SCHEMA || '.REPORTING_BASIS RB 
' || '			ON PR.REPORTING_BASIS_ID = RB.ID
' || '			AND RB.CODE = ''' || P_NORM_CODE || '''
' || '		INNER JOIN  (SELECT CTR_NF,''N'' CEDED_FLG  FROM ' || P_BI_SCHEMA || '.TUWCTR GROUP BY CTR_NF,UWY_NF
' || '					UNION
' || '					SELECT RETCTR_NF, ''Y'' CEDED_FLG  FROM ' || P_BI_SCHEMA || '.TUWRETRO GROUP BY RETCTR_NF,RTY_NF
' || '					) CTR
' || '			ON CTR.CTR_NF= PR.CONTRACT_NUMBER 
' || '		WHERE PR.VALID_TO =''9999-12-31'' 
' || '			AND PR.SUPP_DATE=''9999-12-31'' 
' || '			AND CLOSING_DATE= ''' || P_REAL_CLOSING_DATE || '''
' || '			AND (CLOSING_DATE < PROJECTION_DATE
' || '					OR (YEAR(CLOSING_DATE) = YEAR(PROJECTION_DATE)
' || '							AND (
' || '									(LOA.AFTER_ROLL_FORWARD 
' || '										AND QUARTER(PROJECTION_DATE)>QUARTER(CLOSING_DATE)
' || '										' || V_FILTER_SY || '
' || '									)
' || '									OR 
' || '									(NOT LOA.AFTER_ROLL_FORWARD
' || '										' || V_FILTER_SY || '
' || '									)
' || '								)
' || '						)
' || '				))
' || '		GROUP BY 
' || '		    REPORTING_DT,	
' || '		    CONTRACT_NUMBER,
' || '		    SECTION_NUMBER,
' || '		    POLICY_UW_YEAR,
' || '		    UNDERWRITING_YEAR,
' || '		    CASHFLOW_LEG_NM,
' || '		    CEDED_FLG,
' || '		    CASHFLOW_TYPE_CD,
' || '		    CURRENCY_CD,
' || '		    INCURRED_CLAIM_DT,
' || '		    CASHFLOW_DT,
' || '			AOC_RULE_CD
' || '			) A
' || '	INNER JOIN TRT ON 
' || ' 	A.CONTRACT_NUMBER = TRT.CTR_NF 
' || ' 	AND A.SECTION_NUMBER = TRT.SEC_NF 
' || ' 	AND 
' || ' 		CASE
' || '			WHEN TRT.ICG_FLAG = ''Y'' THEN A.POLICY_UW_YEAR = TRT.SECUWY_NF
' || '			ELSE 1=1
' || '		END
' || 'INNER JOIN DELIVERY_<env>.CONF_DATATYPE DTYPE
' || '	ON NVL(TRT.PROFIT_SIGN_FLG,''N'')=DTYPE.PROFIT_SIGN_FLG
' || '	AND IS_INI=0 
' || 'LEFT JOIN QRATE  Q1
' || '	ON (Q1.SSD_CF = TRT.SSD_CF 
' || '	AND A.CURRENCY_CD=Q1.CUR_CF 
' || '	AND Q1.EXC_CT=''C'' 
' || '	AND Q1.REPORTING_DT =A.REPORTING_DT)
' || 'LEFT JOIN QRATE  Q2
' || '	ON (Q2.SSD_CF = TRT.SSD_CF 
' || '	AND TRT.PCPCUR_CF=Q2.CUR_CF 
' || '	AND Q2.EXC_CT=''C'' 
' || '	AND Q2.REPORTING_DT =A.REPORTING_DT)
' || 'GROUP BY    A.REPORTING_DT,		
' || '    CASE WHEN ICG_FLAG=''Y'' AND ANNUAL_COHORT IS NOT NULL 
' || '		THEN CONTRACT_NUMBER || ''_'' || SECTION_NUMBER || ''_'' || ANNUAL_COHORT
' || '		ELSE TRT.INSURANCE_CONTRACT_GROUP_ID
' || '    END,	
' || '    CASHFLOW_LEG_NM,
' || '    CEDED_FLG,
' || '    CASHFLOW_TYPE_CD,
' || '    NVL(PCPCUR_CF,CURRENCY_CD) ,
' || '    INCURRED_CLAIM_DT,
' || '    CASHFLOW_DT,
' || '    DATA_TYPE,
' || '	  AOC_RULE_CD';

EXECUTE IMMEDIATE V_QUERY;

EXECUTE IMMEDIATE 'COMMIT;';

V_QUERY_INI = 'INSERT INTO ' || P_DWH_SCHEMA || '.TCSM_PROJECTED_CASHFLOW_DTM
' || 'WITH QRATE AS (
' || '		SELECT QUOT.*,VARCHAR_FORMAT(REPORTING_DT, ''DD/MM/YYYY'') REPORTING_DT
' || '		FROM ' || P_BI_SCHEMA || '.TBOCURQUOT2 QUOT
' || '		INNER JOIN (
' || '					SELECT SSD_CF||CUR_CF SSD_CUR,LAST_DAY(EXC_D +(3*QUARTER(EXC_D)-MONTH(EXC_D)) MONTH) REPORTING_DT
' || '							,MAX(EXC_D) EXC_D
' || '					FROM  ' || P_BI_SCHEMA || '.TBOCURQUOT2
' || '					WHERE EXC_CT=''C''
' || '					AND  YEAR(EXC_D) =  YEAR(''' || P_REAL_CLOSING_DATE || ''')
' || '					GROUP BY SSD_CF||CUR_CF,LAST_DAY(EXC_D +(3*QUARTER(EXC_D)-MONTH(EXC_D)) MONTH)) QRT
' || '			ON SSD_CF||CUR_CF = SSD_CUR
' || '			AND QUOT.EXC_D = QRT.EXC_D
' || '			AND EXC_CT=''C''
' || '		WHERE REPORTING_DT = ''' || P_REAL_CLOSING_DATE || ''')
' || ',TRT AS (
' || '		SELECT CTR_NF, SEC_NF, SECUWY_NF, ANNUAL_COHORT, PCPCUR_CF, SSD_CF, PROFIT_SIGN_FLG, INSURANCE_CONTRACT_GROUP_ID, ICG_FLAG
' || '			FROM ' || P_BI_SCHEMA || '.TCSM_TRT_CHARACS
' || '			WHERE REPORTING_DT = VARCHAR_FORMAT(''' || P_REAL_CLOSING_DATE || ''' , ''DD/MM/YYYY'') 
' || '				AND CLOSING_QUARTER_CODE = ''' || P_CLOSING_QUARTER || '''
' || '				AND SCENARIO_ID   = ' || P_SCENARIO_ID || ' 
' || '				AND ENTITY_ID =''' || P_ENTITY_ID || '''
' || '				AND INTERVAL =''' || P_INTERVAL || ''' 
' || '				AND RUN_ID   = ' || P_RUN_ID || '
' || '			GROUP BY CTR_NF, SEC_NF, SECUWY_NF, ANNUAL_COHORT, PCPCUR_CF, SSD_CF, PROFIT_SIGN_FLG, INSURANCE_CONTRACT_GROUP_ID, ICG_FLAG)
' || 'SELECT  ''' || P_CLOSING_QUARTER || ''',
' || '    A.REPORTING_DT,
' || '		' || P_SCENARIO_ID || ' AS SCENARIO_ID,		
' || '		''' || P_ENTITY_ID || ''' AS ENTITY_ID,			
' || '    CASE WHEN ICG_FLAG=''Y'' AND ANNUAL_COHORT IS NOT NULL 
' || '		THEN CONTRACT_NUMBER || ''_'' || SECTION_NUMBER || ''_'' || ANNUAL_COHORT
' || '		ELSE TRT.INSURANCE_CONTRACT_GROUP_ID
' || '    END AS INSURANCE_CONTRACT_GROUP_ID,
' || '    CASHFLOW_LEG_NM,
' || '    CEDED_FLG,
' || '    CASE WHEN DTYPE.PROFIT_SIGN_FLG=''N''
' || '    	THEN ''EXR'' 
' || '    	ELSE CASHFLOW_TYPE_CD END AS CASHFLOW_TYPE_CD,
' || '    NVL(PCPCUR_CF,CURRENCY_CD) CURRENCY_CD,
' || '    INCURRED_CLAIM_DT,
' || '    CASHFLOW_DT,
' || '    SUM(NVL((Q1.EXC_R/Q2.EXC_R),1)*CASHFLOW_AMT) CASHFLOW_AMT,
' || '		''' || P_NORM_CODE || ''' AS NORM_CD,
' || '    DATA_TYPE,
' || '		' || P_RUN_ID || ' AS RUN_ID,
' || '		''' || P_INTERVAL || ''' AS INTERVAL,
' || '		TO_CHAR(SYSDATE, ''YYYYMMDD'') AS ASOFDAY,
' || '		AOC_RULE_CD
' || 'FROM (
' || '	SELECT  
' || '	    REPORTING_DT,	
' || '	    CONTRACT_NUMBER,
' || '	    SECTION_NUMBER,
' || '	    POLICY_UW_YEAR,
' || '	    UNDERWRITING_YEAR,
' || '	    CASHFLOW_LEG_NM,
' || '	    CEDED_FLG,
' || '	    CASHFLOW_TYPE_CD,
' || '	    CURRENCY_CD,
' || '	    INCURRED_CLAIM_DT,
' || '	    CASHFLOW_DT,
' || '		AOC_RULE_CD,
' || '	    SUM(CASHFLOW_AMT) CASHFLOW_AMT
' || '	FROM
' || '	    (
' || '	    SELECT  
' || '			VARCHAR_FORMAT(CLOSING_DATE, ''DD/MM/YYYY'')  AS REPORTING_DT,
' || '			CONTRACT_NUMBER,
' || '			SECTION_NUMBER,
' || '			PR.POLICY_UW_YEAR,
' || '			PR.UNDERWRITING_YEAR,
' || '			P.CODE AS CASHFLOW_LEG_NM,
' || '			CEDED_FLG,
' || '			LOC_CODE_CSM  AS CASHFLOW_TYPE_CD,
' || '			PR.CURRENCY_CODE AS CURRENCY_CD,
' || '			CASE
' || '			    WHEN  P.CODE IN (''LCL_CLAIMS_AMT'',''LCL_RSK_ADJ_AMT'',''LCL_PROVENUES_AMT'',''LCL_SETTL_COSTS_AMT''
' || '		                            ,''LCL_RE_DEF_AMT'',''LCL_CLAIMS_PLT_AMT'',''LCL_CLAIMS_LT_AMT'',''LCL_INVESTMENT_AMT'') 
' || '					THEN VARCHAR_FORMAT(PR.PROJECTION_DATE, ''DD/MM/YYYY'') 
' || '				ELSE ''01/01/1960''
' || '			END AS INCURRED_CLAIM_DT,
' || '			VARCHAR_FORMAT(PR.PROJECTION_DATE, ''DD/MM/YYYY'')  AS CASHFLOW_DT,
' || '			AMOUNT AS CASHFLOW_AMT,
' || '			AOC_RULE_CD,
' || '			ROW_NUMBER() OVER(PARTITION BY CLOSING_DATE, CONTRACT_NUMBER,SECTION_NUMBER,UNDERWRITING_YEAR,POLICY_UW_YEAR, P.CODE, LOC_CODE_CSM, CURRENCY_CODE, PROJECTION_DATE 
' || '								ORDER BY LOA.CODE ) RN
' || '		FROM ' || P_BI_SCHEMA || '.PROJECTION_FACT PR
' || '		    INNER JOIN (
' || '			        SELECT DISTINCT
' || '			            CASE WHEN nvl(MATH_OPERATOR,'''')= '''' THEN MP.POSITION_ID
' || '			                ELSE P.ID
' || '			            END POSITION_ID,
' || '			            ID, POSITION_TYPE_ID, CODE
' || '			        FROM ' || P_BI_SCHEMA || '.POSITION_MAPPING MP
' || '			        INNER JOIN ' || P_BI_SCHEMA || '.POSITION P 
' || '			        	ON MP.MAPPING_POSITION_ID = P.ID
' || '			            AND P.IS_CSM
' || '			            AND P.CSM_POSITION_TYPE_ID in (1,5)
' || '			            AND P.VALID_TO = ''9999-12-31''
' || '			            AND MP.VALID_TO = ''9999-12-31'') P 
' || '		        ON PR.POSITION_ID = P.POSITION_ID
' || '		INNER JOIN ' || P_BI_SCHEMA || '.LEVEL_OF_ANALYSIS LOA
' || '			ON LOA.ID=PR.LEVEL_OF_ANALYSIS_ID
' || '			AND LOA.LOC_CODE_CSM  IN (''INI'') 
' || '			AND LOA.VALID_TO = ''9999-12-31''
' || '		INNER JOIN ' || P_BI_SCHEMA || '.SCENARIO_TYPE ST 
' || '			ON PR.SCENARIO_TYPE_ID = ST.ID
' || '			AND ST.CODE = ''ESTIMATE''
' || '			AND ST.VALID_TO = ''9999-12-31''
' || '		INNER JOIN ' || P_BI_SCHEMA || '.REPORTING_BASIS RB 
' || '			ON PR.REPORTING_BASIS_ID = RB.ID
' || '			AND RB.CODE = ''' || P_NORM_CODE || '''
' || '		INNER JOIN  (SELECT CTR_NF,''N'' CEDED_FLG  FROM ' || P_BI_SCHEMA || '.TUWCTR GROUP BY CTR_NF,UWY_NF
' || '					UNION
' || '					SELECT RETCTR_NF, ''Y'' CEDED_FLG  FROM ' || P_BI_SCHEMA || '.TUWRETRO GROUP BY RETCTR_NF,RTY_NF
' || '					) CTR
' || '			ON CTR.CTR_NF= PR.CONTRACT_NUMBER 
' || '		WHERE PR.VALID_TO =''9999-12-31'' 
' || '			AND PR.SUPP_DATE=''9999-12-31'' 
' || '			AND CLOSING_DATE= ''' || P_REAL_CLOSING_DATE || '''
' || '			AND (CLOSING_DATE < PROJECTION_DATE
' || '					OR (YEAR(CLOSING_DATE) = YEAR(PROJECTION_DATE)
' || '							AND (
' || '									(LOA.AFTER_ROLL_FORWARD 
' || '										AND QUARTER(PROJECTION_DATE)>QUARTER(CLOSING_DATE)
' || '										' || V_FILTER_SY || '
' || '									)
' || '									OR 
' || '									(NOT LOA.AFTER_ROLL_FORWARD
' || '										' || V_FILTER_SY || '
' || '									)
' || '								)
' || '						)
' || '				))
' || '	WHERE RN=1
' || '		GROUP BY 
' || '		    REPORTING_DT,	
' || '		    CONTRACT_NUMBER,
' || '		    SECTION_NUMBER,
' || '		    POLICY_UW_YEAR,
' || '		    UNDERWRITING_YEAR,
' || '		    CASHFLOW_LEG_NM,
' || '		    CEDED_FLG,
' || '		    CASHFLOW_TYPE_CD,
' || '		    CURRENCY_CD,
' || '		    INCURRED_CLAIM_DT,
' || '		    CASHFLOW_DT,
' || '			AOC_RULE_CD
' || '			) A
' || '	INNER JOIN TRT ON 
' || ' 	A.CONTRACT_NUMBER = TRT.CTR_NF 
' || ' 	AND A.SECTION_NUMBER = TRT.SEC_NF 
' || ' 	AND 
' || ' 		CASE
' || '			WHEN TRT.ICG_FLAG = ''Y'' THEN A.POLICY_UW_YEAR = TRT.SECUWY_NF
' || '			ELSE 1=1
' || '		END
' || 'INNER JOIN DELIVERY_<env>.CONF_DATATYPE DTYPE
' || '	ON NVL(TRT.PROFIT_SIGN_FLG,''N'')=DTYPE.PROFIT_SIGN_FLG
' || '	AND IS_INI= 1 
' || 'LEFT JOIN QRATE  Q1
' || '	ON (Q1.SSD_CF = TRT.SSD_CF 
' || '	AND A.CURRENCY_CD=Q1.CUR_CF 
' || '	AND Q1.EXC_CT=''C'' 
' || '	AND Q1.REPORTING_DT =A.REPORTING_DT)
' || 'LEFT JOIN QRATE  Q2
' || '	ON (Q2.SSD_CF = TRT.SSD_CF 
' || '	AND TRT.PCPCUR_CF=Q2.CUR_CF 
' || '	AND Q2.EXC_CT=''C'' 
' || '	AND Q2.REPORTING_DT =A.REPORTING_DT)
' || 'GROUP BY    A.REPORTING_DT,		
' || '    CASE WHEN ICG_FLAG=''Y'' AND ANNUAL_COHORT IS NOT NULL 
' || '		THEN CONTRACT_NUMBER || ''_'' || SECTION_NUMBER || ''_'' || ANNUAL_COHORT
' || '		ELSE TRT.INSURANCE_CONTRACT_GROUP_ID
' || '    END,
' || '    CASHFLOW_LEG_NM,
' || '    CEDED_FLG,
' || '    CASE WHEN DTYPE.PROFIT_SIGN_FLG=''N''
' || '    	THEN ''EXR'' 
' || '    	ELSE CASHFLOW_TYPE_CD END,
' || '    NVL(PCPCUR_CF,CURRENCY_CD) ,
' || '    INCURRED_CLAIM_DT,
' || '    CASHFLOW_DT,
' || '    DATA_TYPE,
' || '	  AOC_RULE_CD';

EXECUTE IMMEDIATE V_QUERY_INI;

EXECUTE IMMEDIATE 'COMMIT;';


EXCEPTION
WHEN OTHERS THEN L_ERR_CD := substr(SQLERRM,8,5);


L_ERR_MSG := SQLERRM;


RAISE EXCEPTION '% Error while executing SQL statement',
L_ERR_MSG;


RETURN L_ERR_CD;

END;


END_PROC;