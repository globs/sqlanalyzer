DROP PROCEDURE SP_HIST_RDWH_PROJECTION ;

CREATE OR REPLACE PROCEDURE SP_HIST_RDWH_PROJECTION (BIGINT,
CHARACTER VARYING(20),
CHARACTER VARYING(64),
CHARACTER VARYING(64),
CHARACTER VARYING(64),
CHARACTER VARYING(64),
CHARACTER VARYING(64),
CHARACTER VARYING(64),
CHARACTER VARYING(64),
CHARACTER VARYING(64),
CHARACTER VARYING(64),
CHARACTER VARYING(64),
CHARACTER VARYING(64)) 

RETURNS INTEGER LANGUAGE nzplsql AS BEGIN_PROC 

DECLARE 
P_REQUEST_ID            ALIAS FOR $1;
P_HIST_MODE             ALIAS FOR $2;
P_SRC_SCHEMA            ALIAS FOR $3;
P_SRC_TABLE             ALIAS FOR $4;
P_TRG_SCHEMA            ALIAS FOR $5;
P_TRG_TABLE             ALIAS FOR $6;
P_DLV_SCHEMA            ALIAS FOR $7;
P_DLV_TABLE             ALIAS FOR $8;
P_REF_SCHEMA            ALIAS FOR $9;
P_REF_TABLE             ALIAS FOR $10;
P_GIVEN_TS              ALIAS FOR $11;
P_SUPP_TS               ALIAS FOR $12;
P_INFINITE_TS           ALIAS FOR $13;
L_ERR_CD                CHAR(5);
L_ERR_MSG               VARCHAR(32000);
V_REC                   RECORD;
V_HIST_QUERY_1          VARCHAR(32000);
V_HIST_QUERY_2          VARCHAR(32000);
V_HIST_QUERY_3          VARCHAR(32000);
V_HIST_QUERY_4          VARCHAR(32000);
V_HIST_QUERY_5          VARCHAR(32000);
V_HIST_QUERY_6          VARCHAR(32000);
V_HIST_QUERY_7          VARCHAR(32000);
V_HIST_QUERY_8          VARCHAR(32000);
V_HIST_QUERY_9          VARCHAR(32000);
V_GIVEN_TS              TIMESTAMP;
V_INFINITE_TS           TIMESTAMP;
V_SUPP_TS               TIMESTAMP;
V_SCOPE                 VARCHAR(32);
V_CPT                   BIGINT;
V_CHK_PK                BIGINT;
V_HASH_KEY              VARCHAR(1000);
V_HASH_DELTA            VARCHAR(1000);
V_HASH_FULL             VARCHAR(1000);
V_PIVOT_KEY             VARCHAR(1000);
V_STG_TABLE             VARCHAR(1000);
V_WRK_TABLE             VARCHAR(1000);
V_DIST_KEY              VARCHAR(1000);
V_STG_TBL_DDL           VARCHAR(1000);
V_WRK_TBL_DDL           VARCHAR(1000);
V_STG_SELECT            VARCHAR(1000);
V_WRK_SELECT            VARCHAR(1000);
V_AGG_COL               VARCHAR(1000);
V_WRK_SEL_STG           VARCHAR(1000);
V_WRK_SEL_DWH           VARCHAR(1000);
V_WRK_SEL_SCP           VARCHAR(1000);
V_IPDS_COL              VARCHAR(1000);
V_ALL_COL               VARCHAR(1000);

BEGIN
SET
ISOLATION TO UR;

V_CPT = 0;
V_CHK_PK = 0;
V_GIVEN_TS = CURRENT_TIMESTAMP;
V_INFINITE_TS = '9999-12-31';
V_SUPP_TS = '9999-12-31';
V_STG_TABLE = P_TRG_TABLE || '_STG_' || P_REQUEST_ID;
V_WRK_TABLE = P_TRG_TABLE || '_WRK_' || P_REQUEST_ID;
V_STG_TBL_DDL :='';
V_WRK_TBL_DDL :='';
V_DIST_KEY :='';
V_STG_SELECT :='';
V_WRK_SELECT :='';
V_AGG_COL :='';
V_WRK_SEL_STG :='';
V_WRK_SEL_DWH :='';
V_WRK_SEL_SCP :='';
V_IPDS_COL :='';
V_ALL_COL :='';

IF P_GIVEN_TS = '' THEN
    SELECT
        CURRENT_TIMESTAMP
    INTO
        V_GIVEN_TS
    FROM
        SYSIBM.SYSDUMMY1;
    ELSE V_GIVEN_TS = P_GIVEN_TS;
END IF ;

IF P_SUPP_TS = '' THEN V_SUPP_TS = '9999-12-31';
    ELSE V_SUPP_TS = P_SUPP_TS;
END IF ;

IF P_INFINITE_TS = '' THEN V_INFINITE_TS = '9999-12-31';
    ELSE V_INFINITE_TS = P_INFINITE_TS;
END IF ;

CREATE TEMP TABLE SESSION.KEYS (NAME VARCHAR(50),VALUE VARCHAR(1000)) DISTRIBUTE ON RANDOM;

EXECUTE IMMEDIATE 'INSERT INTO SESSION.KEYS  
    SELECT
        CFK.KEY_NAME AS NAME, 
        ''HASH(NVL(''||LISTAGG(
            CASE 
                WHEN C.TYPENAME = ''DATE'' THEN ''VARCHAR_FORMAT(''||CFK.COLUMN_NAME||'', ''''YYYYMMDD'''')'' 
                WHEN C.TYPENAME = ''TIMESTAMP'' THEN ''VARCHAR_FORMAT(''||CFK.COLUMN_NAME||'', ''''yyyymmddhh24miss'''')'' 
                ELSE CFK.COLUMN_NAME END,'', ''''0'''')||''''-''''||NVL('') WITHIN GROUP(ORDER BY CFK.COLUMN_ORDER) ||'', ''''0''''), 2)'' AS VALUE 
    FROM ' || P_DLV_SCHEMA || '.' || P_DLV_TABLE || ' CFK
    INNER JOIN SYSCAT.COLUMNS C
            ON C.COLNAME = CFK.COLUMN_NAME
            AND C.TABSCHEMA = ''' || P_TRG_SCHEMA || ''' 
            AND C.TABNAME = ''' || P_TRG_TABLE || ''' 
            AND C.COLNAME <> ''RANDOM_DISTRIBUTION_KEY''
    WHERE 
        TABLE_NAME = ''' || P_TRG_TABLE || '''
    GROUP BY 
        CFK.KEY_NAME WITH UR';

SELECT VALUE INTO V_HASH_KEY FROM SESSION.KEYS WHERE NAME = 'HASH_KEY'; 
SELECT VALUE INTO V_PIVOT_KEY FROM SESSION.KEYS WHERE NAME = 'PIVOT_KEY'; 
SELECT VALUE INTO V_HASH_FULL FROM SESSION.KEYS WHERE NAME = 'HASH_KEY_FULL'; 
SELECT VALUE INTO V_HASH_DELTA FROM SESSION.KEYS WHERE NAME = 'HASH_KEY_DELTA'; 

EXECUTE IMMEDIATE 'INSERT INTO SESSION.KEYS 
 SELECT ''V_CPT'' AS NAME ,COUNT(0) 
 FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' WHERE REQUEST_ID=' || P_REQUEST_ID;

SELECT VALUE INTO V_CPT FROM SESSION.KEYS WHERE NAME = 'V_CPT';

IF V_CPT > 0 THEN 
    
    RAISE NOTICE 'RECORDS ARE PRESENT IN STAGING FOR GIVEN REQUEST_ID';

    FOR V_REC IN
    SELECT
        C.COLNAME AS ATTNAME,
        C.TYPENAME AS FORMAT_TYPE,
        CASE U.TYPE WHEN 'P' THEN 'Y' ELSE 'N' END AS ISPK_B,
        CASE WHEN c.colname NOT IN ('VALID_FROM','VALID_TO','SUPP_DATE','CREATED_REQUEST_ID','MODIFIED_REQUEST_ID','DELETED_REQUEST_ID','MATURITY') THEN 'Y' ELSE 'N' END AS STG_DDL,
        CASE WHEN c.colname NOT IN ('HASH_KEY','HASH_KEY_FULL','HASH_KEY_DELTA','PIVOT_KEY','VALID_FROM','VALID_TO','SUPP_DATE','CREATED_REQUEST_ID','MODIFIED_REQUEST_ID','DELETED_REQUEST_ID','MATURITY','AMOUNT','VALUATION_DATE') THEN 'Y' ELSE 'N' END STG_AGG,
        CASE WHEN c.colname NOT IN ('HASH_KEY','HASH_KEY_FULL','HASH_KEY_DELTA','PIVOT_KEY','VALID_FROM','VALID_TO','SUPP_DATE','CREATED_REQUEST_ID','MODIFIED_REQUEST_ID','DELETED_REQUEST_ID','MATURITY','AMOUNT') THEN 'Y' ELSE 'N' END STG_SEL,
        CASE WHEN c.colname NOT IN ('MATURITY') THEN 'Y' ELSE 'N' END AS WRK_DDL,
        CASE WHEN c.colname NOT IN ('HASH_KEY','MATURITY') THEN 'Y' ELSE 'N' END AS WRK_IPDS
    FROM SYSCAT.COLUMNS C
    LEFT OUTER JOIN (
        SELECT
            X.TABSCHEMA,
            X.TABNAME,
            COLNAME,
            TYPE
        FROM SYSCAT.TABCONST X
        INNER JOIN SYSCAT.KEYCOLUSE Y ON X.TABSCHEMA = Y.TABSCHEMA AND X.TABNAME = Y.TABNAME AND X.CONSTNAME = Y.CONSTNAME
        WHERE X.TYPE = 'P'
        AND X.TABSCHEMA = P_TRG_SCHEMA
        AND X.TABNAME = P_TRG_TABLE 
        ) U ON   U.TABSCHEMA = C.TABSCHEMA AND U.TABNAME = C.TABNAME AND U.COLNAME = C.COLNAME
    WHERE C.TABSCHEMA = P_TRG_SCHEMA
        AND C.TABNAME = P_TRG_TABLE
        AND C.COLNAME <> 'RANDOM_DISTRIBUTION_KEY'
    ORDER BY C.COLNO WITH UR;

    RAISE NOTICE 'Treating column ''%'' ',
    V_REC.ATTNAME;

    V_ALL_COL = V_ALL_COL || V_REC.ATTNAME || ',';

    IF V_REC.WRK_DDL = 'Y' THEN V_WRK_TBL_DDL = V_WRK_TBL_DDL || V_REC.ATTNAME || ',';
    END IF;
    IF V_REC.STG_DDL = 'Y' THEN V_STG_TBL_DDL = V_STG_TBL_DDL || V_REC.ATTNAME || ',';
    END IF;
    IF V_REC.ISPK_B = 'Y' THEN V_DIST_KEY = V_DIST_KEY || V_REC.ATTNAME || ',';
    END IF;
    IF V_REC.STG_AGG = 'Y' THEN V_AGG_COL = V_AGG_COL || V_REC.ATTNAME || ',';
    END IF;
    IF V_REC.STG_SEL = 'Y' THEN V_STG_SELECT = V_STG_SELECT || V_REC.ATTNAME || ',';
    END IF;
    IF V_REC.WRK_IPDS = 'Y' THEN V_IPDS_COL = V_IPDS_COL || V_REC.ATTNAME || ',';
    END IF;

    END LOOP;

    V_DIST_KEY = SUBSTRING(V_DIST_KEY,0,LENGTH(V_DIST_KEY));
    V_AGG_COL = V_AGG_COL || 'HISTORIZATION_MODE';
    V_STG_SELECT = V_STG_SELECT || 'HISTORIZATION_MODE,AMOUNT,HASH_KEY,HASH_KEY_FULL,HASH_KEY_DELTA,PIVOT_KEY';
    V_WRK_SELECT = V_STG_TBL_DDL ||'HISTORIZATION_MODE,VALID_FROM,VALID_TO,SUPP_DATE,CREATED_REQUEST_ID,MODIFIED_REQUEST_ID,DELETED_REQUEST_ID';
    V_WRK_SEL_STG = SUBSTRING(V_STG_TBL_DDL,0,LENGTH(V_STG_TBL_DDL));
    V_WRK_SEL_STG = 'STG.'|| REGEXP_REPLACE(V_WRK_SEL_STG,',',',STG.');
    V_WRK_SEL_DWH = REGEXP_REPLACE(V_WRK_SEL_STG,'STG.','DWH.');
    V_WRK_SEL_SCP = REGEXP_REPLACE(V_WRK_SEL_STG,'STG.','SCOPE.');
    V_STG_TBL_DDL = V_STG_TBL_DDL || 'CREATED_BY AS HISTORIZATION_MODE';
    V_WRK_TBL_DDL = V_WRK_TBL_DDL || 'CREATED_BY AS HISTORIZATION_MODE';
    V_IPDS_COL= SUBSTRING(V_IPDS_COL,0,LENGTH(V_IPDS_COL));
    V_ALL_COL = SUBSTRING(V_ALL_COL,0,LENGTH(V_ALL_COL));

    EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_STG_TABLE || ' AS (SELECT ' || V_STG_TBL_DDL || ' FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ')
    WITH NO DATA ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON HASH(HASH_KEY)';

    V_HIST_QUERY_1 = 'INSERT INTO SESSION.' || V_STG_TABLE || '(' || V_STG_SELECT || ')
    SELECT
        ' || V_STG_SELECT || '
    FROM (
        SELECT
            ' || V_AGG_COL || ',
            AMOUNT,
            ' || V_HASH_KEY || '    AS HASH_KEY,
            ' || V_HASH_FULL || '   AS HASH_KEY_FULL,
            ' || V_HASH_DELTA || '  AS HASH_KEY_DELTA,
            ' || V_PIVOT_KEY || '   AS PIVOT_KEY,
            VALUATION_DATE          AS VALUATION_DATE
        FROM (
            SELECT
                ' || V_AGG_COL || ',
                CASE WHEN LVL.AFTER_ROLL_FORWARD IS TRUE THEN CLOSING_DATE
                    WHEN LVL.AFTER_ROLL_FORWARD IS FALSE THEN TO_DATE(''31/12/'' ||(YEAR(CLOSING_DATE) -1),''DD/MM/YYYY'') END AS VALUATION_DATE,
                SUM(AMOUNT) AS AMOUNT
            FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' wrk
            JOIN ' || P_REF_SCHEMA || '.' || P_REF_TABLE || ' LVL ON (LVL.ID = wrk.LEVEL_OF_ANALYSIS_ID AND DATE(LVL.VALID_TO) = ''9999-12-31'' )
            WHERE REQUEST_ID = ' || P_REQUEST_ID || '
            GROUP BY ' || V_AGG_COL || ', LVL.AFTER_ROLL_FORWARD ) STG
    )';

    RAISE NOTICE 'Executing V_HIST_QUERY_1: ''%''',
    V_HIST_QUERY_1;
    EXECUTE IMMEDIATE V_HIST_QUERY_1;

        EXECUTE IMMEDIATE 'INSERT INTO SESSION.KEYS SELECT ''V_CHK_PK'' AS NAME, MAX(t.VALUES) AS VALUE FROM (SELECT COUNT(0) AS VALUES FROM SESSION.' || V_STG_TABLE || ' GROUP BY HASH_KEY HAVING COUNT(0)>1) t';     
        SELECT VALUE INTO V_CHK_PK FROM SESSION.KEYS WHERE NAME = 'V_CHK_PK'; 

    IF V_CHK_PK IS NULL  
        THEN RAISE NOTICE 'DATA UNICITY CONSISTENCY PASSED FOR STAGING DATA';

        EXECUTE IMMEDIATE 'DECLARE GLOBAL TEMPORARY TABLE SESSION.' || V_WRK_TABLE || ' AS 
        (SELECT ' || V_WRK_TBL_DDL || ' FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ') 
        WITH NO DATA ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE DISTRIBUTE ON HASH(' || V_DIST_KEY || ')';

        V_HIST_QUERY_2 = 'INSERT INTO SESSION.' || V_WRK_TABLE || '(' || V_WRK_SELECT || ')
        SELECT ' || V_WRK_SEL_STG || ',
           ''I-''||STG.HISTORIZATION_MODE   AS HISTORIZATION_MODE,
           ''' || V_GIVEN_TS || '''                 AS VALID_FROM,
           ''' || V_INFINITE_TS || '''               AS VALID_TO  ,
           ''' || V_SUPP_TS || '''                   AS SUPP_DATE ,
           ' || P_REQUEST_ID || '               AS CREATED_REQUEST_ID,
           NULL                             AS MODIFIED_REQUEST_ID,
           NULL                             AS DELETED_REQUEST_ID 
        FROM SESSION.' || V_STG_TABLE || '  AS STG
        LEFT OUTER JOIN ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' AS DWH 
        ON (STG.HASH_KEY = DWH.HASH_KEY AND DATE(DWH.VALID_TO) =DATE(''' || V_INFINITE_TS || ''') AND DATE(DWH.SUPP_DATE) =DATE(''' || V_SUPP_TS || '''))
        WHERE DWH.HASH_KEY IS NULL';        

        V_HIST_QUERY_3 = 'INSERT INTO SESSION.' || V_WRK_TABLE || '(' || V_WRK_SELECT || ')
           SELECT ' || V_WRK_SEL_STG || ',
               ''U-''||STG.HISTORIZATION_MODE   AS HISTORIZATION_MODE,
               ''' || V_GIVEN_TS || '''                 AS VALID_FROM,
               ''' || V_INFINITE_TS || '''                   AS VALID_TO,
               ''' || V_SUPP_TS || '''                   AS SUPP_DATE,
               DWH.CREATED_REQUEST_ID           AS CREATED_REQUEST_ID,
               ' || P_REQUEST_ID || '               AS MODIFIED_REQUEST_ID,
               NULL                             AS DELETED_REQUEST_ID
           FROM SESSION.' || V_STG_TABLE || '  AS STG
        INNER JOIN ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' AS DWH 
        ON (STG.HASH_KEY = DWH.HASH_KEY AND DATE(DWH.VALID_TO) =DATE(''' || V_INFINITE_TS || ''') AND DATE(DWH.SUPP_DATE) =DATE(''' || V_SUPP_TS || '''))
        WHERE  DWH.PIVOT_KEY <> STG.PIVOT_KEY';      

        V_HIST_QUERY_4 = 'INSERT INTO SESSION.' || V_WRK_TABLE || '(' || V_WRK_SELECT || ')
           SELECT ' || V_WRK_SEL_DWH || ', 
                ''I-''||STG.HISTORIZATION_MODE   AS HISTORIZATION_MODE,
               DWH.VALID_FROM                   ,
                ''' || V_GIVEN_TS || '''             AS VALID_TO,
               DWH.SUPP_DATE                ,
               DWH.CREATED_REQUEST_ID         AS CREATED_REQUEST_ID,
                ' || P_REQUEST_ID || '        AS MODIFIED_REQUEST_ID,
                NULL                          AS DELETED_REQUEST_ID
        FROM SESSION.' || V_STG_TABLE || '  AS STG
        INNER JOIN ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' AS DWH ON (STG.HASH_KEY = DWH.HASH_KEY AND DATE(DWH.VALID_TO) =DATE(''' || V_INFINITE_TS || ''') AND DATE(DWH.SUPP_DATE) =DATE(''' || V_SUPP_TS || ''') ) 
        WHERE STG.PIVOT_KEY <> DWH.PIVOT_KEY ';

        V_HIST_QUERY_5 = 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' DWH
        WHERE EXISTS (
              SELECT 1
                FROM SESSION.' || V_WRK_TABLE || ' WRK  
               WHERE WRK.HASH_KEY = DWH.HASH_KEY AND WRK.PIVOT_KEY = DWH.PIVOT_KEY AND DATE(DWH.VALID_TO) =DATE(''' || V_INFINITE_TS || ''') AND DATE(DWH.SUPP_DATE) =DATE(''' || V_SUPP_TS || ''') 
        AND WRK.HISTORIZATION_MODE IN (''I-INCREMENTAL'',''I-FULL''))';

        V_HIST_QUERY_6 = 'INSERT INTO SESSION.' || V_WRK_TABLE || '(' || V_WRK_SELECT || ')
        SELECT ' || V_WRK_SEL_SCP || ',
           ''D-FULL''    AS HISTORIZATION_MODE,
           SCOPE.VALID_FROM                   ,
           SCOPE.VALID_TO                     ,
           ''' || V_GIVEN_TS || ''' AS SUPP_DATE , 
           SCOPE.CREATED_REQUEST_ID           ,
           SCOPE.MODIFIED_REQUEST_ID          ,
           ' || P_REQUEST_ID || '
        FROM SESSION.' || V_STG_TABLE || '  AS STG
        RIGHT OUTER JOIN 
        (SELECT ' || V_ALL_COL || ' FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' DWH
                       WHERE EXISTS (
              SELECT 1
                FROM SESSION.' || V_STG_TABLE || ' STG
               WHERE STG.HASH_KEY_FULL = DWH.HASH_KEY_FULL AND DATE(DWH.VALID_TO) =DATE(''' || V_INFINITE_TS || ''') AND STG.HISTORIZATION_MODE IN (''FULL'')  AND DATE(DWH.SUPP_DATE) =DATE(''' || V_SUPP_TS || ''')
        )) AS SCOPE ON (STG.HASH_KEY = SCOPE.HASH_KEY)
        WHERE STG.HASH_KEY IS NULL ';

        V_HIST_QUERY_7 = 'INSERT INTO SESSION.' || V_WRK_TABLE || '(' || V_WRK_SELECT || ')
        SELECT ' || V_WRK_SEL_SCP || ',
           ''D-INCREMENTAL'' AS HISTORIZATION_MODE,
           SCOPE.VALID_FROM                   ,
           SCOPE.VALID_TO                     ,
           ''' || V_GIVEN_TS || ''' AS SUPP_DATE ,
           SCOPE.CREATED_REQUEST_ID           ,
           SCOPE.MODIFIED_REQUEST_ID          ,
           ' || P_REQUEST_ID || '  
        FROM SESSION.' || V_STG_TABLE || '  AS STG
        RIGHT OUTER JOIN 
        (SELECT ' || V_ALL_COL || ' FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' DWH
        WHERE EXISTS (
              SELECT 1
                FROM SESSION.' || V_STG_TABLE || ' STG
               WHERE STG.HASH_KEY_DELTA = DWH.HASH_KEY_DELTA AND DATE(DWH.VALID_TO) =DATE(''' || V_INFINITE_TS || ''') AND DATE(DWH.SUPP_DATE) =DATE(''' || V_SUPP_TS || ''') AND STG.HISTORIZATION_MODE IN (''INCREMENTAL'')
        )) AS SCOPE ON (STG.HASH_KEY = SCOPE.HASH_KEY)
        WHERE STG.HASH_KEY IS NULL ';

        V_HIST_QUERY_8 = 'DELETE FROM ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || ' DWH
        WHERE EXISTS (
              SELECT 1
                FROM SESSION.' || V_WRK_TABLE || ' WRK  
               WHERE WRK.HASH_KEY = DWH.HASH_KEY AND WRK.PIVOT_KEY = DWH.PIVOT_KEY AND DATE(DWH.VALID_TO) =DATE(''' || V_INFINITE_TS || ''') AND DATE(DWH.SUPP_DATE) =DATE(''' || V_SUPP_TS || ''') 
                AND WRK.HISTORIZATION_MODE IN (''D-INCREMENTAL'',''D-FULL'') )';

        V_HIST_QUERY_9 = 'INSERT INTO  ' || P_TRG_SCHEMA || '.' || P_TRG_TABLE || '
        (' || V_IPDS_COL || ')
        SELECT ' || V_IPDS_COL || '   
        FROM SESSION.' || V_WRK_TABLE;

        IF P_HIST_MODE = 'FULL' THEN RAISE NOTICE 'FULL SCOPE TREATMENT';

            RAISE NOTICE 'Executing V_HIST_QUERY_2: ''%''',V_HIST_QUERY_2;

            EXECUTE IMMEDIATE V_HIST_QUERY_2;

            RAISE NOTICE 'Executing V_HIST_QUERY_3: ''%''',V_HIST_QUERY_3;

            EXECUTE IMMEDIATE V_HIST_QUERY_3;

            RAISE NOTICE 'Executing V_HIST_QUERY_4: ''%''',V_HIST_QUERY_4;

            EXECUTE IMMEDIATE V_HIST_QUERY_4;

            RAISE NOTICE 'Executing V_HIST_QUERY_5: ''%''',V_HIST_QUERY_5;

            EXECUTE IMMEDIATE V_HIST_QUERY_5;

            RAISE NOTICE 'Executing V_HIST_QUERY_6: ''%''',V_HIST_QUERY_6;

            EXECUTE IMMEDIATE V_HIST_QUERY_6;

            RAISE NOTICE 'Executing V_HIST_QUERY_8: ''%''',V_HIST_QUERY_8;

            EXECUTE IMMEDIATE V_HIST_QUERY_8;

            RAISE NOTICE 'Executing V_HIST_QUERY_9: ''%''',V_HIST_QUERY_9;

            EXECUTE IMMEDIATE V_HIST_QUERY_9;


        ELSE RAISE NOTICE 'INCREMENTAL SCOPE TREATMENT';

            RAISE NOTICE 'Executing V_HIST_QUERY_2: ''%''',V_HIST_QUERY_2;

            EXECUTE IMMEDIATE V_HIST_QUERY_2;

            RAISE NOTICE 'Executing V_HIST_QUERY_3: ''%''',V_HIST_QUERY_3;

            EXECUTE IMMEDIATE V_HIST_QUERY_3;

            RAISE NOTICE 'Executing V_HIST_QUERY_4: ''%''',V_HIST_QUERY_4;

            EXECUTE IMMEDIATE V_HIST_QUERY_4;

            RAISE NOTICE 'Executing V_HIST_QUERY_5: ''%''',V_HIST_QUERY_5;

            EXECUTE IMMEDIATE V_HIST_QUERY_5;
             
            RAISE NOTICE 'Executing V_HIST_QUERY_7: ''%''',V_HIST_QUERY_7;

            EXECUTE IMMEDIATE V_HIST_QUERY_7;

            RAISE NOTICE 'Executing V_HIST_QUERY_8: ''%''',V_HIST_QUERY_8;

            EXECUTE IMMEDIATE V_HIST_QUERY_8;

            RAISE NOTICE 'Executing V_HIST_QUERY_9: ''%''',V_HIST_QUERY_9;

            EXECUTE IMMEDIATE V_HIST_QUERY_9;

        END IF;
    ELSE RAISE EXCEPTION 'DATA UNICITY CONSISTENCY FAILED FOR STAGING DATA';
    END IF;

ELSE RAISE EXCEPTION 'RECORDS ARE NOT PRESENT IN STAGING FOR GIVEN REQUEST_ID';
END IF;

EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_STG_TABLE || ' IF EXISTS';

EXECUTE IMMEDIATE 'DROP TABLE SESSION.' || V_WRK_TABLE || ' IF EXISTS';

DROP TABLE SESSION.KEYS IF EXISTS;

EXECUTE IMMEDIATE 'DELETE FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' WHERE REQUEST_ID = ' || P_REQUEST_ID;

EXCEPTION WHEN OTHERS THEN L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
    L_ERR_MSG := SQLERRM; 
    RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
    RETURN L_ERR_CD; 
 
END; 

END_PROC;
