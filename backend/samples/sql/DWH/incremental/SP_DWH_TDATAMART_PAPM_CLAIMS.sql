DROP PROCEDURE ADMIN_TDATAMART_PAPM_CLAIMS;

CREATE OR REPLACE PROCEDURE ADMIN_TDATAMART_PAPM_CLAIMS(SMALLINT,SMALLINT,VARCHAR(10),SMALLINT,VARCHAR(1)) 
RETURNS INTEGER
LANGUAGE NZPLSQL AS BEGIN_PROC

DECLARE 

	P_BS_YEAR ALIAS FOR $1;
	P_BS_Q ALIAS FOR $2;
	P_VALIDITY_DATE ALIAS FOR $3;
	P_GAAP_CODE ALIAS FOR $4;
	P_DISCOUNT ALIAS FOR $5;
	L_ERR_CD CHAR(5);
	L_ERR_MSG VARCHAR(32000);

BEGIN

DELETE FROM DWH_TDATAMART_PAPM_CLAIMS
WHERE "Validity Date" = P_VALIDITY_DATE
	AND "Gaap Code" = P_GAAP_CODE
	AND "TL - Balance Sheet Year" = P_BS_YEAR
	AND "Quarter" = P_BS_Q
	AND "TL - DISCOUNT" = P_DISCOUNT; 

INSERT INTO DWH_TDATAMART_PAPM_CLAIMS
(
    "Validity Date"              ,        
    "TL - Balance Sheet Year"    ,
    "Quarter"                    ,
    "Gaap Code"                  ,
    "TL - DISCOUNT"              ,
    "TL - Subsidiary"            ,
    "TL - Subsidiary Ledger"     ,
    "Contract Nature"            ,
    "Geographical Zone"          ,
    "Loyds_Flags"                ,
    "TL - Currency"              ,
    "TL - Acc. Amount"       	
)
SELECT
   P_VALIDITY_DATE,
   P_BS_YEAR ,
   P_BS_Q ,
   P_GAAP_CODE,
   P_DISCOUNT,
   THFULLGLT.SSD_CF "TL - Subsidiary",
   THFULLGLT.ESB_CF "TL - Subsidiary Ledger",
   TTECLEDA_ACC_TUWSEC.CTRNAT_CT "Contract Nature",
   TTECLEDA_ACC_TUWSEC.MRKUNT_NT "Geographical Zone",
   DECODE(TTECLEDA_ACC_TUWSEC.GRPGRP22_NT,2050,'L','O'),
   THFULLGLT.CUR_CF,
   SUM(( ROUND(( CAST(THFULLGLT.AMT_M AS DECIMAL(18, 3)) ), 3) )) "TL - Acc. Amount"
FROM    DWH_THFULLGLT THFULLGLT
LEFT OUTER JOIN DWH_TUWSEC TTECLEDA_ACC_TUWSEC ON
   (TTECLEDA_ACC_TUWSEC.SECSTS_CT <> 25
   AND THFULLGLT.SSD_CF = TTECLEDA_ACC_TUWSEC.SSD_CF
   AND THFULLGLT.CTR_NF = TTECLEDA_ACC_TUWSEC.CTR_NF
   AND THFULLGLT.UWY_NF = TTECLEDA_ACC_TUWSEC.UWY_NF
   AND THFULLGLT.UW_NT = TTECLEDA_ACC_TUWSEC.UW_NT
   AND THFULLGLT.END_NT = TTECLEDA_ACC_TUWSEC.END_NT
   AND THFULLGLT.SEC_NF = TTECLEDA_ACC_TUWSEC.SEC_NF
   AND (( to_timestamp(P_VALIDITY_DATE || ' 23:59:59','YYYY-MM-DD HH24:MI:SS') >= TTECLEDA_ACC_TUWSEC.START_D
		AND to_timestamp(P_VALIDITY_DATE || ' 23:59:59','YYYY-MM-DD HH24:MI:SS') < TTECLEDA_ACC_TUWSEC.END_D)
	OR (P_VALIDITY_DATE = '9999-12-31' AND to_date(P_VALIDITY_DATE,'yyyy-mm-dd')= TTECLEDA_ACC_TUWSEC.END_D)))
INNER JOIN DWH_TBOPRSLNK_H TBOPRSLNK_ACC_TRN ON
   (TBOPRSLNK_ACC_TRN.DETTRS_CF = THFULLGLT.TRNCOD_CF
   AND (( to_timestamp(P_VALIDITY_DATE || ' 23:59:59','YYYY-MM-DD HH24:MI:SS') >= TBOPRSLNK_ACC_TRN.START_D
		AND to_timestamp(P_VALIDITY_DATE || ' 23:59:59','YYYY-MM-DD HH24:MI:SS') < TBOPRSLNK_ACC_TRN.END_D)
	OR (P_VALIDITY_DATE = '9999-12-31' AND to_date(P_VALIDITY_DATE, 'yyyy-mm-dd')= TBOPRSLNK_ACC_TRN.END_D)))
   LEFT OUTER JOIN ( 
					select * FROM DWH_TGAAPDEFLOCFIX
										union
										select 17, 150 from SYSIBM.SYSDUMMY1 
										union 
										select 17, 100 from SYSIBM.SYSDUMMY1 
										union
										select 17, 1 from SYSIBM.SYSDUMMY1 
										union
										select 17, 2 from SYSIBM.SYSDUMMY1 
										union 
										select 17, 12 from SYSIBM.SYSDUMMY1 
										union
										select 17, 22 from SYSIBM.SYSDUMMY1 
										union 
										select 17, 32 from SYSIBM.SYSDUMMY1 
										union
										select 17, 42 from SYSIBM.SYSDUMMY1 
										union
										select 17, 52 from SYSIBM.SYSDUMMY1 
										union 
										select 17, 62 from SYSIBM.SYSDUMMY1 
										union
										select 17, 72 from SYSIBM.SYSDUMMY1
  )  D_TRN_TGAAP_DEF_FIXLOCAL_TRN ON (D_TRN_TGAAP_DEF_FIXLOCAL_TRN.TRNTYP_CT= CASE WHEN  substring(TBOPRSLNK_ACC_TRN.DETTRS_CF,8,1) in ('C','D') then 198 WHEN  substring(TBOPRSLNK_ACC_TRN.DETTRS_CF,8,1) in ('E','F') then 199 else TBOPRSLNK_ACC_TRN.TRNTYP_CT end)
   LEFT OUTER JOIN ( 
				select * from DWH_TGAAP_TYPE
				union
				select 17, 'IFRS17' from  SYSIBM.SYSDUMMY1 
  )  D_TGAAP_TYPE_IFRS17_GLT ON (D_TRN_TGAAP_DEF_FIXLOCAL_TRN.GAAP_CODE=D_TGAAP_TYPE_IFRS17_GLT.GAAP_CODE)
WHERE   SUBSTRING(TBOPRSLNK_ACC_TRN.DETTRS_CF, 1, 1) IN ( '1','3') 
   AND  TTECLEDA_ACC_TUWSEC.ACTIV2_CF IN ('100','200','600','310','330','510','530','550') 
   AND  THFULLGLT.CTR_NF NOT IN ('17ZF47945', '17ZF47946', '17ZF41787','17ZF35062') 
   AND  THFULLGLT.BALSHEY_NF = P_BS_YEAR 
   AND case when THFULLGLT.BALSHRMTH_NF in (1,2,3) then '1' 
   			when THFULLGLT.BALSHRMTH_NF in (4,5,6) then '2' 
   			when THFULLGLT.BALSHRMTH_NF in (7,8,9) then '3' 
   			when THFULLGLT.BALSHRMTH_NF in (10,11,12) then '4' 
   		end <= P_BS_Q  
   AND TTECLEDA_ACC_TUWSEC.CED_NF NOT IN (22072)
   AND TBOPRSLNK_ACC_TRN.ACMTRSL2_NT IN ( 301,303,307,309,320 )
   AND  TBOPRSLNK_ACC_TRN.TRSTYP_NT = 3 
   AND  CASE  WHEN TTECLEDA_ACC_TUWSEC.CED_NF IS NULL THEN NULL
       		ELSE CASE  WHEN TTECLEDA_ACC_TUWSEC.ECHINT_B IS FALSE THEN 'N'
           				ELSE 'Y'
       			END
   		END = 'N' 
   AND D_TGAAP_TYPE_IFRS17_GLT.GAAP_CODE = P_GAAP_CODE 
   AND CASE WHEN (THFULLGLT.BLART_CF)= 'ZJ' THEN 'SAP TopGL'
       		WHEN (THFULLGLT.BLART_CF)= 'ZY'AND (THFULLGLT.SEGMENT_CF) <> 29 THEN 'SAP TopGL Conso'
      		WHEN (THFULLGLT.BLART_CF)= 'ZY' AND (THFULLGLT.SEGMENT_CF) = 29 THEN 'ToNotShow'
       		WHEN (THFULLGLT.CLOSING_TYPE_TRT_CF = 'PC_AIB'OR THFULLGLT.SPEENTNAT_CT = 3) THEN 'PC Conso Adjustments'
       		WHEN (THFULLGLT.SPEENTNAT_CT = 6) THEN 'Conso EBS'
      		WHEN (THFULLGLT.CLOSING_NORM_CF = 'LOCAL' ) THEN 'Local Adjustments'
       		ELSE 'OmegaData'
   		END  IN ('OmegaData', 'SAP TopGL', 'PC Conso Adjustments','SAP TopGL Conso') 
   AND  THFULLGLT.CLOSING_NORM_CF<> 'SRV' 
   AND CASE WHEN P_DISCOUNT='A' THEN 'A'
   		ELSE CASE WHEN ( TBOPRSLNK_ACC_TRN.ACMTRSL3_NT ) IN (1016,1017,1021,1031,3086,3096) 
	   				THEN  'Y' 
	   			ELSE  'N' END
	   		END
   		= P_DISCOUNT
GROUP BY
   THFULLGLT.SSD_CF,
   THFULLGLT.ESB_CF,
   TTECLEDA_ACC_TUWSEC.MRKUNT_NT,
   TTECLEDA_ACC_TUWSEC.CTRNAT_CT,
   DECODE(TTECLEDA_ACC_TUWSEC.GRPGRP22_NT,2050,'L','O'),
   THFULLGLT.CUR_CF;


RAISE NOTICE 'End of PAPM Claims table creation';


RETURN 0;


EXCEPTION
WHEN OTHERS THEN L_ERR_CD := substr(SQLERRM,8,5);


L_ERR_MSG := SQLERRM;


RAISE EXCEPTION '% Error while executing SQL statement',
L_ERR_MSG;


RETURN L_ERR_CD;

END;


END_PROC;