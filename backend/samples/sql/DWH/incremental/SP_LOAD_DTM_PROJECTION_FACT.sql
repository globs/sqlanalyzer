DROP PROCEDURE SP_LOAD_DTM_PROJECTION_FACT ;

CREATE OR REPLACE PROCEDURE SP_LOAD_DTM_PROJECTION_FACT ( BIGINT ,
VARCHAR(10) ,
VARCHAR(32) ,
VARCHAR(64) ,
VARCHAR(64) ,
VARCHAR(64) ,
VARCHAR(64) ,
VARCHAR(64) ,
VARCHAR(64) ,
VARCHAR(64) ,
VARCHAR(64) ,
VARCHAR(64) ,
VARCHAR(64) ) 
RETURNS INTEGER LANGUAGE nzplsql AS 
BEGIN_PROC

DECLARE 

    P_REQUEST_ID            ALIAS FOR $1;
    P_CLOSING_DATE          ALIAS FOR $2;
    P_REPORTING_BASIS       ALIAS FOR $3;
    P_SRC_SCHEMA            ALIAS FOR $4;
    P_SRC_TABLE             ALIAS FOR $5;
    P_STG_SCHEMA            ALIAS FOR $6;
    P_STG_TABLE             ALIAS FOR $7;
    P_DLV_SCHEMA            ALIAS FOR $8;
    P_DLV_TBL_PERIOD        ALIAS FOR $9;
    P_DLV_DTM_RULES         ALIAS FOR $10;
    P_LOAD_MODE             ALIAS FOR $11;
    P_INSERT_DTM            ALIAS FOR $12;
    P_DTM_TABLE             ALIAS FOR $13;
    V_REC                   RECORD;
    V_REF_YEAR              VARCHAR(64000);
    V_QUERY                 VARCHAR(64000);
    V_QUERY_RULES           VARCHAR(64000);
    V_QUERY_YQ2M            VARCHAR(64000);
    V_QUERY_Y2Q             VARCHAR(64000);
    V_QUERY_FROM            VARCHAR(64000);
    V_QUERY_DELTA1          VARCHAR(64000);
    V_QUERY_DELTA2          VARCHAR(64000);
    V_QUERY_CSM             VARCHAR(64000);
    V_QUERY_COMP            VARCHAR(64000);
    V_QUERY_AOC             VARCHAR(64000);
    V_CLEAN_STG             VARCHAR(64000);
    V_DELETE_DTM            VARCHAR(64000);
    V_INSERT_DTM            VARCHAR(64000);
    V_JOINTURE              VARCHAR(64000);
    V_SRC_TBL               VARCHAR(64000);
    V_RULE_CD               VARCHAR(64000);
    V_FILTER                VARCHAR(64000);
    V_FILTER_Y2Q            VARCHAR(64000);
    V_FILTER_1              VARCHAR(64000);
    V_FILTER_2              VARCHAR(64000);
    V_MAX_FIR_INTERVAL      SMALLINT;
    V_MAX_SEC_INTERVAL      SMALLINT;
    V_PERIODICITY           SMALLINT;
    L_ERR_CD                CHAR(5);
    L_ERR_MSG               VARCHAR(32000);
    V_CURRENT_TS            TIMESTAMP;

    V_CREATE_TEMP_TABLE     	VARCHAR(64000);
  	V_INSERT_TEMP_TABLE     	VARCHAR(64000);
	V_TEMP_SOURCE_TABLE_NAME 	VARCHAR(64);
	V_TEMP_AOC_RULE_TABLE_NAME 	VARCHAR(64);
	
	
BEGIN

SET ISOLATION TO UR;

V_TEMP_SOURCE_TABLE_NAME := 'STAGING_<env>.WRK_DTM_PROJECTION_SOURCE';
V_TEMP_AOC_RULE_TABLE_NAME := 'STAGING_<env>.WRK_DTM_PROJECTION_AOC_RULES';

EXECUTE IMMEDIATE 'DROP TABLE ' || V_TEMP_SOURCE_TABLE_NAME || ' IF EXISTS';
EXECUTE IMMEDIATE 'DROP TABLE ' || V_TEMP_AOC_RULE_TABLE_NAME || ' IF EXISTS';


SELECT CURRENT_TIMESTAMP INTO V_CURRENT_TS FROM SYSIBM.SYSDUMMY1;

SELECT MAX(MIN_INTERVAL) INTO V_MAX_FIR_INTERVAL 
    FROM  DELIVERY_<env>.CONF_PERIODICITY PERIOD 
    WHERE PERIODICITY_TYPE<20 
    AND IS_ACTIVE IS TRUE;

SELECT MAX(MAX_INTERVAL) INTO V_MAX_SEC_INTERVAL 
    FROM  DELIVERY_<env>.CONF_PERIODICITY PERIOD 
    WHERE PERIODICITY_TYPE<20 
    AND IS_ACTIVE IS TRUE;

SELECT (CASE WHEN PERIODICITY_TYPE = 10 THEN 2 ELSE 1 END) INTO V_PERIODICITY    
FROM  DELIVERY_<env>.CONF_PERIODICITY PERIOD 
WHERE PERIODICITY_TYPE<20 
AND IS_ACTIVE IS TRUE
LIMIT 1;

RAISE NOTICE 'CLEAN UP WRK TABLE';

EXECUTE IMMEDIATE 'DELETE FROM ' || P_STG_SCHEMA || '.' || P_STG_TABLE || ' WHERE REQUEST_ID=' || P_REQUEST_ID || ' ';

V_REF_YEAR = 'CASE WHEN IS_AFTER_PERIODICITY THEN YEAR(CLOSING_DATE)
                        ELSE YEAR(VALUATION_DATE)
                    END';

V_FILTER_1 = V_REF_YEAR || ' + ' || V_MAX_FIR_INTERVAL || ' ' ;

V_FILTER_2 = V_REF_YEAR || ' + ' || V_MAX_SEC_INTERVAL || ' ' ;

IF V_PERIODICITY = 1 THEN 
    V_JOINTURE = 'CASE WHEN PR.PROJECTION_YEAR <= ' || V_FILTER_1 || '    THEN 11
                       WHEN PR.PROJECTION_YEAR <= ' || V_FILTER_2 || '    THEN 12';
ELSEIF V_PERIODICITY = 2 THEN 
    V_JOINTURE = 'CASE WHEN  PR.PROJECTION_YEAR <= ' || V_FILTER_2 || '    THEN 10';
END IF;


IF V_PERIODICITY = 1 THEN
    V_FILTER = 'PR.PROJECTION_YEAR > ' || V_FILTER_1 || '
                AND  PR.PROJECTION_YEAR <= ' || V_FILTER_2 || ' ' ;
ELSEIF V_PERIODICITY = 2 THEN 
    V_FILTER = 'PR.PROJECTION_YEAR <= ' || V_FILTER_2 || ' ' ;
END IF;

IF P_LOAD_MODE = 'FULL' 
        THEN V_SRC_TBL = '(SELECT 
                                PR.*
                            FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' PR
                            INNER JOIN  ' || P_SRC_SCHEMA || '.DWH_REPORTING_BASIS RB ON PR.REPORTING_BASIS_ID = RB.ID
                            WHERE  VALID_TO=''9999-12-31'' AND SUPP_DATE=''9999-12-31''
                               AND PR.CLOSING_DATE  = ''' || P_CLOSING_DATE || '''
                               AND RB.CODE  = ''' || P_REPORTING_BASIS || '''
                            )' ;

ELSEIF P_LOAD_MODE = 'DELTA' 
        THEN V_SRC_TBL = '(SELECT 
                                PR.*
                            FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' PR
                            INNER JOIN 
                                 (SELECT 
                                     CLOSING_DATE,CONTRACT_NUMBER,SECTION_NUMBER,BUSINESS_MATURITY_ID,REPORTING_BASIS_ID,CASE WHEN POSITION_ID =407 THEN 1 ELSE 0 END  IS_RISK_ADJ_COC
                                FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' 
                                INNER JOIN  ' || P_SRC_SCHEMA || '.DWH_REPORTING_BASIS RB ON REPORTING_BASIS_ID = RB.ID
                                 WHERE  (CREATED_REQUEST_ID=' || P_REQUEST_ID || '  OR MODIFIED_REQUEST_ID=' || P_REQUEST_ID || ') 
                                    AND CLOSING_DATE  = ''' || P_CLOSING_DATE || '''
                                    AND RB.CODE  = ''' || P_REPORTING_BASIS || '''
                                    AND  VALID_TO=''9999-12-31'' AND SUPP_DATE=''9999-12-31'' 
                                 GROUP BY CLOSING_DATE,CONTRACT_NUMBER,SECTION_NUMBER,BUSINESS_MATURITY_ID,REPORTING_BASIS_ID,CASE WHEN POSITION_ID =407 THEN 1 ELSE 0 END
                                 ) PR_DELTA
                             ON PR.CONTRACT_NUMBER  = PR_DELTA.CONTRACT_NUMBER
                               AND PR.SECTION_NUMBER  = PR_DELTA.SECTION_NUMBER
                               AND PR.CLOSING_DATE  = PR_DELTA.CLOSING_DATE
                               AND PR.BUSINESS_MATURITY_ID  = PR_DELTA.BUSINESS_MATURITY_ID
                               AND PR.REPORTING_BASIS_ID  = PR_DELTA.REPORTING_BASIS_ID
                               AND CASE WHEN PR.POSITION_ID =407 THEN 1 ELSE 0 END  = PR_DELTA.IS_RISK_ADJ_COC
                               AND PR.VALID_TO=''9999-12-31'' AND PR.SUPP_DATE=''9999-12-31'' ) ';

END IF;

V_CREATE_TEMP_TABLE := '
CREATE TABLE  ' || V_TEMP_SOURCE_TABLE_NAME || ' AS 
( ' ||
  V_SRC_TBL ||
' ) WITH NO DATA IN TBS_<env> DISTRIBUTE BY HASH(contract_number) 
';
V_INSERT_TEMP_TABLE := '
INSERT INTO  ' || V_TEMP_SOURCE_TABLE_NAME || ' 
' ||
  V_SRC_TBL || ' ';

RAISE NOTICE 'Creating temp source data table';
RAISE NOTICE 'With Query: ''%'' , ''%''', V_CREATE_TEMP_TABLE , V_INSERT_TEMP_TABLE;
EXECUTE IMMEDIATE V_CREATE_TEMP_TABLE;
EXECUTE IMMEDIATE 'COMMIT';
EXECUTE IMMEDIATE V_INSERT_TEMP_TABLE;
CALL SYSPROC.ADMIN_CMD ('RUNSTATS ON TABLE ' || V_TEMP_SOURCE_TABLE_NAME || ' on all columns and columns((CONTRACT_NUMBER,SECTION_NUMBER,CLOSING_DATE,REPORTING_BASIS_ID,BUSINESS_MATURITY_ID)) WITH DISTRIBUTION ON ALL COLUMNS TABLESAMPLE SYSTEM (10)');
EXECUTE IMMEDIATE 'COMMIT';

V_QUERY_RULES = ' 
SELECT 
    RULE_CD,
    CONTRACT_NUMBER         ,
    UNDERWRITING_YEAR       ,
    SECTION_NUMBER          ,
    UNDERWRITING_ORDER      ,
    ENDORSEMENT_NUMBER      ,
    POLICY_UW_YEAR          ,
    CLOSING_DATE            ,
    VALUATION_DATE          ,
    BUSINESS_MATURITY_ID    ,
    REPORTING_BASIS_ID      ,
    ASSUMED_CONTRACT_NUMBER ,
    ASSUMED_SECTION_NUMBER  ,
    POSITION_ID             ,
    LEVEL_OF_ANALYSIS_ID    ,
    SCENARIO_TYPE_ID        ,
    SCENARIO_PARAMETER      ,
    CURRENCY_CODE           ,
    SPLIT_TYPE_ID           ,
    PROJECTION_YEAR         ,
    MONTH(LAST_DAY(REPLACE(CF_Rules.CASHFLOW_DT,''YYYY'',PROJECTION_YEAR))) AS PROJECTION_MONTH,
    LAST_DAY(REPLACE(CF_Rules.CASHFLOW_DT,''YYYY'',PROJECTION_YEAR)) AS PROJECTION_DATE,
    CASE WHEN PR.POSITION_ID=148 THEN 2 ELSE PERIOD.PERIOD_TYPE_ID END PERIOD_TYPE_ID,
    PR.PERIOD_TYPE_ID   AS ORIGINAL_PERIOD_TYPE_ID    ,
    IS_IPDS_MAP         AS IS_IPDS, 
    IS_CSM_MAP             AS IS_CSM, 
    IS_COMPOSITE_MAP     AS IS_COMPOSITE, 
    IS_DELTA_MAP         AS IS_DELTA, 
    SUM(AMOUNT) AS ORIGIN_AMOUNT    ,
    SUM(AMOUNT * COEFF_AMOUNT) AS AMOUNT                     
FROM  ' || V_TEMP_SOURCE_TABLE_NAME ||'  PR
INNER JOIN BI_<env>.LEVEL_OF_ANALYSIS AOC ON AOC.ID=PR.LEVEL_OF_ANALYSIS_ID
INNER JOIN DWHD1_<env>.V_MAPPING_POSITION MAP ON  MAP.MAP_POSITION_ID = PR.POSITION_ID
INNER JOIN ' || P_DLV_SCHEMA || '.' || P_DLV_DTM_RULES || ' cf_rules ON CF_RULES.IS_CU = CASE WHEN PR.POSITION_ID=148 THEN 1 ELSE 0 END 
    AND PR.PERIOD_TYPE_ID = CF_Rules.PERIOD_TYPE_ID    AND MAP.IS_CASH_FLOW = CF_Rules.IS_CASH_FLOW AND PR.PROJECTION_MONTH = CF_Rules.PROJECTION_MONTH
INNER JOIN ' || P_DLV_SCHEMA || '.' || P_DLV_TBL_PERIOD || ' PERIOD    ON PERIOD.PERIODICITY_TYPE=cf_rules.PERIODICITY_TYPE
    AND PERIOD.IS_ACTIVE=1    AND CF_Rules.PERIODICITY_TYPE = ' || V_JOINTURE || ' ELSE 20  END 
WHERE AOC.VALID_TO=''9999-12-31''
    AND IS_IPDS_MAP is TRUE AND IS_COMPOSITE_MAP is FALSE AND IS_DELTA_MAP is FALSE
GROUP BY RULE_CD,
        CONTRACT_NUMBER         ,
        UNDERWRITING_YEAR       ,
        SECTION_NUMBER          ,
        UNDERWRITING_ORDER      ,
        ENDORSEMENT_NUMBER      ,
        POLICY_UW_YEAR          ,
        CLOSING_DATE            ,
        VALUATION_DATE          ,
        BUSINESS_MATURITY_ID    ,
        REPORTING_BASIS_ID      ,
        ASSUMED_CONTRACT_NUMBER ,
        ASSUMED_SECTION_NUMBER  ,
        POSITION_ID             ,
        LEVEL_OF_ANALYSIS_ID    ,
        SCENARIO_TYPE_ID        ,
        SCENARIO_PARAMETER      ,
        CURRENCY_CODE           ,
        SPLIT_TYPE_ID           ,
        PROJECTION_YEAR         ,
        MONTH(LAST_DAY(REPLACE(CF_Rules.CASHFLOW_DT,''YYYY'',PROJECTION_YEAR))),
        LAST_DAY(REPLACE(CF_Rules.CASHFLOW_DT,''YYYY'',PROJECTION_YEAR)) ,
        PERIOD.PERIOD_TYPE_ID,
        PR.PERIOD_TYPE_ID    ,
        IS_IPDS_MAP , 
        IS_CSM_MAP , 
        IS_COMPOSITE_MAP , 
        IS_DELTA_MAP
';


V_QUERY_YQ2M = '
SELECT     
    CASE WHEN PR.PERIOD_TYPE_ID=1 THEN ''11YBS00'' ELSE ''11QBS00'' END AS RULE_CD,
    PR.CONTRACT_NUMBER         ,
    PR.UNDERWRITING_YEAR       ,
    PR.SECTION_NUMBER          ,
    PR.UNDERWRITING_ORDER      ,
    PR.ENDORSEMENT_NUMBER      ,
    PR.POLICY_UW_YEAR          ,
    PR.CLOSING_DATE            ,
    PR.VALUATION_DATE          ,
    PR.BUSINESS_MATURITY_ID    ,
    PR.REPORTING_BASIS_ID      ,
    PR.ASSUMED_CONTRACT_NUMBER ,
    PR.ASSUMED_SECTION_NUMBER  ,
    PR.POSITION_ID             ,
    PR.LEVEL_OF_ANALYSIS_ID    ,
    PR.SCENARIO_TYPE_ID        ,
    PR.SCENARIO_PARAMETER      ,
    PR.CURRENCY_CODE           ,
    PR.SPLIT_TYPE_ID           ,
    PR.PROJECTION_YEAR         ,
    CASE WHEN PR.PERIOD_TYPE_ID=2 THEN 3*(QUARTER(PR.PROJECTION_DATE)-1)+CMonth.PROJECTION_MONTH
                ELSE CMonth.PROJECTION_MONTH
                END AS  PROJECTION_MONTH   ,
    CASE WHEN PR.PERIOD_TYPE_ID=2 THEN LAST_DAY(PR.PROJECTION_YEAR||''-''||(3*(QUARTER(PR.PROJECTION_DATE)-1)+CMonth.PROJECTION_MONTH)||''-01'') 
            ELSE LAST_DAY(PR.PROJECTION_YEAR||''-''||CMonth.PROJECTION_MONTH||''-01'') 
            END AS PROJECTION_DATE,
    3,
    PR.PERIOD_TYPE_ID       AS ORIGINAL_PERIOD_TYPE_ID,
    IS_IPDS_MAP         AS IS_IPDS, 
      IS_CSM_MAP             AS IS_CSM, 
      IS_COMPOSITE_MAP     AS IS_COMPOSITE, 
      IS_DELTA_MAP         AS IS_DELTA,
    PR.AMOUNT             AS ORIGIN_AMOUNT,
    ISNULL(PR2.AMOUNT,0)+((PR.AMOUNT-ISNULL(PR2.AMOUNT,0))*CMonth.PROJECTION_MONTH)
    /CASE WHEN PR.PERIOD_TYPE_ID=2 THEN 3 ELSE 12 END  AMOUNT
FROM  ' || V_TEMP_SOURCE_TABLE_NAME || '  PR
LEFT JOIN (SELECT HASH_KEY_DELTA,AMOUNT,PROJECTION_DATE,PROJECTION_YEAR
            FROM  ' || V_TEMP_SOURCE_TABLE_NAME || '  
            WHERE PROJECTION_MONTH IN (3,6,9,12) 
    ) PR2 ON PR.HASH_KEY_DELTA = PR2.HASH_KEY_DELTA
    AND PR2.PROJECTION_DATE=CASE WHEN PR.PERIOD_TYPE_ID=1 THEN PR.PROJECTION_DATE-1 YEARS
                                WHEN PR.PERIOD_TYPE_ID=2 THEN  LAST_DAY(PR.PROJECTION_DATE-3 MONTHS)   
                                END
INNER JOIN BI_<env>.LEVEL_OF_ANALYSIS AOC ON AOC.ID=PR.LEVEL_OF_ANALYSIS_ID
INNER JOIN DWHD1_<env>.V_MAPPING_POSITION MAP ON  MAP.MAP_POSITION_ID = PR.POSITION_ID
INNER JOIN (VALUES (1,1),(1,2),(1,3)
                    ,(1,4),(1,5),(1,6)
                    ,(1,7),(1,8),(1,9)
                    ,(1,10),(1,11),(1,12)
                    ,(2,1),(2,2),(2,3)
                    ) CMonth(PERIOD_TYPE_ID,PROJECTION_MONTH) 
  ON PR.PERIOD_TYPE_ID=CMonth.PERIOD_TYPE_ID
WHERE  AOC.VALID_TO=''9999-12-31''
  AND IS_IPDS_MAP is TRUE AND IS_COMPOSITE_MAP is FALSE AND IS_DELTA_MAP is FALSE
  AND PR.PERIOD_TYPE_ID IN (1,2) AND IS_CASH_FLOW=0 AND PR.POSITION_ID<>148 
  AND (PR.PROJECTION_YEAR <= ' || V_FILTER_1 || ')';


IF V_PERIODICITY = 2 THEN 
    V_RULE_CD = 'CASE WHEN PR.PROJECTION_YEAR > ' || V_FILTER_2 || '  THEN ''20YBS11''
                    ELSE CASE WHEN PR.POSITION_ID=148 THEN ''10YBS01'' ELSE ''10YBS00'' END
                 END ';
ELSEIF V_PERIODICITY = 1 THEN 
    V_RULE_CD = 'CASE WHEN PR.PROJECTION_YEAR > ' || V_FILTER_2 || '  THEN ''20YBS11''
                      WHEN PR.PROJECTION_YEAR <= ' || V_FILTER_1 || ' THEN ''11YBS01''
                    ELSE CASE WHEN PR.POSITION_ID=148 THEN ''12YBS01'' ELSE ''12YBS00'' END
                 END ';
END IF;

IF V_PERIODICITY = 2 THEN 
    V_FILTER_Y2Q = 'PR.PROJECTION_YEAR > ' || V_FILTER_2;
ELSEIF V_PERIODICITY = 1 THEN 
    V_FILTER_Y2Q = 'PR.PROJECTION_YEAR > ' || V_FILTER_2 || ' OR PR.PROJECTION_YEAR <= ' || V_FILTER_1;
END IF;

V_QUERY_Y2Q = '
SELECT     
    ' || V_RULE_CD || ' AS RULE_CD,
    PR.CONTRACT_NUMBER         ,
    PR.UNDERWRITING_YEAR       ,
    PR.SECTION_NUMBER          ,
    PR.UNDERWRITING_ORDER      ,
    PR.ENDORSEMENT_NUMBER      ,
    PR.POLICY_UW_YEAR          ,
    PR.CLOSING_DATE            ,
    PR.VALUATION_DATE          ,
    PR.BUSINESS_MATURITY_ID    ,
    PR.REPORTING_BASIS_ID      ,
    PR.ASSUMED_CONTRACT_NUMBER ,
    PR.ASSUMED_SECTION_NUMBER  ,
    PR.POSITION_ID             ,
    PR.LEVEL_OF_ANALYSIS_ID    ,
    PR.SCENARIO_TYPE_ID        ,
    PR.SCENARIO_PARAMETER      ,
    PR.CURRENCY_CODE           ,
    PR.SPLIT_TYPE_ID           ,
    PR.PROJECTION_YEAR         ,
    3*QUART AS PROJECTION_MONTH   ,
    LAST_DAY(PROJECTION_DATE- (3*(4-QUART)) MONTHS) PROJECTION_DATE,
    2 AS PERIOD_TYPE_ID,
    PR.PERIOD_TYPE_ID      AS ORIGINAL_PERIOD_TYPE_ID ,
    IS_IPDS_MAP IS_IPDS, 
      IS_CSM_MAP IS_CSM, 
      IS_COMPOSITE_MAP IS_COMPOSITE, 
      IS_DELTA_MAP IS_DELTA,
    PR.AMOUNT AS ORIGIN_AMOUNT,
    ISNULL(PR2.AMOUNT,0)+(QUART*(PR.AMOUNT-ISNULL(PR2.AMOUNT,0))/4) AMOUNT
FROM   ' || V_TEMP_SOURCE_TABLE_NAME || '  PR
LEFT JOIN (SELECT HASH_KEY_DELTA,AMOUNT,PROJECTION_YEAR
            FROM  ' || V_TEMP_SOURCE_TABLE_NAME || '  
            WHERE PROJECTION_MONTH=12
    ) PR2 ON PR.HASH_KEY_DELTA = PR2.HASH_KEY_DELTA AND PR.PROJECTION_YEAR=PR2.PROJECTION_YEAR+1
INNER JOIN BI_<env>.LEVEL_OF_ANALYSIS AOC ON AOC.ID=PR.LEVEL_OF_ANALYSIS_ID
INNER JOIN DWHD1_<env>.V_MAPPING_POSITION MAP ON  MAP.MAP_POSITION_ID = PR.POSITION_ID
INNER JOIN (VALUES (1,1),(1,2),(1,3),(1,4)) CQuarter(PERIOD_TYPE_ID,QUART) ON PR.PERIOD_TYPE_ID=CQuarter.PERIOD_TYPE_ID
WHERE  AOC.VALID_TO=''9999-12-31''
  AND IS_IPDS_MAP is TRUE AND IS_COMPOSITE_MAP is FALSE AND IS_DELTA_MAP is FALSE
  AND PR.PERIOD_TYPE_ID=1 AND IS_CASH_FLOW=0 
  AND ( ' || V_FILTER || '
      OR (PR.POSITION_ID=148
          AND ( ' || V_FILTER_Y2Q || '    ) )
      )';


IF V_PERIODICITY = 1 THEN 
    V_QUERY_FROM = V_QUERY_RULES || 'UNION ALL' || V_QUERY_YQ2M || 'UNION ALL' || V_QUERY_Y2Q;
ELSEIF V_PERIODICITY = 2 THEN 
    V_QUERY_FROM = V_QUERY_RULES || 'UNION ALL' || V_QUERY_Y2Q;
END IF;

V_QUERY_AOC = 
'SELECT  
    RIGHT(''0''||LOA_ID,2)||RIGHT(''0''||NVL(LEAD_LOA-1,30),2) AOC_RULE_CD,
    *
FROM(SELECT 
        CLOSING_DATE ,
        REPORTING_BASIS_ID ,
        BUSINESS_MATURITY_ID,
        CONTRACT_NUMBER ,
        SECTION_NUMBER ,
        CASE WHEN POSITION_ID =407 THEN 1 ELSE 0 END IS_RISK_ADJ_COC,
        1 SCENARIO_TYPE_ID ,
        0 SCENARIO_PARAMETER ,
        LEVEL_OF_ANALYSIS_ID LOA_ID,
        LEAD(LEVEL_OF_ANALYSIS_ID,1) OVER(PARTITION BY CLOSING_DATE ,REPORTING_BASIS_ID,BUSINESS_MATURITY_ID ,CASE WHEN POSITION_ID =407 THEN 1 ELSE 0 END,CONTRACT_NUMBER ,SECTION_NUMBER  ORDER BY LEVEL_OF_ANALYSIS_ID) LEAD_LOA
    FROM  ' || V_TEMP_SOURCE_TABLE_NAME || '  
    WHERE  DATE(VALID_TO) =DATE(''9999-12-31'') AND DATE(SUPP_DATE)=DATE(''9999-12-31'')
        AND SCENARIO_TYPE_ID=1 AND SCENARIO_PARAMETER=0
    GROUP BY 
        CONTRACT_NUMBER ,
        SECTION_NUMBER ,
        CLOSING_DATE ,
        CASE WHEN POSITION_ID =407 THEN 1 ELSE 0 END,
        REPORTING_BASIS_ID ,
        BUSINESS_MATURITY_ID,
        LEVEL_OF_ANALYSIS_ID) 
';


V_CREATE_TEMP_TABLE := '
 CREATE TABLE  ' || V_TEMP_AOC_RULE_TABLE_NAME || ' AS 
( ' ||
  V_QUERY_AOC ||
' ) WITH NO DATA IN TBS_<env> DISTRIBUTE BY HASH(contract_number) 
';
V_INSERT_TEMP_TABLE := '
INSERT INTO  ' || V_TEMP_AOC_RULE_TABLE_NAME || ' 
' ||
  V_QUERY_AOC || ' ';
 
RAISE NOTICE 'With Query: ''%'' , ''%''', V_CREATE_TEMP_TABLE , V_INSERT_TEMP_TABLE;
EXECUTE IMMEDIATE V_CREATE_TEMP_TABLE;
EXECUTE IMMEDIATE 'COMMIT';
EXECUTE IMMEDIATE V_INSERT_TEMP_TABLE;
CALL SYSPROC.ADMIN_CMD ('RUNSTATS ON TABLE ' || V_TEMP_AOC_RULE_TABLE_NAME || ' WITH DISTRIBUTION ON ALL COLUMNS');
COMMIT;
V_CLEAN_STG = 'DELETE FROM ' || P_STG_SCHEMA || '.' || P_STG_TABLE || ' WHERE REQUEST_ID =' || P_REQUEST_ID || ' ';

EXECUTE IMMEDIATE V_CLEAN_STG;

EXECUTE IMMEDIATE 'COMMIT';


IF V_PERIODICITY = 1 THEN 
    V_QUERY_FROM = V_QUERY_RULES;

	V_QUERY = 'INSERT INTO ' || P_STG_SCHEMA || '.' || P_STG_TABLE || '
	SELECT
		PR.CONTRACT_NUMBER   ,
		PR.UNDERWRITING_YEAR  ,
		PR.SECTION_NUMBER     ,
		UNDERWRITING_ORDER    ,
		ENDORSEMENT_NUMBER    ,
		POLICY_UW_YEAR        ,
		PR.CLOSING_DATE       ,
		VALUATION_DATE        ,
		PR.BUSINESS_MATURITY_ID ,
		PR.REPORTING_BASIS_ID   ,
		ASSUMED_CONTRACT_NUMBER ,
		ASSUMED_SECTION_NUMBER  ,
		POSITION_ID             ,
		PR.LEVEL_OF_ANALYSIS_ID ,
		PR.SCENARIO_TYPE_ID     ,
		PR.SCENARIO_PARAMETER   ,
		CURRENCY_CODE ,
		SPLIT_TYPE_ID ,
		PROJECTION_YEAR ,
		PROJECTION_MONTH ,
		PROJECTION_DATE,
		PERIOD_TYPE_ID,
		ORIGINAL_PERIOD_TYPE_ID ,
		AMOUNT ,
		IS_IPDS,
		IS_COMPOSITE,
		IS_DELTA ,
		IS_CSM,
		' || P_REQUEST_ID || ',
		AOC_RULE_CD
	FROM (' || V_QUERY_FROM || ') PR
	LEFT JOIN ' || V_TEMP_AOC_RULE_TABLE_NAME || ' AOC
		ON  PR.CONTRACT_NUMBER  = AOC.CONTRACT_NUMBER 
				AND PR.SECTION_NUMBER  = AOC.SECTION_NUMBER 
				AND PR.CLOSING_DATE  = AOC.CLOSING_DATE 
				AND PR.REPORTING_BASIS_ID  = AOC.REPORTING_BASIS_ID
				AND PR.BUSINESS_MATURITY_ID  = AOC.BUSINESS_MATURITY_ID   
				AND CASE WHEN PR.POSITION_ID=407 THEN 1 ELSE 0 END  = AOC.IS_RISK_ADJ_COC 
				AND PR.LEVEL_OF_ANALYSIS_ID  = AOC.LOA_ID 
				AND PR.SCENARIO_TYPE_ID  = AOC.SCENARIO_TYPE_ID 
				AND PR.SCENARIO_PARAMETER  = AOC.SCENARIO_PARAMETER';

	RAISE NOTICE 'Executing V_QUERY 1: ''%''',
	V_QUERY;

	EXECUTE IMMEDIATE V_QUERY;

	EXECUTE IMMEDIATE 'COMMIT';


	V_QUERY_FROM = V_QUERY_YQ2M;
	V_QUERY = 'INSERT INTO ' || P_STG_SCHEMA || '.' || P_STG_TABLE || '
	SELECT
		PR.CONTRACT_NUMBER   ,
		PR.UNDERWRITING_YEAR  ,
		PR.SECTION_NUMBER     ,
		UNDERWRITING_ORDER    ,
		ENDORSEMENT_NUMBER    ,
		POLICY_UW_YEAR        ,
		PR.CLOSING_DATE       ,
		VALUATION_DATE        ,
		PR.BUSINESS_MATURITY_ID ,
		PR.REPORTING_BASIS_ID   ,
		ASSUMED_CONTRACT_NUMBER ,
		ASSUMED_SECTION_NUMBER  ,
		POSITION_ID             ,
		PR.LEVEL_OF_ANALYSIS_ID ,
		PR.SCENARIO_TYPE_ID     ,
		PR.SCENARIO_PARAMETER   ,
		CURRENCY_CODE ,
		SPLIT_TYPE_ID ,
		PROJECTION_YEAR ,
		PROJECTION_MONTH ,
		PROJECTION_DATE,
		PERIOD_TYPE_ID,
		ORIGINAL_PERIOD_TYPE_ID ,
		AMOUNT ,
		IS_IPDS,
		IS_COMPOSITE,
		IS_DELTA ,
		IS_CSM,
		' || P_REQUEST_ID || ',
		AOC_RULE_CD
	FROM (' || V_QUERY_FROM || ') PR
	LEFT JOIN ' || V_TEMP_AOC_RULE_TABLE_NAME || ' AOC
		ON  PR.CONTRACT_NUMBER  = AOC.CONTRACT_NUMBER 
				AND PR.SECTION_NUMBER  = AOC.SECTION_NUMBER 
				AND PR.CLOSING_DATE  = AOC.CLOSING_DATE 
				AND PR.REPORTING_BASIS_ID  = AOC.REPORTING_BASIS_ID
				AND PR.BUSINESS_MATURITY_ID  = AOC.BUSINESS_MATURITY_ID   
				AND CASE WHEN PR.POSITION_ID=407 THEN 1 ELSE 0 END  = AOC.IS_RISK_ADJ_COC 
				AND PR.LEVEL_OF_ANALYSIS_ID  = AOC.LOA_ID 
				AND PR.SCENARIO_TYPE_ID  = AOC.SCENARIO_TYPE_ID 
				AND PR.SCENARIO_PARAMETER  = AOC.SCENARIO_PARAMETER';

	RAISE NOTICE 'Executing V_QUERY 2: ''%''',
	V_QUERY;

	EXECUTE IMMEDIATE V_QUERY;

	EXECUTE IMMEDIATE 'COMMIT';


	V_QUERY_FROM = V_QUERY_Y2Q;

	V_QUERY = 'INSERT INTO ' || P_STG_SCHEMA || '.' || P_STG_TABLE || '
	SELECT
		PR.CONTRACT_NUMBER   ,
		PR.UNDERWRITING_YEAR  ,
		PR.SECTION_NUMBER     ,
		UNDERWRITING_ORDER    ,
		ENDORSEMENT_NUMBER    ,
		POLICY_UW_YEAR        ,
		PR.CLOSING_DATE       ,
		VALUATION_DATE        ,
		PR.BUSINESS_MATURITY_ID ,
		PR.REPORTING_BASIS_ID   ,
		ASSUMED_CONTRACT_NUMBER ,
		ASSUMED_SECTION_NUMBER  ,
		POSITION_ID             ,
		PR.LEVEL_OF_ANALYSIS_ID ,
		PR.SCENARIO_TYPE_ID     ,
		PR.SCENARIO_PARAMETER   ,
		CURRENCY_CODE ,
		SPLIT_TYPE_ID ,
		PROJECTION_YEAR ,
		PROJECTION_MONTH ,
		PROJECTION_DATE,
		PERIOD_TYPE_ID,
		ORIGINAL_PERIOD_TYPE_ID ,
		AMOUNT ,
		IS_IPDS,
		IS_COMPOSITE,
		IS_DELTA ,
		IS_CSM,
		' || P_REQUEST_ID || ',
		AOC_RULE_CD
	FROM (' || V_QUERY_FROM || ') PR
	LEFT JOIN ' || V_TEMP_AOC_RULE_TABLE_NAME || ' AOC
		ON  PR.CONTRACT_NUMBER  = AOC.CONTRACT_NUMBER 
				AND PR.SECTION_NUMBER  = AOC.SECTION_NUMBER 
				AND PR.CLOSING_DATE  = AOC.CLOSING_DATE 
				AND PR.REPORTING_BASIS_ID  = AOC.REPORTING_BASIS_ID
				AND PR.BUSINESS_MATURITY_ID  = AOC.BUSINESS_MATURITY_ID   
				AND CASE WHEN PR.POSITION_ID=407 THEN 1 ELSE 0 END  = AOC.IS_RISK_ADJ_COC 
				AND PR.LEVEL_OF_ANALYSIS_ID  = AOC.LOA_ID 
				AND PR.SCENARIO_TYPE_ID  = AOC.SCENARIO_TYPE_ID 
				AND PR.SCENARIO_PARAMETER  = AOC.SCENARIO_PARAMETER';

	RAISE NOTICE 'Executing V_QUERY 3: ''%''',
	V_QUERY;

	EXECUTE IMMEDIATE V_QUERY;

	EXECUTE IMMEDIATE 'COMMIT';

ELSEIF V_PERIODICITY = 2 THEN 
    V_QUERY_FROM = V_QUERY_RULES;


	V_QUERY = 'INSERT INTO ' || P_STG_SCHEMA || '.' || P_STG_TABLE || '
	SELECT
		PR.CONTRACT_NUMBER   ,
		PR.UNDERWRITING_YEAR  ,
		PR.SECTION_NUMBER     ,
		UNDERWRITING_ORDER    ,
		ENDORSEMENT_NUMBER    ,
		POLICY_UW_YEAR        ,
		PR.CLOSING_DATE       ,
		VALUATION_DATE        ,
		PR.BUSINESS_MATURITY_ID ,
		PR.REPORTING_BASIS_ID   ,
		ASSUMED_CONTRACT_NUMBER ,
		ASSUMED_SECTION_NUMBER  ,
		POSITION_ID             ,
		PR.LEVEL_OF_ANALYSIS_ID ,
		PR.SCENARIO_TYPE_ID     ,
		PR.SCENARIO_PARAMETER   ,
		CURRENCY_CODE ,
		SPLIT_TYPE_ID ,
		PROJECTION_YEAR ,
		PROJECTION_MONTH ,
		PROJECTION_DATE,
		PERIOD_TYPE_ID,
		ORIGINAL_PERIOD_TYPE_ID ,
		AMOUNT ,
		IS_IPDS,
		IS_COMPOSITE,
		IS_DELTA ,
		IS_CSM,
		' || P_REQUEST_ID || ',
		AOC_RULE_CD
	FROM (' || V_QUERY_FROM || ') PR
	LEFT JOIN ' || V_TEMP_AOC_RULE_TABLE_NAME || ' AOC
		ON  PR.CONTRACT_NUMBER  = AOC.CONTRACT_NUMBER 
				AND PR.SECTION_NUMBER  = AOC.SECTION_NUMBER 
				AND PR.CLOSING_DATE  = AOC.CLOSING_DATE 
				AND PR.REPORTING_BASIS_ID  = AOC.REPORTING_BASIS_ID
				AND PR.BUSINESS_MATURITY_ID  = AOC.BUSINESS_MATURITY_ID   
				AND CASE WHEN PR.POSITION_ID=407 THEN 1 ELSE 0 END  = AOC.IS_RISK_ADJ_COC 
				AND PR.LEVEL_OF_ANALYSIS_ID  = AOC.LOA_ID 
				AND PR.SCENARIO_TYPE_ID  = AOC.SCENARIO_TYPE_ID 
				AND PR.SCENARIO_PARAMETER  = AOC.SCENARIO_PARAMETER';

	RAISE NOTICE 'Executing V_QUERY 4 : ''%''',
	V_QUERY;

	EXECUTE IMMEDIATE V_QUERY;

	EXECUTE IMMEDIATE 'COMMIT';


	V_QUERY_FROM = V_QUERY_Y2Q;


	V_QUERY = 'INSERT INTO ' || P_STG_SCHEMA || '.' || P_STG_TABLE || '
	SELECT
		PR.CONTRACT_NUMBER   ,
		PR.UNDERWRITING_YEAR  ,
		PR.SECTION_NUMBER     ,
		UNDERWRITING_ORDER    ,
		ENDORSEMENT_NUMBER    ,
		POLICY_UW_YEAR        ,
		PR.CLOSING_DATE       ,
		VALUATION_DATE        ,
		PR.BUSINESS_MATURITY_ID ,
		PR.REPORTING_BASIS_ID   ,
		ASSUMED_CONTRACT_NUMBER ,
		ASSUMED_SECTION_NUMBER  ,
		POSITION_ID             ,
		PR.LEVEL_OF_ANALYSIS_ID ,
		PR.SCENARIO_TYPE_ID     ,
		PR.SCENARIO_PARAMETER   ,
		CURRENCY_CODE ,
		SPLIT_TYPE_ID ,
		PROJECTION_YEAR ,
		PROJECTION_MONTH ,
		PROJECTION_DATE,
		PERIOD_TYPE_ID,
		ORIGINAL_PERIOD_TYPE_ID ,
		AMOUNT ,
		IS_IPDS,
		IS_COMPOSITE,
		IS_DELTA ,
		IS_CSM,
		' || P_REQUEST_ID || ',
		AOC_RULE_CD
	FROM (' || V_QUERY_FROM || ') PR
	LEFT JOIN ' || V_TEMP_AOC_RULE_TABLE_NAME || ' AOC
		ON  PR.CONTRACT_NUMBER  = AOC.CONTRACT_NUMBER 
				AND PR.SECTION_NUMBER  = AOC.SECTION_NUMBER 
				AND PR.CLOSING_DATE  = AOC.CLOSING_DATE 
				AND PR.REPORTING_BASIS_ID  = AOC.REPORTING_BASIS_ID
				AND PR.BUSINESS_MATURITY_ID  = AOC.BUSINESS_MATURITY_ID   
				AND CASE WHEN PR.POSITION_ID=407 THEN 1 ELSE 0 END  = AOC.IS_RISK_ADJ_COC 
				AND PR.LEVEL_OF_ANALYSIS_ID  = AOC.LOA_ID 
				AND PR.SCENARIO_TYPE_ID  = AOC.SCENARIO_TYPE_ID 
				AND PR.SCENARIO_PARAMETER  = AOC.SCENARIO_PARAMETER';

	RAISE NOTICE 'Executing V_QUERY 5: ''%''',
	V_QUERY;

	EXECUTE IMMEDIATE V_QUERY;

	EXECUTE IMMEDIATE 'COMMIT';

END IF;

RAISE NOTICE 'Delta Calculation';

V_QUERY_DELTA1 = 'INSERT INTO ' || P_STG_SCHEMA || '.' || P_STG_TABLE || '
SELECT 
    CONTRACT_NUMBER         ,
    UNDERWRITING_YEAR       ,
    SECTION_NUMBER          ,
    UNDERWRITING_ORDER      ,
    ENDORSEMENT_NUMBER      ,
    POLICY_UW_YEAR          ,
    CLOSING_DATE            ,
    VALUATION_DATE          ,
    BUSINESS_MATURITY_ID    ,
    REPORTING_BASIS_ID      ,
    ASSUMED_CONTRACT_NUMBER ,
    ASSUMED_SECTION_NUMBER  ,
    MAP_POSITION_ID         ,
    LEVEL_OF_ANALYSIS_ID    ,
    SCENARIO_TYPE_ID        ,
    SCENARIO_PARAMETER      ,
    CURRENCY_CODE           ,
    SPLIT_TYPE_ID           ,
    PROJECTION_YEAR         ,
    PROJECTION_MONTH     ,
    PROJECTION_DATE,
    PERIOD_TYPE_ID,
    ORIGINAL_PERIOD_TYPE_ID    ,
    SUM(CASE WHEN MATH_OPERATOR=''-'' THEN -1 ELSE 1 END * AMOUNT)
    -ISNULL(LAG(SUM(CASE WHEN MATH_OPERATOR=''-'' THEN -1 ELSE 1 END * AMOUNT),1) 
                    OVER(PARTITION BY MAP_POSITION_ID,SPLIT_TYPE_ID,ASSUMED_CONTRACT_NUMBER,ASSUMED_SECTION_NUMBER,UNDERWRITING_ORDER,ENDORSEMENT_NUMBER,POLICY_UW_YEAR,CLOSING_DATE,VALUATION_DATE,CONTRACT_NUMBER
                                    ,UNDERWRITING_YEAR,SECTION_NUMBER,BUSINESS_MATURITY_ID,REPORTING_BASIS_ID,LEVEL_OF_ANALYSIS_ID,SCENARIO_TYPE_ID,SCENARIO_PARAMETER
                                    ,CURRENCY_CODE ORDER BY PROJECTION_DATE) 
            ,0)  AS AMOUNT 
    ,IS_IPDS_MAP IS_IPDS, 
    IS_COMPOSITE_MAP IS_COMPOSITE, 
    IS_DELTA_MAP IS_DELTA , 
    IS_CSM_MAP IS_CSM,
    ' || P_REQUEST_ID || ',
    AOC_RULE_CD
FROM ' || P_STG_SCHEMA || '.' || P_STG_TABLE || ' PR
INNER JOIN  DWHD1_<env>.V_MAPPING_POSITION  MAP ON  MAP.SOURCE_POSITION_ID = PR.POSITION_ID    AND  MAP.IS_DELTA_MAP is TRUE 
WHERE REQUEST_ID=' || P_REQUEST_ID || '
GROUP BY 
    CONTRACT_NUMBER         ,
    UNDERWRITING_YEAR       ,
    SECTION_NUMBER          ,
    UNDERWRITING_ORDER      ,
    ENDORSEMENT_NUMBER      ,
    POLICY_UW_YEAR          ,
    CLOSING_DATE            ,
    VALUATION_DATE          ,
    BUSINESS_MATURITY_ID    ,
    REPORTING_BASIS_ID      ,
    ASSUMED_CONTRACT_NUMBER ,
    ASSUMED_SECTION_NUMBER  ,
    MAP_POSITION_ID         ,
    LEVEL_OF_ANALYSIS_ID    ,
    SCENARIO_TYPE_ID        ,
    SCENARIO_PARAMETER      ,
    CURRENCY_CODE           ,
    SPLIT_TYPE_ID           ,
    PROJECTION_YEAR         ,
    PROJECTION_MONTH     ,
    PROJECTION_DATE,
    PERIOD_TYPE_ID,
    ORIGINAL_PERIOD_TYPE_ID    ,
    IS_IPDS_MAP , 
    IS_CSM_MAP , 
    IS_COMPOSITE_MAP , 
    IS_DELTA_MAP,
    AOC_RULE_CD
' ;


RAISE NOTICE 'Executing V_QUERY_DELTA1: ''%''',
V_QUERY_DELTA1;

EXECUTE IMMEDIATE V_QUERY_DELTA1;

EXECUTE IMMEDIATE 'COMMIT';

RAISE NOTICE 'INSERT the last project with -Amount on Y+1';

V_QUERY_DELTA2 = 'INSERT INTO ' || P_STG_SCHEMA || '.' || P_STG_TABLE || '
SELECT 
    CONTRACT_NUMBER         ,
    UNDERWRITING_YEAR       ,
    SECTION_NUMBER          ,
    UNDERWRITING_ORDER      ,
    ENDORSEMENT_NUMBER      ,
    POLICY_UW_YEAR          ,
    CLOSING_DATE            ,
    VALUATION_DATE          ,
    BUSINESS_MATURITY_ID    ,
    REPORTING_BASIS_ID      ,
    ASSUMED_CONTRACT_NUMBER ,
    ASSUMED_SECTION_NUMBER  ,
    MAP_POSITION_ID         ,
    LEVEL_OF_ANALYSIS_ID    ,
    SCENARIO_TYPE_ID        ,
    SCENARIO_PARAMETER      ,
    CURRENCY_CODE           ,
    SPLIT_TYPE_ID           ,
    PROJECTION_YEAR + 1     ,
    PROJECTION_MONTH        ,
    PROJECTION_DATE + 1 YEAR,
    PERIOD_TYPE_ID          ,
    ORIGINAL_PERIOD_TYPE_ID ,
    -AMOUNT                 ,
    IS_IPDS_MAP             ,
    IS_COMPOSITE_MAP        ,
    IS_DELTA_MAP            ,
    IS_CSM_MAP              , 
    REQUEST_ID              ,
    AOC_RULE_CD
FROM (SELECT 
        PR.*,
        MAP_POSITION_ID,
        IS_IPDS_MAP , 
        IS_CSM_MAP , 
        IS_COMPOSITE_MAP , 
        IS_DELTA_MAP
        ,ROW_NUMBER() OVER(PARTITION BY MAP_POSITION_ID,CLOSING_DATE,VALUATION_DATE,CONTRACT_NUMBER,UNDERWRITING_YEAR,SECTION_NUMBER,UNDERWRITING_ORDER,ENDORSEMENT_NUMBER,POLICY_UW_YEAR
                            ,BUSINESS_MATURITY_ID,ASSUMED_CONTRACT_NUMBER,ASSUMED_SECTION_NUMBER,SPLIT_TYPE_ID,REPORTING_BASIS_ID,LEVEL_OF_ANALYSIS_ID,SCENARIO_TYPE_ID,SCENARIO_PARAMETER,CURRENCY_CODE 
                        ORDER BY PROJECTION_DATE desc)
        AS RN
    FROM ' || P_STG_SCHEMA || '.' || P_STG_TABLE || ' PR
    INNER JOIN  DWHD1_<env>.V_MAPPING_POSITION  MAP ON  MAP.SOURCE_POSITION_ID = PR.POSITION_ID    AND  MAP.IS_DELTA_MAP is TRUE AND IS_COMPOSITE_MAP IS FALSE
    WHERE REQUEST_ID=' || P_REQUEST_ID || ')
WHERE RN=1 AND REQUEST_ID=' || P_REQUEST_ID || ' 
';

RAISE NOTICE 'Executing V_QUERY_DELTA2: ''%''',
V_QUERY_DELTA2;

EXECUTE IMMEDIATE V_QUERY_DELTA2;

EXECUTE IMMEDIATE 'COMMIT';

RAISE NOTICE 'CSM Position';

V_QUERY_CSM = 'INSERT INTO ' || P_STG_SCHEMA || '.' || P_STG_TABLE || '
SELECT 
    CONTRACT_NUMBER         ,
    UNDERWRITING_YEAR       ,
    SECTION_NUMBER          ,
    UNDERWRITING_ORDER      ,
    ENDORSEMENT_NUMBER      ,
    POLICY_UW_YEAR          ,
    CLOSING_DATE            ,
    VALUATION_DATE          ,
    BUSINESS_MATURITY_ID    ,
    REPORTING_BASIS_ID      ,
    ASSUMED_CONTRACT_NUMBER ,
    ASSUMED_SECTION_NUMBER  ,
    MAP_POSITION_ID         ,
    LEVEL_OF_ANALYSIS_ID    ,
    SCENARIO_TYPE_ID        ,
    SCENARIO_PARAMETER      ,
    CURRENCY_CODE           ,
    SPLIT_TYPE_ID           ,
    PROJECTION_YEAR         ,
    PROJECTION_MONTH        ,
    PROJECTION_DATE         ,
    PERIOD_TYPE_ID          ,
    NULL ORIGINAL_PERIOD_TYPE_ID    ,
    SUM(CASE WHEN MATH_OPERATOR=''-'' THEN -1 ELSE 1 END * AMOUNT) AS AMOUNT ,
    IS_IPDS_MAP      IS_IPDS,
    IS_COMPOSITE_MAP IS_COMPOSITE, 
    IS_DELTA_MAP     IS_DELTA , 
    IS_CSM_MAP       IS_CSM,
    ' || P_REQUEST_ID || ' ,
    AOC_RULE_CD
FROM ' || P_STG_SCHEMA || '.' || P_STG_TABLE || ' PR
INNER JOIN  DWHD1_<env>.V_MAPPING_POSITION  MAP ON  MAP.SOURCE_POSITION_ID = PR.POSITION_ID AND MAP.IS_CSM_MAP is TRUE AND ISNULL(MATH_OPERATOR,'''')<>''''
WHERE REQUEST_ID=' || P_REQUEST_ID || '
GROUP BY 
    CONTRACT_NUMBER         ,
    UNDERWRITING_YEAR       ,
    SECTION_NUMBER          ,
    UNDERWRITING_ORDER      ,
    ENDORSEMENT_NUMBER      ,
    POLICY_UW_YEAR          ,
    CLOSING_DATE            ,
    VALUATION_DATE          ,
    BUSINESS_MATURITY_ID    ,
    REPORTING_BASIS_ID      ,
    ASSUMED_CONTRACT_NUMBER ,
    ASSUMED_SECTION_NUMBER  ,
    MAP_POSITION_ID         ,
    LEVEL_OF_ANALYSIS_ID    ,
    SCENARIO_TYPE_ID        ,
    SCENARIO_PARAMETER      ,
    CURRENCY_CODE           ,
    SPLIT_TYPE_ID           ,
    PROJECTION_YEAR         ,
    PROJECTION_MONTH     ,
    PROJECTION_DATE,
    PERIOD_TYPE_ID,
    IS_IPDS_MAP , 
    IS_CSM_MAP , 
    IS_COMPOSITE_MAP , 
    IS_DELTA_MAP ,
    AOC_RULE_CD
';

RAISE NOTICE 'Executing V_QUERY_CSM: ''%''',
V_QUERY_CSM;

EXECUTE IMMEDIATE V_QUERY_CSM;

EXECUTE IMMEDIATE 'COMMIT';

RAISE NOTICE 'Composite Position';

V_QUERY_COMP = 'INSERT INTO ' || P_STG_SCHEMA || '.' || P_STG_TABLE || '
SELECT 
    CONTRACT_NUMBER         ,
    UNDERWRITING_YEAR       ,
    SECTION_NUMBER          ,
    UNDERWRITING_ORDER      ,
    ENDORSEMENT_NUMBER      ,
    POLICY_UW_YEAR          ,
    CLOSING_DATE            ,
    VALUATION_DATE          ,
    BUSINESS_MATURITY_ID    ,
    REPORTING_BASIS_ID      ,
    ASSUMED_CONTRACT_NUMBER ,
    ASSUMED_SECTION_NUMBER  ,
    MAP_POSITION_ID         ,
    LEVEL_OF_ANALYSIS_ID    ,
    SCENARIO_TYPE_ID        ,
    SCENARIO_PARAMETER      ,
    CURRENCY_CODE           ,
    SPLIT_TYPE_ID           ,
    PROJECTION_YEAR         ,
    PROJECTION_MONTH     ,
    PROJECTION_DATE,
    PERIOD_TYPE_ID,
    NULL ORIGINAL_PERIOD_TYPE_ID    ,
    SUM(CASE WHEN MATH_OPERATOR=''-'' THEN -1 ELSE 1 END * AMOUNT) AS AMOUNT ,
    IS_IPDS_MAP IS_IPDS, 
    IS_COMPOSITE_MAP IS_COMPOSITE, 
    IS_DELTA_MAP IS_DELTA , 
    IS_CSM_MAP IS_CSM,
    ' || P_REQUEST_ID || ',
    AOC_RULE_CD
FROM ' || P_STG_SCHEMA || '.' || P_STG_TABLE || ' PR
INNER JOIN  DWHD1_<env>.V_MAPPING_POSITION  MAP ON  MAP.SOURCE_POSITION_ID = PR.POSITION_ID AND MAP.IS_COMPOSITE_MAP is TRUE AND IS_CSM_MAP is FALSE  AND ISNULL(MATH_OPERATOR,'''')<>''''
WHERE REQUEST_ID=' || P_REQUEST_ID || '
GROUP BY 
    CONTRACT_NUMBER         ,
    UNDERWRITING_YEAR       ,
    SECTION_NUMBER          ,
    UNDERWRITING_ORDER      ,
    ENDORSEMENT_NUMBER      ,
    POLICY_UW_YEAR          ,
    CLOSING_DATE            ,
    VALUATION_DATE          ,
    BUSINESS_MATURITY_ID    ,
    REPORTING_BASIS_ID      ,
    ASSUMED_CONTRACT_NUMBER ,
    ASSUMED_SECTION_NUMBER  ,
    MAP_POSITION_ID         ,
    LEVEL_OF_ANALYSIS_ID    ,
    SCENARIO_TYPE_ID        ,
    SCENARIO_PARAMETER      ,
    CURRENCY_CODE           ,
    SPLIT_TYPE_ID           ,
    PROJECTION_YEAR         ,
    PROJECTION_MONTH     ,
    PROJECTION_DATE,
    PERIOD_TYPE_ID,
    IS_IPDS_MAP , 
    IS_CSM_MAP , 
    IS_COMPOSITE_MAP , 
    IS_DELTA_MAP,
    AOC_RULE_CD
' ;


RAISE NOTICE 'Executing V_QUERY_COMP: ''%''',
V_QUERY_COMP;

EXECUTE IMMEDIATE V_QUERY_COMP;

EXECUTE IMMEDIATE 'COMMIT';

RAISE NOTICE 'Calculating statistics';

EXECUTE IMMEDIATE 'CALL ADMIN_CMD(''RUNSTATS ON TABLE ' || P_STG_SCHEMA || '.' || P_STG_TABLE || ' ON ALL COLUMNS WITH DISTRIBUTION ON ALL COLUMNS SET PROFILE'')';

EXECUTE IMMEDIATE 'COMMIT';

IF P_INSERT_DTM = 'Y'  THEN  
    IF P_LOAD_MODE = 'DELTA' THEN
        V_DELETE_DTM = 'DELETE
                    FROM ' || P_SRC_SCHEMA || '.' || P_DTM_TABLE || ' DTM
                    WHERE CLOSING_DATE||CONTRACT_NUMBER||SECTION_NUMBER||BUSINESS_MATURITY_ID||REPORTING_BASIS_ID||CASE WHEN POSITION_ID =407 THEN 1 ELSE 0 END   
                    IN (SELECT 
                            CLOSING_DATE||CONTRACT_NUMBER||SECTION_NUMBER||BUSINESS_MATURITY_ID||REPORTING_BASIS_ID||CASE WHEN POSITION_ID =407 THEN 1 ELSE 0 END
                        FROM  ' || P_STG_SCHEMA || '.' || P_STG_TABLE || '
                        WHERE REQUEST_ID=' || P_REQUEST_ID || ' 
                        GROUP BY CLOSING_DATE||CONTRACT_NUMBER||SECTION_NUMBER||BUSINESS_MATURITY_ID||REPORTING_BASIS_ID||CASE WHEN POSITION_ID =407 THEN 1 ELSE 0 END
                    ) ';
    ELSEIF P_LOAD_MODE = 'FULL' THEN 
        V_DELETE_DTM = 'DELETE FROM ' || P_SRC_SCHEMA || '.' || P_DTM_TABLE || ' WHERE 1=1 ';
    END IF;

    EXECUTE IMMEDIATE V_DELETE_DTM;
    EXECUTE IMMEDIATE 'COMMIT';

    V_INSERT_DTM = 'INSERT INTO ' || P_SRC_SCHEMA || '.' || P_DTM_TABLE || ' (
                        CONTRACT_NUMBER, 
                        UNDERWRITING_YEAR, 
                        SECTION_NUMBER, 
                        UNDERWRITING_ORDER, 
                        ENDORSEMENT_NUMBER, 
                        POLICY_UW_YEAR, 
                        CLOSING_DATE, 
                        VALUATION_DATE, 
                        BUSINESS_MATURITY_ID, 
                        REPORTING_BASIS_ID, 
                        ASSUMED_CONTRACT_NUMBER, 
                        ASSUMED_SECTION_NUMBER, 
                        POSITION_ID, 
                        LEVEL_OF_ANALYSIS_ID, 
                        SCENARIO_TYPE_ID, 
                        SCENARIO_PARAMETER, 
                        CURRENCY_CODE, 
                        SPLIT_TYPE_ID, 
                        PROJECTION_YEAR, 
                        PROJECTION_MONTH, 
                        PROJECTION_DATE, 
                        PERIOD_TYPE_ID, 
                        ORIGINAL_PERIOD_TYPE_ID, 
                        AMOUNT, 
                        IS_IPDS, 
                        IS_COMPOSITE, 
                        IS_DELTA, 
                        IS_CSM, 
                        HASH_KEY, 
                        VALID_FROM, 
                        VALID_TO, 
                        PIVOT_KEY, 
                        SUPP_DATE, 
                        CREATED_REQUEST_ID, 
                        MODIFIED_REQUEST_ID, 
                        DELETED_REQUEST_ID, 
                        AOC_RULE_CD
                        )
                        SELECT 
                            CONTRACT_NUMBER, 
                            UNDERWRITING_YEAR, 
                            SECTION_NUMBER, 
                            UNDERWRITING_ORDER, 
                            ENDORSEMENT_NUMBER, 
                            POLICY_UW_YEAR, 
                            CLOSING_DATE, 
                            VALUATION_DATE, 
                            BUSINESS_MATURITY_ID, 
                            REPORTING_BASIS_ID, 
                            ASSUMED_CONTRACT_NUMBER, 
                            ASSUMED_SECTION_NUMBER, 
                            POSITION_ID, 
                            LEVEL_OF_ANALYSIS_ID, 
                            SCENARIO_TYPE_ID, 
                            SCENARIO_PARAMETER, 
                            CURRENCY_CODE, 
                            SPLIT_TYPE_ID, 
                            PROJECTION_YEAR, 
                            PROJECTION_MONTH, 
                            PROJECTION_DATE, 
                            PERIOD_TYPE_ID, 
                            ORIGINAL_PERIOD_TYPE_ID, 
                            AMOUNT, 
                            IS_IPDS, 
                            IS_COMPOSITE, 
                            IS_DELTA, 
                            IS_CSM
                            , HASH(NVL(
                                    NVL(STG.CONTRACT_NUMBER,''0'')||''-''||NVL(STG.UNDERWRITING_YEAR,''0'')||''-''||NVL(STG.SECTION_NUMBER,''0'')||''-''||NVL(STG.UNDERWRITING_ORDER,''0'')||''-''||NVL(STG.ENDORSEMENT_NUMBER,''0'')
                                    ||''-''||NVL(STG.POLICY_UW_YEAR,''0'')||''-''||NVL(VARCHAR_FORMAT(STG.CLOSING_DATE, ''YYYYMMDD''),''0'')||''-''||NVL(VARCHAR_FORMAT(STG.VALUATION_DATE, ''YYYYMMDD''),''0'')
                                    ||''-''||NVL(STG.BUSINESS_MATURITY_ID,''0'')||''-''||NVL(STG.REPORTING_BASIS_ID,''0'')||''-''||NVL(STG.ASSUMED_CONTRACT_NUMBER,''0'')||''-''||NVL(STG.ASSUMED_SECTION_NUMBER,''0'')
                                    ||''-''||NVL(STG.POSITION_ID,''0'')||''-''||NVL(STG.LEVEL_OF_ANALYSIS_ID,''0'')||''-''||NVL(STG.SCENARIO_TYPE_ID,''0'')||''-''||NVL(STG.SCENARIO_PARAMETER,''0'')||''-''||NVL(STG.CURRENCY_CODE,''0'')
                                    ||''-''||NVL(STG.SPLIT_TYPE_ID,''0'')||''-''||NVL(STG.PROJECTION_YEAR,''0'')||''-''||NVL(STG.PROJECTION_MONTH,''0'')||''-''||NVL(VARCHAR_FORMAT(STG.PROJECTION_DATE, ''YYYYMMDD''),''0'')||''-''||NVL(STG.PERIOD_TYPE_ID,''0'')
                                    ||''-''||NVL(STG.ORIGINAL_PERIOD_TYPE_ID,''0'')||''-''||NVL(STG.IS_IPDS,''0'')||''-''||NVL(STG.IS_COMPOSITE,''0'')||''-''||NVL(STG.IS_DELTA,''0'')||''-''||NVL(STG.IS_CSM,''0'')
                                    ,'''')
                                ,2) HASH_KEY
                            , NOW() VALID_FROM, ''9999-12-31'' VALID_TO
                            , HASH(NVL(NVL(AMOUNT,''0'')||''-''||NVL(AOC_RULE_CD,''0''),''''),2) PIVOT_KEY
                            ,''9999-12-31'' SUPP_DATE
                            , REQUEST_ID CREATED_REQUEST_ID, NULL MODIFIED_REQUEST_ID, NULL DELETED_REQUEST_ID
                            , AOC_RULE_CD
                        FROM  ' || P_STG_SCHEMA || '.' || P_STG_TABLE || ' STG
                        WHERE REQUEST_ID=' || P_REQUEST_ID || ' ';

    EXECUTE IMMEDIATE V_INSERT_DTM;
    EXECUTE IMMEDIATE 'COMMIT';

END IF;

RAISE NOTICE 'CLEAN UP WRK TABLE';

EXECUTE IMMEDIATE 'DELETE FROM ' || P_STG_SCHEMA || '.' || P_STG_TABLE || ' WHERE REQUEST_ID=' || P_REQUEST_ID || ' ';

EXCEPTION 
   WHEN OTHERS THEN
         L_ERR_CD := SUBSTR(SQLERRM, 8, 5);
      L_ERR_MSG := SQLERRM;
      RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG;
      RETURN L_ERR_CD;
      
END

END_PROC;