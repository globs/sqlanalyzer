CREATE OR REPLACE PROCEDURE SP_BATCH_GROUPING_REORG() RETURNS INTEGER
   LANGUAGE nzplsql AS BEGIN_PROC

DECLARE VAR_BATCH_GROUPING_ID INT;
L_ERR_CD				CHAR(5);
L_ERR_MSG				VARCHAR(32000);


BEGIN
SET ISOLATION TO UR;

DELETE FROM BATCH_GROUPING WHERE BATCH_GROUPING_NAME = 'LIFE MODELING PROCESSING';

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'APAC RDWH STAGING PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);
		
UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_INGEST_APAC_CASHFLOWS_FOR_VALIDATION');

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'CANADA RDWH STAGING PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);
		
UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_INGEST_CANADA_CASHFLOWS_FOR_VALIDATION');

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'FR-GE RDWH STAGING PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);
		
UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_INGEST_FRGE_CASHFLOWS_FOR_VALIDATION');

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'UK RDWH STAGING PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);
		
UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_INGEST_UK_CASHFLOWS_FOR_VALIDATION');

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'US RDWH STAGING PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);
		
UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_INGEST_US_CASHFLOWS_FOR_VALIDATION');

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'MU RDWH STAGING PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);
		
UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_INGEST_MU_CASHFLOWS_FOR_VALIDATION');


DELETE FROM BATCH_GROUPING WHERE BATCH_GROUPING_NAME = 'LRM CoC PROCESSING';

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'RDWH HISTORIZATION PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);
		
UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_APAC_CASHFLOWS_VALIDATED', 'EVT_CANADA_CASHFLOWS_VALIDATED', 'EVT_FRGE_CASHFLOWS_VALIDATED', 'EVT_UK_CASHFLOWS_VALIDATED', 'EVT_US_CASHFLOWS_VALIDATED', 'EVT_MU_CASHFLOWS_VALIDATED', 'EVT_LRM_TO_DIP');


SELECT BATCH_GROUPING_ID INTO VAR_BATCH_GROUPING_ID FROM BATCH_GROUPING WHERE BATCH_GROUPING_NAME = 'LRM RA PROCESSING';

UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_MU_LIFE_RISK_ADJUSTMENT', 'EVT_RAP_LRM_TO_DIP');


DELETE FROM BATCH_GROUPING WHERE BATCH_GROUPING_NAME = 'IFRS Parameters Manual Upload';

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'YIELD CURVE PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);

UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_MU_LIFE_ECONOMIC_CURVE');

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'P&C RISK ADJUSTMENT', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);

UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_MU_PNC_RISK_ADJUSTMENT');

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'P&C RISK ADJUSTMENT FORPLAN', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);

UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_MU_PNC_RISK_ADJUSTMENT_FORPLAN');

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'P&C EXPENSE RATIO', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);

UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_MU_PNC_EXPENSE_RATIO');

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'P&C MANUAL ADJUSTMENT', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);

UPDATE EVENT_MAPPING SET BATCH_GROUPING_ID = VAR_BATCH_GROUPING_ID WHERE EVENT_CODE IN ('EVT_MU_PNC_ADJUSTMENT');

EXCEPTION WHEN OTHERS THEN 
	L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
	L_ERR_MSG := SQLERRM; 
	RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
	RETURN L_ERR_CD;
 
END; 

END_PROC;