CREATE OR REPLACE PROCEDURE SP_BATCH_METADATA_FOR_CONTROLS_SAS_OMEGA () RETURNS INTEGER
   LANGUAGE nzplsql AS BEGIN_PROC

DECLARE VAR_BATCH_GROUPING_ID INT ;
VAR_BATCH_ID INT;
VAR_JOB_GROUP_ID INT;
VAR_JOB_ID INT;
VAR_STEP INT;
VAR_DATA_VALIDATION_CONTROL_ID INT;
VAR_DATA_VALIDATION_CONTROL_MAPPING_ID INT;
L_ERR_CD CHAR(5);
L_ERR_MSG VARCHAR(32000);

BEGIN
SET ISOLATION TO UR;

SET VAR_BATCH_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_GROUP_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_ID  = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO BATCH (BATCH_ID,BATCH_NAME,BATCH_DESCRIPTION,APPLICATION_NAME,BATCH_PRIORITY,ON_ERROR,PRE_BATCH_PROCESSING,POST_BATCH_PROCESSING)
	VALUES (VAR_BATCH_ID, 'Control for I17 Attributes', 'Control for I17 Attributes', 'DIP', 1, NULL, NULL, NULL);

INSERT INTO JOB_GROUP (JOB_GROUP_ID,JOB_GROUP_NAME,BATCH_ID,PARENT_JOB_GROUP_ID)
	VALUES (VAR_JOB_GROUP_ID, 'I17 Attributes Control Job Group', VAR_BATCH_ID, NULL);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
	VALUES (VAR_JOB_ID, 'I17 Attributes Control Job', NULL, VAR_JOB_GROUP_ID, NULL, NULL);

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
	VALUES (VAR_STEP, 3, VAR_JOB_ID, 'I17 Attributes Control Step', 1, NULL, NULL, NULL, NULL);

INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES (VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );

VAR_DATA_VALIDATION_CONTROL_ID = 0;

SELECT DATA_VALIDATION_CONTROL_ID INTO VAR_DATA_VALIDATION_CONTROL_ID FROM DATA_VALIDATION_CONTROL WHERE CONTROL_NAME = 'I17 Attributes Control';

IF VAR_DATA_VALIDATION_CONTROL_ID = 0 THEN 
	SET VAR_DATA_VALIDATION_CONTROL_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

	INSERT INTO DATA_VALIDATION_CONTROL (DATA_VALIDATION_CONTROL_ID, CONTROL_NAME, CONTROL_PROCESSING, SPECIFIC_PROCESS) 
		VALUES(VAR_DATA_VALIDATION_CONTROL_ID, 'I17 Attributes Control', 'api-dip:i17AttributesControl', NULL);
END IF;


SET VAR_DATA_VALIDATION_CONTROL_MAPPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO DATA_VALIDATION_CONTROL_MAPPING (DATA_VALIDATION_CONTROL_MAPPING_ID, BATCH_ID, JOB_GROUP_ID, JOB_ID, STEP_ID
, DATA_VALIDATION_CONTROL_ID, IS_ACTIVE, CONTROL_TYPE, CONTROL_CHRONOLOGY, CONTROL_SEQUENCE, PARAMETER_NAMES) 
	VALUES(VAR_DATA_VALIDATION_CONTROL_MAPPING_ID, VAR_BATCH_ID, VAR_JOB_GROUP_ID, VAR_JOB_ID, VAR_STEP
	, VAR_DATA_VALIDATION_CONTROL_ID, TRUE, 'INFO', 'PRE-PRE', 1, NULL);

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'I17 ATTRIBUTES CONTROL PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);

INSERT INTO EVENT ( EVENT_CODE, EVENT_DESCRIPTION )
	VALUES ('EVT_I17_ATTRIBUTES_CONTROL', 'Event for I17 Attributes Control' );

INSERT INTO EVENT_MAPPING ( EVENT_CODE, BATCH_ID, ORCHESTRATION_PROCESS_STEP_ID, ORCHESTRATION_PROCESS_ID, BATCH_GROUPING_ID, IS_DWH_SWITCH)
	VALUES ('EVT_I17_ATTRIBUTES_CONTROL', VAR_BATCH_ID, NULL, NULL, VAR_BATCH_GROUPING_ID, FALSE);
	

SET VAR_BATCH_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_GROUP_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_ID  = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO BATCH (BATCH_ID,BATCH_NAME,BATCH_DESCRIPTION,APPLICATION_NAME,BATCH_PRIORITY,ON_ERROR,PRE_BATCH_PROCESSING,POST_BATCH_PROCESSING)
	VALUES (VAR_BATCH_ID, 'Control for I17 Product', 'Control for I17 Product', 'DIP', 1, NULL, NULL, NULL);

INSERT INTO JOB_GROUP (JOB_GROUP_ID,JOB_GROUP_NAME,BATCH_ID,PARENT_JOB_GROUP_ID)
	VALUES (VAR_JOB_GROUP_ID, 'I17 Product Control Job Group', VAR_BATCH_ID, NULL);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
	VALUES (VAR_JOB_ID, 'I17 Product Control Job', NULL, VAR_JOB_GROUP_ID, NULL, NULL);

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
	VALUES (VAR_STEP, 3, VAR_JOB_ID, 'I17 Product Control Step', 1, NULL, NULL, NULL, NULL);

INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES (VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );

VAR_DATA_VALIDATION_CONTROL_ID = 0;

SELECT DATA_VALIDATION_CONTROL_ID INTO VAR_DATA_VALIDATION_CONTROL_ID FROM DATA_VALIDATION_CONTROL WHERE CONTROL_NAME = 'I17 Product Control';

IF VAR_DATA_VALIDATION_CONTROL_ID = 0 THEN 
	SET VAR_DATA_VALIDATION_CONTROL_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

	INSERT INTO DATA_VALIDATION_CONTROL (DATA_VALIDATION_CONTROL_ID, CONTROL_NAME, CONTROL_PROCESSING, SPECIFIC_PROCESS) 
		VALUES(VAR_DATA_VALIDATION_CONTROL_ID, 'I17 Product Control', 'api-dip:i17ProductControl', NULL);
END IF;


SET VAR_DATA_VALIDATION_CONTROL_MAPPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO DATA_VALIDATION_CONTROL_MAPPING (DATA_VALIDATION_CONTROL_MAPPING_ID, BATCH_ID, JOB_GROUP_ID, JOB_ID, STEP_ID
, DATA_VALIDATION_CONTROL_ID, IS_ACTIVE, CONTROL_TYPE, CONTROL_CHRONOLOGY, CONTROL_SEQUENCE, PARAMETER_NAMES) 
	VALUES(VAR_DATA_VALIDATION_CONTROL_MAPPING_ID, VAR_BATCH_ID, VAR_JOB_GROUP_ID, VAR_JOB_ID, VAR_STEP
	, VAR_DATA_VALIDATION_CONTROL_ID, TRUE, 'INFO', 'PRE-PRE', 1, NULL);

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'I17 PRODUCT CONTROL PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);

INSERT INTO EVENT ( EVENT_CODE, EVENT_DESCRIPTION )
	VALUES ('EVT_I17_PRODUCT_CONTROL', 'Event for I17 Product Control' );

INSERT INTO EVENT_MAPPING ( EVENT_CODE, BATCH_ID, ORCHESTRATION_PROCESS_STEP_ID, ORCHESTRATION_PROCESS_ID, BATCH_GROUPING_ID, IS_DWH_SWITCH)
	VALUES ('EVT_I17_PRODUCT_CONTROL', VAR_BATCH_ID, NULL, NULL, VAR_BATCH_GROUPING_ID, FALSE);
	

SET VAR_BATCH_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_GROUP_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_ID  = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO BATCH (BATCH_ID,BATCH_NAME,BATCH_DESCRIPTION,APPLICATION_NAME,BATCH_PRIORITY,ON_ERROR,PRE_BATCH_PROCESSING,POST_BATCH_PROCESSING)
	VALUES (VAR_BATCH_ID, 'Control for Codes', 'Control for Codes', 'DIP', 1, NULL, NULL, NULL);

INSERT INTO JOB_GROUP (JOB_GROUP_ID,JOB_GROUP_NAME,BATCH_ID,PARENT_JOB_GROUP_ID)
	VALUES (VAR_JOB_GROUP_ID, 'Codes Control Job Group', VAR_BATCH_ID, NULL);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
	VALUES (VAR_JOB_ID, 'Codes Control Job', NULL, VAR_JOB_GROUP_ID, NULL, NULL);

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
	VALUES (VAR_STEP, 3, VAR_JOB_ID, 'Codes Control Step', 1, NULL, NULL, NULL, NULL);

INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES (VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );

VAR_DATA_VALIDATION_CONTROL_ID = 0;

SELECT DATA_VALIDATION_CONTROL_ID INTO VAR_DATA_VALIDATION_CONTROL_ID FROM DATA_VALIDATION_CONTROL WHERE CONTROL_NAME = 'Codes Control';

IF VAR_DATA_VALIDATION_CONTROL_ID = 0 THEN 
	SET VAR_DATA_VALIDATION_CONTROL_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

	INSERT INTO DATA_VALIDATION_CONTROL (DATA_VALIDATION_CONTROL_ID, CONTROL_NAME, CONTROL_PROCESSING, SPECIFIC_PROCESS) 
		VALUES(VAR_DATA_VALIDATION_CONTROL_ID, 'Codes Control', 'api-dip:codesControl', NULL);
END IF;


SET VAR_DATA_VALIDATION_CONTROL_MAPPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO DATA_VALIDATION_CONTROL_MAPPING (DATA_VALIDATION_CONTROL_MAPPING_ID, BATCH_ID, JOB_GROUP_ID, JOB_ID, STEP_ID
, DATA_VALIDATION_CONTROL_ID, IS_ACTIVE, CONTROL_TYPE, CONTROL_CHRONOLOGY, CONTROL_SEQUENCE, PARAMETER_NAMES) 
	VALUES(VAR_DATA_VALIDATION_CONTROL_MAPPING_ID, VAR_BATCH_ID, VAR_JOB_GROUP_ID, VAR_JOB_ID, VAR_STEP
	, VAR_DATA_VALIDATION_CONTROL_ID, TRUE, 'INFO', 'PRE-PRE', 1, NULL);

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'CODES CONTROL PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);

INSERT INTO EVENT ( EVENT_CODE, EVENT_DESCRIPTION )
	VALUES ('EVT_CODES_CONTROL', 'Event for Codes Control' );

INSERT INTO EVENT_MAPPING ( EVENT_CODE, BATCH_ID, ORCHESTRATION_PROCESS_STEP_ID, ORCHESTRATION_PROCESS_ID, BATCH_GROUPING_ID, IS_DWH_SWITCH)
	VALUES ('EVT_CODES_CONTROL', VAR_BATCH_ID, NULL, NULL, VAR_BATCH_GROUPING_ID, FALSE);


SET VAR_BATCH_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_GROUP_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_ID  = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO BATCH (BATCH_ID,BATCH_NAME,BATCH_DESCRIPTION,APPLICATION_NAME,BATCH_PRIORITY,ON_ERROR,PRE_BATCH_PROCESSING,POST_BATCH_PROCESSING)
	VALUES (VAR_BATCH_ID, 'Control for Omega AE', 'Control for Omega AE', 'DIP', 1, NULL, NULL, NULL);

INSERT INTO JOB_GROUP (JOB_GROUP_ID,JOB_GROUP_NAME,BATCH_ID,PARENT_JOB_GROUP_ID)
	VALUES (VAR_JOB_GROUP_ID, 'Omega AE Control Job Group', VAR_BATCH_ID, NULL);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
	VALUES (VAR_JOB_ID, 'Omega AE Control Job', NULL, VAR_JOB_GROUP_ID, NULL, NULL);

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
	VALUES (VAR_STEP, 3, VAR_JOB_ID, 'Omega AE Control Step', 1, NULL, NULL, NULL, NULL);

INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES (VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );

VAR_DATA_VALIDATION_CONTROL_ID = 0;

SELECT DATA_VALIDATION_CONTROL_ID INTO VAR_DATA_VALIDATION_CONTROL_ID FROM DATA_VALIDATION_CONTROL WHERE CONTROL_NAME = 'Omega AE Control';

IF VAR_DATA_VALIDATION_CONTROL_ID = 0 THEN 
	SET VAR_DATA_VALIDATION_CONTROL_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

	INSERT INTO DATA_VALIDATION_CONTROL (DATA_VALIDATION_CONTROL_ID, CONTROL_NAME, CONTROL_PROCESSING, SPECIFIC_PROCESS) 
		VALUES(VAR_DATA_VALIDATION_CONTROL_ID, 'Omega AE Control', 'api-dip:omegaAEControl', NULL);
END IF;


SET VAR_DATA_VALIDATION_CONTROL_MAPPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO DATA_VALIDATION_CONTROL_MAPPING (DATA_VALIDATION_CONTROL_MAPPING_ID, BATCH_ID, JOB_GROUP_ID, JOB_ID, STEP_ID
, DATA_VALIDATION_CONTROL_ID, IS_ACTIVE, CONTROL_TYPE, CONTROL_CHRONOLOGY, CONTROL_SEQUENCE, PARAMETER_NAMES) 
	VALUES(VAR_DATA_VALIDATION_CONTROL_MAPPING_ID, VAR_BATCH_ID, VAR_JOB_GROUP_ID, VAR_JOB_ID, VAR_STEP
	, VAR_DATA_VALIDATION_CONTROL_ID, TRUE, 'INFO', 'PRE-PRE', 1, NULL);

SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'OMEGA AE CONTROL PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);

INSERT INTO EVENT ( EVENT_CODE, EVENT_DESCRIPTION )
	VALUES ('EVT_OMEGA_AE_CONTROL', 'Event for Omega AE Control' );

INSERT INTO EVENT_MAPPING ( EVENT_CODE, BATCH_ID, ORCHESTRATION_PROCESS_STEP_ID, ORCHESTRATION_PROCESS_ID, BATCH_GROUPING_ID, IS_DWH_SWITCH)
	VALUES ('EVT_OMEGA_AE_CONTROL', VAR_BATCH_ID, NULL, NULL, VAR_BATCH_GROUPING_ID, FALSE);






SELECT BATCH_ID INTO VAR_BATCH_ID FROM BATCH WHERE BATCH_NAME = 'DIP to SAS Run';

VAR_DATA_VALIDATION_CONTROL_ID = 0;

SELECT DATA_VALIDATION_CONTROL_ID INTO VAR_DATA_VALIDATION_CONTROL_ID FROM DATA_VALIDATION_CONTROL WHERE CONTROL_NAME = 'Post DIP to SAS Control';

IF VAR_DATA_VALIDATION_CONTROL_ID = 0 THEN 
	SET VAR_DATA_VALIDATION_CONTROL_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

	INSERT INTO DATA_VALIDATION_CONTROL (DATA_VALIDATION_CONTROL_ID, CONTROL_NAME, CONTROL_PROCESSING, SPECIFIC_PROCESS) 
		VALUES(VAR_DATA_VALIDATION_CONTROL_ID, 'Post DIP to SAS Control', 'api-dip:postDipToSasControl', NULL);
END IF;


SET VAR_DATA_VALIDATION_CONTROL_MAPPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO DATA_VALIDATION_CONTROL_MAPPING (DATA_VALIDATION_CONTROL_MAPPING_ID, BATCH_ID, JOB_GROUP_ID, JOB_ID, STEP_ID
, DATA_VALIDATION_CONTROL_ID, IS_ACTIVE, CONTROL_TYPE, CONTROL_CHRONOLOGY, CONTROL_SEQUENCE, PARAMETER_NAMES) 
	VALUES(VAR_DATA_VALIDATION_CONTROL_MAPPING_ID, VAR_BATCH_ID, NULL, NULL, NULL
	, VAR_DATA_VALIDATION_CONTROL_ID, TRUE, 'INFO', 'POST-POST', 1, NULL);






SELECT BATCH_ID INTO VAR_BATCH_ID FROM BATCH WHERE BATCH_NAME = 'SAS to DIP Run';

VAR_DATA_VALIDATION_CONTROL_ID = 0;

SELECT DATA_VALIDATION_CONTROL_ID INTO VAR_DATA_VALIDATION_CONTROL_ID FROM DATA_VALIDATION_CONTROL WHERE CONTROL_NAME = 'Post SAS to DIP Control';

IF VAR_DATA_VALIDATION_CONTROL_ID = 0 THEN 
	SET VAR_DATA_VALIDATION_CONTROL_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

	INSERT INTO DATA_VALIDATION_CONTROL (DATA_VALIDATION_CONTROL_ID, CONTROL_NAME, CONTROL_PROCESSING, SPECIFIC_PROCESS) 
		VALUES(VAR_DATA_VALIDATION_CONTROL_ID, 'Post SAS to DIP Control', 'api-dip:postSasToDipControl', NULL);
END IF;


SET VAR_DATA_VALIDATION_CONTROL_MAPPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO DATA_VALIDATION_CONTROL_MAPPING (DATA_VALIDATION_CONTROL_MAPPING_ID, BATCH_ID, JOB_GROUP_ID, JOB_ID, STEP_ID
, DATA_VALIDATION_CONTROL_ID, IS_ACTIVE, CONTROL_TYPE, CONTROL_CHRONOLOGY, CONTROL_SEQUENCE, PARAMETER_NAMES) 
	VALUES(VAR_DATA_VALIDATION_CONTROL_MAPPING_ID, VAR_BATCH_ID, NULL, NULL, NULL
	, VAR_DATA_VALIDATION_CONTROL_ID, TRUE, 'INFO', 'POST-POST', 1, NULL);



EXCEPTION WHEN OTHERS THEN 
	L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
	L_ERR_MSG := SQLERRM; 
	RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
	RETURN L_ERR_CD; 
 
END; 

END_PROC;