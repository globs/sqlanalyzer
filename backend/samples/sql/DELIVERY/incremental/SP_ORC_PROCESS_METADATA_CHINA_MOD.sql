CREATE OR REPLACE PROCEDURE SP_ORCHESTRATION_PROCESS_METADATA_CHINA_MOD () RETURNS INTEGER
   LANGUAGE nzplsql AS BEGIN_PROC

DECLARE VAR_BUSINESS_EVENT_ID_01 INT ;
VAR_BUSINESS_EVENT_ID_02 INT ;
VAR_BUSINESS_PROCESS_ID_01 INT ;
VAR_BUSINESS_PROCESS_STEP_ID_01 INT ; 
VAR_ORCHESTRATION_PROCESS_ID INT;
VAR_ORCHESTRATION_PROCESS_STEP_ID INT;
VAR_ORCHESTRATION_PROCESS_STEP1_ID INT;
VAR_BATCH_GROUPING_ID INT;
VAR_BATCH_ID INT;
VAR_JOB_GROUP_ID INT;
VAR_JOB_ID INT;
VAR_JOB_ID_01 INT;
VAR_STEP INT; 
L_ERR_CD				CHAR(5);
L_ERR_MSG				VARCHAR(32000);


BEGIN
SET ISOLATION TO UR;

SET VAR_BUSINESS_PROCESS_STEP_ID_01 = NEXT VALUE FOR SEQUENCE_BUSINESS_CALENDAR_METADATA;
SET VAR_BUSINESS_EVENT_ID_01 = NEXT VALUE FOR SEQUENCE_BUSINESS_CALENDAR_METADATA;
SET VAR_BUSINESS_EVENT_ID_02 = NEXT VALUE FOR SEQUENCE_BUSINESS_CALENDAR_METADATA;


SELECT BUSINESS_PROCESS_ID INTO VAR_BUSINESS_PROCESS_ID_01 FROM BUSINESS_PROCESS 
	WHERE BUSINESS_PROCESS_NAME = 'Business Process for Modelling Engine to DIP (RDWH) Data Flow' AND CLOSING_TYPE_CODE = 'I17G';

INSERT INTO BUSINESS_PROCESS_STEP (BUSINESS_PROCESS_STEP_ID, BUSINESS_PROCESS_STEP_NAME, BUSINESS_PROCESS_ID, STEP_SEQUENCE)
	VALUES(VAR_BUSINESS_PROCESS_STEP_ID_01, 'China (APAC) Modeling Engine to RDWH (DIP) Data Flow', VAR_BUSINESS_PROCESS_ID_01, 4);

INSERT INTO BUSINESS_EVENT (BUSINESS_EVENT_ID, EVENT_CODE, CLOSING_TYPE_CODE, SCENARIO_TYPE, RUN_TYPE, IS_ACTIVE, TRIGGER_MODE, DELAY_DAYS)
	VALUES(VAR_BUSINESS_EVENT_ID_01, 'EVT_INGEST_CHINA_CASHFLOWS_FOR_VALIDATION', 'I17G', 'CLOSING', 'POSTING', true, 'External System Triggered', NULL);

INSERT INTO BUSINESS_EVENT (BUSINESS_EVENT_ID, EVENT_CODE, CLOSING_TYPE_CODE, SCENARIO_TYPE, RUN_TYPE, IS_ACTIVE, TRIGGER_MODE, DELAY_DAYS)
	VALUES(VAR_BUSINESS_EVENT_ID_02, 'EVT_CHINA_CASHFLOWS_VALIDATED', 'I17G', 'CLOSING', 'POSTING', true, 'External System Triggered', NULL);

INSERT INTO BUSINESS_PROCESS_STEP_EVENT_MAPPING (BUSINESS_PROCESS_STEP_ID, BUSINESS_EVENT_ID)
	VALUES(VAR_BUSINESS_PROCESS_STEP_ID_01, VAR_BUSINESS_EVENT_ID_01);


SET VAR_BUSINESS_PROCESS_STEP_ID_01 = NEXT VALUE FOR SEQUENCE_BUSINESS_CALENDAR_METADATA;
SET VAR_BUSINESS_EVENT_ID_01 = NEXT VALUE FOR SEQUENCE_BUSINESS_CALENDAR_METADATA;
SET VAR_BUSINESS_EVENT_ID_02 = NEXT VALUE FOR SEQUENCE_BUSINESS_CALENDAR_METADATA;

SELECT BUSINESS_PROCESS_ID INTO VAR_BUSINESS_PROCESS_ID_01 FROM BUSINESS_PROCESS 
	WHERE BUSINESS_PROCESS_NAME = 'Business Process for Modelling Engine to DIP (RDWH) Data Flow' AND CLOSING_TYPE_CODE = 'I17L';

INSERT INTO BUSINESS_PROCESS_STEP (BUSINESS_PROCESS_STEP_ID, BUSINESS_PROCESS_STEP_NAME, BUSINESS_PROCESS_ID, STEP_SEQUENCE)
	VALUES(VAR_BUSINESS_PROCESS_STEP_ID_01, 'China (APAC) Modeling Engine to RDWH (DIP) Data Flow', VAR_BUSINESS_PROCESS_ID_01, 4);

INSERT INTO BUSINESS_EVENT (BUSINESS_EVENT_ID, EVENT_CODE, CLOSING_TYPE_CODE, SCENARIO_TYPE, RUN_TYPE, IS_ACTIVE, TRIGGER_MODE, DELAY_DAYS)
	VALUES(VAR_BUSINESS_EVENT_ID_01, 'EVT_INGEST_CHINA_CASHFLOWS_FOR_VALIDATION', 'I17L', 'CLOSING', 'POSTING', true, 'External System Triggered', NULL);

INSERT INTO BUSINESS_EVENT (BUSINESS_EVENT_ID, EVENT_CODE, CLOSING_TYPE_CODE, SCENARIO_TYPE, RUN_TYPE, IS_ACTIVE, TRIGGER_MODE, DELAY_DAYS)
	VALUES(VAR_BUSINESS_EVENT_ID_02, 'EVT_CHINA_CASHFLOWS_VALIDATED', 'I17L', 'CLOSING', 'POSTING', true, 'External System Triggered', NULL);

INSERT INTO BUSINESS_PROCESS_STEP_EVENT_MAPPING (BUSINESS_PROCESS_STEP_ID, BUSINESS_EVENT_ID)
	VALUES(VAR_BUSINESS_PROCESS_STEP_ID_01, VAR_BUSINESS_EVENT_ID_01);

SET VAR_ORCHESTRATION_PROCESS_ID  = NEXT VALUE FOR SEQUENCE_ORCHESTRATION_PROCESS_METADATA;
SET VAR_ORCHESTRATION_PROCESS_STEP_ID  = NEXT VALUE FOR SEQUENCE_ORCHESTRATION_PROCESS_METADATA;
SET VAR_BATCH_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_GROUP_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_ID  = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO ORCHESTRATION_PROCESS (ORCHESTRATION_PROCESS_ID,ORCHESTRATION_PROCESS_NAME,ORCHESTRATION_PROCESS_DESCRIPTION,INSTANCE_TYPE) VALUES
(VAR_ORCHESTRATION_PROCESS_ID, 'China (APAC) Modeling Engine to DIP', 'China (APAC) Modeling Engine to DIP Data Flow', null);

INSERT INTO ORCHESTRATION_PROCESS_STEP (ORCHESTRATION_PROCESS_STEP_ID,ORCHESTRATION_PROCESS_ID,ORCHESTRATION_PROCESS_STEP_NAME,CHILD_BATCH_ID,TRIGGER_DEPENDENT_STEPS, STARTING_STEP, OPTIONAL_RUN) VALUES
(VAR_ORCHESTRATION_PROCESS_STEP_ID, VAR_ORCHESTRATION_PROCESS_ID,'Process China (APAC) CF in Staging',VAR_BATCH_ID,NULL, true, false);


INSERT INTO BATCH (BATCH_ID,BATCH_NAME,BATCH_DESCRIPTION,APPLICATION_NAME,BATCH_PRIORITY,ON_ERROR,PRE_BATCH_PROCESSING,POST_BATCH_PROCESSING) VALUES
(VAR_BATCH_ID,'Talend China (APAC) Staging Process','Talend China (APAC) Staging Process','TALEND', 1, NULL, NULL, '[POST-COMPLETION]api-dip:checkIpdsAutoTrigger');


INSERT INTO JOB_GROUP (JOB_GROUP_ID,JOB_GROUP_NAME,BATCH_ID,PARENT_JOB_GROUP_ID) VALUES
(VAR_JOB_GROUP_ID,'Talend China (APAC) Staging Process Job Group',VAR_BATCH_ID,NULL);


INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
        VALUES ( VAR_JOB_ID, 'Talend China (APAC) Staging Process', NULL, VAR_JOB_GROUP_ID, NULL, NULL );
 

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 2, VAR_JOB_ID, 'China (APAC) Staging Load Step ', 1, NULL, 'api-dip:uploadinsert','api-diptalend:north_asia_cashflow_staging_load',NULL);
 
INSERT INTO STAGING_LOAD_STEP ( STEP_ID, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, TRUNCATE_STAGING_TABLE, MANDATORY_FILE, FILE_HEADER_ROWS, DELIMITER, CONVERTED_STAGING_TABLE_NAME, CHECK_DUPLICATES, SPECIFIC_PROCESS, DATA_FILE_TREATMENT, REGIONAL_DATA, FILE_DIRECTORY, FILE_NAME_PATTERN ) 
        VALUES ( VAR_STEP, 'STAGING_${ENV}', '', 0, 0, 0, '~', NULL, 0, NULL, NULL, 0, NULL, NULL );


SET VAR_BATCH_GROUPING_ID = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID, 'China (APAC) RDWH STAGING PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);

INSERT INTO EVENT ( EVENT_CODE, EVENT_DESCRIPTION )
        VALUES ( 'EVT_INGEST_CHINA_CASHFLOWS_FOR_VALIDATION', 'Event for China (APAC) Staging Load' );
	
INSERT INTO EVENT_MAPPING ( EVENT_CODE, BATCH_ID, ORCHESTRATION_PROCESS_STEP_ID, ORCHESTRATION_PROCESS_ID, BATCH_GROUPING_ID, IS_DWH_SWITCH)
        VALUES ( 'EVT_INGEST_CHINA_CASHFLOWS_FOR_VALIDATION', VAR_BATCH_ID, VAR_ORCHESTRATION_PROCESS_STEP_ID, VAR_ORCHESTRATION_PROCESS_ID, VAR_BATCH_GROUPING_ID, FALSE);
		

SET VAR_ORCHESTRATION_PROCESS_STEP1_ID = NEXT VALUE FOR SEQUENCE_ORCHESTRATION_PROCESS_METADATA;
SET VAR_BATCH_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_GROUP_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_ID_01 = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO JOB_DEPENDENCY (JOB_ID, PARENT_JOB_ID) VALUES(VAR_JOB_ID_01, VAR_JOB_ID);

INSERT INTO ORCHESTRATION_PROCESS_STEP (ORCHESTRATION_PROCESS_STEP_ID,ORCHESTRATION_PROCESS_ID,ORCHESTRATION_PROCESS_STEP_NAME,CHILD_BATCH_ID,TRIGGER_DEPENDENT_STEPS, STARTING_STEP, OPTIONAL_RUN) 
	VALUES (VAR_ORCHESTRATION_PROCESS_STEP1_ID, VAR_ORCHESTRATION_PROCESS_ID,'Process China (APAC) CF in RDWH', VAR_BATCH_ID, NULL, false, false);

INSERT INTO ORCHESTRATION_PROCESS_STEP_DEPENDENCY(ORCHESTRATION_PROCESS_STEP_ID, PARENT_ORCHESTRATION_PROCESS_STEP_ID)
	VALUES (VAR_ORCHESTRATION_PROCESS_STEP1_ID, VAR_ORCHESTRATION_PROCESS_STEP_ID);

INSERT INTO BATCH (BATCH_ID,BATCH_NAME,BATCH_DESCRIPTION,APPLICATION_NAME,BATCH_PRIORITY,ON_ERROR,PRE_BATCH_PROCESSING,POST_BATCH_PROCESSING) VALUES
	(VAR_BATCH_ID,'Talend China (APAC) DWH Process','Talend China (APAC) DWH Process','TALEND', 1,NULL,NULL,NULL);

INSERT INTO JOB_GROUP (JOB_GROUP_ID,JOB_GROUP_NAME,BATCH_ID,PARENT_JOB_GROUP_ID) VALUES
	(VAR_JOB_GROUP_ID,'Talend China (APAC) DWH Process Job Group',VAR_BATCH_ID,NULL);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
        VALUES ( VAR_JOB_ID, 'Talend China (APAC) DWH Process', NULL, VAR_JOB_GROUP_ID, NULL, NULL);


SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID, 'INSERT China (APAC) CF in RDWH', 1, NULL, 'api-dip:uploadupdate','api-diptalend:rdwh_historization_job',NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );


INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
        VALUES ( VAR_JOB_ID_01, 'Allocation Process Post IPDS for China', NULL, VAR_JOB_GROUP_ID, NULL, NULL);


SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID_01, 'Talend call for Allocation Process Post IPDS for China', 1, NULL, NULL, 'api-diptalend:lrm_ra_allocation_histo_processing', NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );

SELECT BATCH_GROUPING_ID INTO VAR_BATCH_GROUPING_ID FROM BATCH_GROUPING WHERE BATCH_GROUPING_NAME = 'RDWH HISTORIZATION PROCESSING';

INSERT INTO EVENT ( EVENT_CODE, EVENT_DESCRIPTION )
        VALUES ( 'EVT_CHINA_CASHFLOWS_VALIDATED', 'Event to Process China (APAC) CF in RDWH' );

INSERT INTO EVENT_MAPPING ( EVENT_CODE, BATCH_ID, ORCHESTRATION_PROCESS_STEP_ID, ORCHESTRATION_PROCESS_ID, BATCH_GROUPING_ID, IS_DWH_SWITCH)
        VALUES ( 'EVT_CHINA_CASHFLOWS_VALIDATED', VAR_BATCH_ID, VAR_ORCHESTRATION_PROCESS_STEP1_ID, NULL, VAR_BATCH_GROUPING_ID, TRUE);

EXCEPTION WHEN OTHERS THEN 
	L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
	L_ERR_MSG := SQLERRM; 
	RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
	RETURN L_ERR_CD;
 
END; 

END_PROC;