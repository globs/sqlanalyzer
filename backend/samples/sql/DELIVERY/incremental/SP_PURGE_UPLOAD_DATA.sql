DROP PROCEDURE SP_PURGE_UPLOAD_DATA ;

CREATE OR REPLACE PROCEDURE SP_PURGE_UPLOAD_DATA(CHARACTER VARYING(64),CHARACTER VARYING(64),SMALLINT,BIGINT,BIGINT) RETURNS INTEGER
language nzplsql
AS
BEGIN_PROC
 
DECLARE    
    P_SRC_SCHEMA                    ALIAS FOR $1;
    P_SRC_TABLE                     ALIAS FOR $2;
    P_DAYS_SINCE                    ALIAS FOR $3;
    P_STATUS_ID                     ALIAS FOR $4;
   	P_REQUEST_ID					ALIAS FOR $5;
    L_ERR_CD                        CHAR(5);          
    L_ERR_MSG                       VARCHAR(32000);       
    V_REC                           RECORD;
    V_CLEAN_DATA                    VARCHAR(64000);
    V_FILTER                        VARCHAR(300);
	V_TOTAL_TABLES         			SMALLINT; 
    V_TABLE_COUNTER        			SMALLINT; 
    V_CURRENT_TABLE_NAME   			VARCHAR(100); 
    
BEGIN
SET ISOLATION TO UR;

IF P_REQUEST_ID = 0
	THEN
		IF P_STATUS_ID = 0
		    THEN V_FILTER := ''; 
		    ELSE V_FILTER := 'AND UR.STATUS_ID = ' || P_STATUS_ID || ' '; 
		END IF ;
		
		V_CLEAN_DATA := 'DELETE FROM ' || P_SRC_SCHEMA || '.' || P_SRC_TABLE || ' SRC
		WHERE SRC.REQUEST_ID  IN  (
		    SELECT 
		        UR.REQUEST_ID
		    FROM DELIVERY_<env>.UPLOAD_REQUEST UR
		    WHERE UR.UPLOAD_DATE < ( CURRENT_DATE - ' || P_DAYS_SINCE || ') 
		    '|| V_FILTER ||'
		    GROUP BY REQUEST_ID)
		';
	
		RAISE NOTICE 'Executing V_CLEAN_DATA: ''%''',V_CLEAN_DATA; 
		EXECUTE IMMEDIATE V_CLEAN_DATA; 
		EXECUTE IMMEDIATE 'COMMIT';
	ELSE
		V_TOTAL_TABLES = 0; 
		V_TABLE_COUNTER = 1; 	
	
		CREATE TEMPORARY TABLE SESSION.TABLES(
				TABLE_NUMBER SMALLINT GENERATED ALWAYS AS IDENTITY,
				TABLE_NAME VARCHAR(50)
		) DISTRIBUTE ON RANDOM;
		
		INSERT INTO SESSION.TABLES(TABLE_NAME)
		SELECT 
			C.TABNAME AS TABLE_NAME
		FROM 
			SYSCAT.COLUMNS C
			INNER JOIN 
				SYSCAT.TABLES T 
				ON T.TABSCHEMA = C.TABSCHEMA 
				AND T.TABNAME = C.TABNAME
		WHERE 
			C.COLNAME = 'REQUEST_ID' 
			AND C.TABSCHEMA = 'STAGING_<env>'
			AND (C.TABNAME <> 'REJECT_DWH_PROJECTION')
			AND t.type = 'T'
		WITH UR;
		
		SELECT COUNT(0) INTO V_TOTAL_TABLES FROM SESSION.TABLES;
	
		WHILE V_TABLE_COUNTER <= V_TOTAL_TABLES LOOP
			
			SELECT TABLE_NAME INTO V_CURRENT_TABLE_NAME FROM SESSION.TABLES WHERE TABLE_NUMBER = V_TABLE_COUNTER;
			
			RAISE NOTICE 'DELETING DATA IN TABLE  ''%''  FOR REQUEST_ID ''%''', V_CURRENT_TABLE_NAME, P_REQUEST_ID; 
		
			EXECUTE IMMEDIATE 'DELETE FROM STAGING_<env>.' || V_CURRENT_TABLE_NAME || ' WHERE REQUEST_ID = ' || P_REQUEST_ID;
		
			EXECUTE IMMEDIATE 'COMMIT';
		
			V_TABLE_COUNTER = V_TABLE_COUNTER + 1;
		
		END LOOP; 
END IF;

DROP TABLE SESSION.TABLES IF EXISTS;

EXCEPTION WHEN OTHERS THEN
	L_ERR_CD := SUBSTR(SQLERRM,8,5); 
	L_ERR_MSG := SQLERRM;
	RAISE EXCEPTION '% Error while executing SQL statement',L_ERR_MSG;
	RETURN L_ERR_CD;

END;

END_PROC;