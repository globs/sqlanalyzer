CREATE OR REPLACE PROCEDURE SP_ORC_BATCH_METADATA_FOR_FFX_EC () RETURNS INTEGER
   LANGUAGE nzplsql AS BEGIN_PROC

DECLARE VAR_BATCH_ID INT ;
VAR_JOB_GROUP_ID INT ;
VAR_JOB_ID INT ;
VAR_PARENT_JOB_ID INT ;
VAR_STEP_ID INT ;

L_ERR_CD CHAR(5);
L_ERR_MSG VARCHAR(32000);

BEGIN
SET ISOLATION TO UR;

SELECT BATCH_ID INTO VAR_BATCH_ID FROM BATCH WHERE BATCH_NAME = 'Manual Upload for Life Economic Curve';
SELECT JOB_GROUP_ID INTO VAR_JOB_GROUP_ID FROM JOB_GROUP WHERE BATCH_ID = VAR_BATCH_ID;
SELECT JOB_ID INTO VAR_PARENT_JOB_ID FROM JOB WHERE JOB_GROUP_ID = VAR_JOB_GROUP_ID;

SET VAR_JOB_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_STEP_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
 
INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
	VALUES ( VAR_JOB_ID, 'Post Economic Curve MU FFX Process', NULL, VAR_JOB_GROUP_ID, NULL, NULL);

INSERT INTO JOB_DEPENDENCY (JOB_ID, PARENT_JOB_ID)
		VALUES(VAR_JOB_ID, VAR_PARENT_JOB_ID);

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP_ID, 3, VAR_JOB_ID, 'Talend call for FFX Process for Economic Curve', 1, NULL, 'api-dip:uploadinsert','api-diptalend:mu_ffx_processing',NULL);

INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP_ID, NULL, NULL, NULL, NULL, NULL, NULL, NULL );
COMMIT;

EXCEPTION WHEN OTHERS THEN 
	L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
	L_ERR_MSG := SQLERRM; 
	RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
	RETURN L_ERR_CD; 
 
END; 

END_PROC;