CREATE OR REPLACE PROCEDURE SP_BATCH_METADATA_FOR_RDWH_RA_ALLOCATION () RETURNS INTEGER
   LANGUAGE nzplsql AS BEGIN_PROC

DECLARE VAR_BATCH_GROUPING_ID_02 INT ;
VAR_BATCH_ID INT;
VAR_JOB_GROUP_ID INT;
VAR_JOB_ID INT;
VAR_STEP INT; 
L_ERR_CD				CHAR(5);
L_ERR_MSG				VARCHAR(32000);


BEGIN
SET ISOLATION TO UR;

SET VAR_BATCH_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_GROUP_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_ID  = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO BATCH (BATCH_ID,BATCH_NAME,BATCH_DESCRIPTION,APPLICATION_NAME,BATCH_PRIORITY,ON_ERROR,PRE_BATCH_PROCESSING,POST_BATCH_PROCESSING)
	VALUES (VAR_BATCH_ID,'RA Allocation Process Post IPDS Processing', 'RA Allocation Process Post IPDS Processing', 'DIP', 1, NULL, NULL, NULL);

INSERT INTO JOB_GROUP (JOB_GROUP_ID,JOB_GROUP_NAME,BATCH_ID,PARENT_JOB_GROUP_ID)
	VALUES (VAR_JOB_GROUP_ID, 'RA Allocation Post IPDS Processing Job Group', VAR_BATCH_ID, NULL);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
	VALUES ( VAR_JOB_ID, 'RA Allocation Post IPDS Processing Job', NULL, VAR_JOB_GROUP_ID, NULL, NULL);

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID, 'Talend call for RA Allocation Process Post RDWH IPDS', 1, NULL
		, NULL, 'api-diptalend:lrm_ra_allocation_histo_processing', NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE
, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );

SELECT BATCH_GROUPING_ID INTO VAR_BATCH_GROUPING_ID_02 FROM BATCH_GROUPING WHERE BATCH_GROUPING_NAME = 'RDWH HISTORIZATION PROCESSING';

IF VAR_BATCH_GROUPING_ID_02 IS NULL THEN 
	SET VAR_BATCH_GROUPING_ID_02 = NEXT VALUE FOR SEQUENCE_BATCH_GROUPING;

	INSERT INTO BATCH_GROUPING (BATCH_GROUPING_ID, BATCH_GROUPING_NAME, ACTIVE_DWH, PASSIVE_DWH, LAST_UPDATE_TIME)
		VALUES(VAR_BATCH_GROUPING_ID_02, 'RDWH HISTORIZATION PROCESSING', 'DWHD2_' || chr(36) || '{ENV}', 'DWHD1_' || chr(36) || '{ENV}', CURRENT_TIMESTAMP);

END IF;

INSERT INTO EVENT ( EVENT_CODE, EVENT_DESCRIPTION )
	VALUES ( 'EVT_RA_ALLOCATION_POST_IPDS', 'Event to Process RA Allocation Post RDWH IPDS' );

INSERT INTO EVENT_MAPPING ( EVENT_CODE, BATCH_ID, ORCHESTRATION_PROCESS_STEP_ID, ORCHESTRATION_PROCESS_ID, BATCH_GROUPING_ID, IS_DWH_SWITCH)
	VALUES ( 'EVT_RA_ALLOCATION_POST_IPDS', VAR_BATCH_ID, NULL, NULL, VAR_BATCH_GROUPING_ID_02, FALSE);


EXCEPTION WHEN OTHERS THEN 
	L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
	L_ERR_MSG := SQLERRM; 
	RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
	RETURN L_ERR_CD;
 
END; 

END_PROC;