CREATE OR REPLACE PROCEDURE SP_ORCHESTRATION_BATCH_METADATA_FOR_MU_REPADJ () RETURNS INTEGER
   LANGUAGE nzplsql AS BEGIN_PROC

DECLARE VAR_BATCH_GROUPING_ID INT ;
VAR_BUSINESS_EVENT_ID_01 INT ;
VAR_BUSINESS_EVENT_ID_02 INT ;
VAR_BUSINESS_PROCESS_ID_01 INT ;
VAR_BUSINESS_PROCESS_ID_02 INT ;
VAR_BUSINESS_PROCESS_STEP_ID_01 INT ; 
VAR_BUSINESS_PROCESS_STEP_ID_02 INT ; 

VAR_BATCH_ID INT;
VAR_JOB_GROUP_ID INT;
VAR_JOB_ID INT;
VAR_STEP INT;
L_ERR_CD CHAR(5);
L_ERR_MSG VARCHAR(32000);

BEGIN
SET ISOLATION TO UR;

SET VAR_BUSINESS_EVENT_ID_01 = NEXT VALUE FOR SEQUENCE_BUSINESS_CALENDAR_METADATA;
SET VAR_BUSINESS_EVENT_ID_02 = NEXT VALUE FOR SEQUENCE_BUSINESS_CALENDAR_METADATA;
SET VAR_BUSINESS_PROCESS_STEP_ID_01 = NEXT VALUE FOR SEQUENCE_BUSINESS_CALENDAR_METADATA;
SET VAR_BUSINESS_PROCESS_STEP_ID_02 = NEXT VALUE FOR SEQUENCE_BUSINESS_CALENDAR_METADATA;


INSERT INTO BUSINESS_EVENT (BUSINESS_EVENT_ID, EVENT_CODE, CLOSING_TYPE_CODE, SCENARIO_TYPE, RUN_TYPE, IS_ACTIVE, TRIGGER_MODE, DELAY_DAYS)
	VALUES(VAR_BUSINESS_EVENT_ID_01, 'EVT_MU_PNC_ADJUSTMENT', 'I17G', 'CLOSING', 'POSTING', true, 'DIP Triggered', NULL);

INSERT INTO BUSINESS_EVENT (BUSINESS_EVENT_ID, EVENT_CODE, CLOSING_TYPE_CODE, SCENARIO_TYPE, RUN_TYPE, IS_ACTIVE, TRIGGER_MODE, DELAY_DAYS)
	VALUES(VAR_BUSINESS_EVENT_ID_02, 'EVT_MU_PNC_ADJUSTMENT', 'I17L', 'CLOSING', 'POSTING', true, 'DIP Triggered', NULL);

SELECT BUSINESS_PROCESS_ID INTO VAR_BUSINESS_PROCESS_ID_01 FROM BUSINESS_PROCESS 
	WHERE BUSINESS_PROCESS_NAME = 'Manual Upload Business Process for IFRS Parameters' AND CLOSING_TYPE_CODE = 'I17G';
	
SELECT BUSINESS_PROCESS_ID INTO VAR_BUSINESS_PROCESS_ID_02 FROM BUSINESS_PROCESS 
	WHERE BUSINESS_PROCESS_NAME = 'Manual Upload Business Process for IFRS Parameters' AND CLOSING_TYPE_CODE = 'I17L';

INSERT INTO BUSINESS_PROCESS_STEP (BUSINESS_PROCESS_STEP_ID, BUSINESS_PROCESS_STEP_NAME, BUSINESS_PROCESS_ID, STEP_SEQUENCE)
	VALUES(VAR_BUSINESS_PROCESS_STEP_ID_01, 'Manual Upload for Reporting Data Adjustment', VAR_BUSINESS_PROCESS_ID_01, 6);
	
INSERT INTO BUSINESS_PROCESS_STEP (BUSINESS_PROCESS_STEP_ID, BUSINESS_PROCESS_STEP_NAME, BUSINESS_PROCESS_ID, STEP_SEQUENCE)
	VALUES(VAR_BUSINESS_PROCESS_STEP_ID_02, 'Manual Upload for Reporting Data Adjustment', VAR_BUSINESS_PROCESS_ID_02, 6);

INSERT INTO BUSINESS_PROCESS_STEP_EVENT_MAPPING (BUSINESS_PROCESS_STEP_ID, BUSINESS_EVENT_ID)
	VALUES(VAR_BUSINESS_PROCESS_STEP_ID_01, VAR_BUSINESS_EVENT_ID_01);

INSERT INTO BUSINESS_PROCESS_STEP_EVENT_MAPPING (BUSINESS_PROCESS_STEP_ID, BUSINESS_EVENT_ID)
	VALUES(VAR_BUSINESS_PROCESS_STEP_ID_02, VAR_BUSINESS_EVENT_ID_02);


SET VAR_BATCH_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_GROUP_ID = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_JOB_ID  = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;
SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO BATCH (BATCH_ID,BATCH_NAME,BATCH_DESCRIPTION,APPLICATION_NAME,BATCH_PRIORITY,ON_ERROR,PRE_BATCH_PROCESSING,POST_BATCH_PROCESSING)
	VALUES (VAR_BATCH_ID, 'Manual Upload for Reporting Data Adjustment', 'Manual Upload for Reporting Data Adjustment', 'DIP', 1, NULL, NULL, NULL);

INSERT INTO JOB_GROUP (JOB_GROUP_ID,JOB_GROUP_NAME,BATCH_ID,PARENT_JOB_GROUP_ID)
	VALUES (VAR_JOB_GROUP_ID, 'Manual Upload for Reporting Data Adjustment Job Group', VAR_BATCH_ID, NULL);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
	VALUES (VAR_JOB_ID, 'Manual Upload for Reporting Data Adjustment job', NULL, VAR_JOB_GROUP_ID, NULL, NULL);

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
	VALUES (VAR_STEP, 3, VAR_JOB_ID, 'Manual Upload for Reporting Data Adjustment Talend Processing', 1, NULL, NULL, 'api-diptalend:mu_pnc_manual_adjustment', NULL);

INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES (VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );

SELECT BATCH_GROUPING_ID INTO VAR_BATCH_GROUPING_ID FROM BATCH_GROUPING WHERE BATCH_GROUPING_NAME = 'IFRS Parameters Manual Upload';

INSERT INTO EVENT ( EVENT_CODE, EVENT_DESCRIPTION )
	VALUES ('EVT_MU_PNC_ADJUSTMENT', 'Event for MU Reporting Data Adjustment' );

INSERT INTO EVENT_MAPPING ( EVENT_CODE, BATCH_ID, ORCHESTRATION_PROCESS_STEP_ID, ORCHESTRATION_PROCESS_ID, BATCH_GROUPING_ID, IS_DWH_SWITCH)
	VALUES ('EVT_MU_PNC_ADJUSTMENT', VAR_BATCH_ID, NULL, NULL, VAR_BATCH_GROUPING_ID, FALSE);


EXCEPTION WHEN OTHERS THEN 
	L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
	L_ERR_MSG := SQLERRM; 
	RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
	RETURN L_ERR_CD; 
 
END; 

END_PROC;