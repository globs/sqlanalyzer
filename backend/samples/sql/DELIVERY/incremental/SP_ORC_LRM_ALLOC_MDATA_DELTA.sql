CREATE OR REPLACE PROCEDURE SP_ORC_LRM_ALLOCATION_METADATA_DELTA () RETURNS INTEGER
   LANGUAGE nzplsql AS BEGIN_PROC

DECLARE 
VAR_JOB_GROUP_ID INT;
VAR_JOB_ID INT;
VAR_JOB_ID_01 INT;
VAR_STEP INT;
L_ERR_CD CHAR(5);
L_ERR_MSG VARCHAR(32000);

BEGIN
SET ISOLATION TO UR;


SELECT JOB_GROUP_ID INTO VAR_JOB_GROUP_ID FROM JOB_GROUP WHERE JOB_GROUP_NAME = 'Talend APAC DWH Process Job Group';

SELECT JOB_ID INTO VAR_JOB_ID FROM JOB WHERE JOB_NAME = 'Talend APAC DWH Process';

SET VAR_JOB_ID_01 = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO JOB_DEPENDENCY (JOB_ID, PARENT_JOB_ID) VALUES(VAR_JOB_ID_01, VAR_JOB_ID);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
        VALUES ( VAR_JOB_ID_01, 'Allocation Process Post IPDS for APAC', NULL, VAR_JOB_GROUP_ID, NULL, NULL);


SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID_01, 'Talend call for Allocation Process Post IPDS for APAC', 1, NULL, NULL, 'api-diptalend:lrm_ra_allocation_histo_processing', NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );


SELECT JOB_GROUP_ID INTO VAR_JOB_GROUP_ID FROM JOB_GROUP WHERE JOB_GROUP_NAME = 'Talend CANADA DWH Process Job Group';

SELECT JOB_ID INTO VAR_JOB_ID FROM JOB WHERE JOB_NAME = 'Talend CANADA DWH Process';

SET VAR_JOB_ID_01 = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO JOB_DEPENDENCY (JOB_ID, PARENT_JOB_ID) VALUES(VAR_JOB_ID_01, VAR_JOB_ID);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
        VALUES ( VAR_JOB_ID_01, 'Allocation Process Post IPDS for Canada', NULL, VAR_JOB_GROUP_ID, NULL, NULL);


SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID_01, 'Talend call for Allocation Process Post IPDS for Canada', 1, NULL, NULL, 'api-diptalend:lrm_ra_allocation_histo_processing', NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );

SELECT JOB_GROUP_ID INTO VAR_JOB_GROUP_ID FROM JOB_GROUP WHERE JOB_GROUP_NAME = 'Talend FR-GE DWH Process Job Group';

SELECT JOB_ID INTO VAR_JOB_ID FROM JOB WHERE JOB_NAME = 'Talend FR-GE DWH Process';

SET VAR_JOB_ID_01 = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO JOB_DEPENDENCY (JOB_ID, PARENT_JOB_ID) VALUES(VAR_JOB_ID_01, VAR_JOB_ID);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
        VALUES ( VAR_JOB_ID_01, 'Allocation Process Post IPDS for FR-GE', NULL, VAR_JOB_GROUP_ID, NULL, NULL);


SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID_01, 'Talend call for Allocation Process Post IPDS for FR-GE', 1, NULL, NULL, 'api-diptalend:lrm_ra_allocation_histo_processing', NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );

SELECT JOB_GROUP_ID INTO VAR_JOB_GROUP_ID FROM JOB_GROUP WHERE JOB_GROUP_NAME = 'Talend UK DWH Process Job Group';

SELECT JOB_ID INTO VAR_JOB_ID FROM JOB WHERE JOB_NAME = 'Talend UK DWH Process';

SET VAR_JOB_ID_01 = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO JOB_DEPENDENCY (JOB_ID, PARENT_JOB_ID) VALUES(VAR_JOB_ID_01, VAR_JOB_ID);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
        VALUES ( VAR_JOB_ID_01, 'Allocation Process Post IPDS for UK', NULL, VAR_JOB_GROUP_ID, NULL, NULL);


SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID_01, 'Talend call for Allocation Process Post IPDS for UK', 1, NULL, NULL, 'api-diptalend:lrm_ra_allocation_histo_processing', NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );


SELECT JOB_GROUP_ID INTO VAR_JOB_GROUP_ID FROM JOB_GROUP WHERE JOB_GROUP_NAME = 'Talend US DWH Process Job Group';

SELECT JOB_ID INTO VAR_JOB_ID FROM JOB WHERE JOB_NAME = 'Talend US DWH Process';

SET VAR_JOB_ID_01 = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO JOB_DEPENDENCY (JOB_ID, PARENT_JOB_ID) VALUES(VAR_JOB_ID_01, VAR_JOB_ID);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
        VALUES ( VAR_JOB_ID_01, 'Allocation Process Post IPDS for US', NULL, VAR_JOB_GROUP_ID, NULL, NULL);


SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID_01, 'Talend call for Allocation Process Post IPDS for US', 1, NULL, NULL, 'api-diptalend:lrm_ra_allocation_histo_processing', NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );


SELECT JOB_GROUP_ID INTO VAR_JOB_GROUP_ID FROM JOB_GROUP WHERE JOB_GROUP_NAME = 'Talend RDWH MU Upload DWH Process Job Group';

SELECT JOB_ID INTO VAR_JOB_ID FROM JOB WHERE JOB_NAME = 'Talend RDWH MU Upload DWH Process';

SET VAR_JOB_ID_01 = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO JOB_DEPENDENCY (JOB_ID, PARENT_JOB_ID) VALUES(VAR_JOB_ID_01, VAR_JOB_ID);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
        VALUES ( VAR_JOB_ID_01, 'Allocation Process Post IPDS for MU', NULL, VAR_JOB_GROUP_ID, NULL, NULL);


SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID_01, 'Talend call for Allocation Process Post IPDS for MU', 1, NULL, NULL, 'api-diptalend:lrm_ra_allocation_histo_processing', NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );


SELECT JOB_GROUP_ID INTO VAR_JOB_GROUP_ID FROM JOB_GROUP WHERE JOB_GROUP_NAME = 'Manual Upload for Life Risk Adjustment Job Group';

SELECT JOB_ID INTO VAR_JOB_ID FROM JOB WHERE JOB_NAME = 'Manual Upload for Life Risk Adjustment job';

SET VAR_JOB_ID_01 = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO JOB_DEPENDENCY (JOB_ID, PARENT_JOB_ID) VALUES(VAR_JOB_ID_01, VAR_JOB_ID);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
        VALUES ( VAR_JOB_ID_01, 'Allocation Process Post MU Life RA', NULL, VAR_JOB_GROUP_ID, NULL, NULL);


SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID_01, 'Talend call for Allocation Process post MU Life RA', 1, NULL, NULL, 'api-diptalend:lrm_ra_allocation_frame1_processing', NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );


SELECT JOB_GROUP_ID INTO VAR_JOB_GROUP_ID FROM JOB_GROUP WHERE JOB_GROUP_NAME = 'LRM to DIP Data flow for RAP Job Group';

SELECT JOB_ID INTO VAR_JOB_ID FROM JOB WHERE JOB_NAME = 'LRM to DIP Data flow for RAP job';

SET VAR_JOB_ID_01 = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO JOB_DEPENDENCY (JOB_ID, PARENT_JOB_ID) VALUES(VAR_JOB_ID_01, VAR_JOB_ID);

INSERT INTO JOB ( JOB_ID, JOB_NAME, JOB_PRIORITY, JOB_GROUP_ID, IS_ACTIVE, JOB_OPTIONAL_RUN )
        VALUES ( VAR_JOB_ID_01, 'Allocation Process Post LRM to DIP RA', NULL, VAR_JOB_GROUP_ID, NULL, NULL);


SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID_01, 'Talend call for Allocation Process Frame2 Post LRM to DIP RA', 1, NULL, 'api-dip:lrmframeids', 'api-diptalend:lrm_ra_allocation_frame2_processing', NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );
		
SET VAR_STEP = NEXT VALUE FOR SEQUENCE_BATCH_METADATA;

INSERT INTO STEP ( STEP_ID, STEP_TYPE_ID, JOB_ID, STEP_NAME, STEP_SEQUENCE ,IS_ACTIVE, PRE_STEP_PROCESSING,STEP_PROCESSING, POST_STEP_PROCESSING)
        VALUES ( VAR_STEP, 3, VAR_JOB_ID_01, 'Talend call for Allocation Process Frame1 Post LRM to DIP RA', 2, NULL, NULL, 'api-diptalend:lrm_ra_allocation_frame1_processing', NULL);
 
INSERT INTO DWH_LOAD_STEP ( STEP_ID, DWH_SCHEMA_NAME, DWH_TABLE_NAME, STAGING_SCHEMA_NAME, STAGING_TABLE_NAME, INGESTION_MODE, HISTORIZATION_TYPE, SPECIFIC_PROCESS ) 
        VALUES ( VAR_STEP, NULL, NULL, NULL, NULL, NULL, NULL, NULL );


EXCEPTION WHEN OTHERS THEN 
	L_ERR_CD := SUBSTR(SQLERRM, 8, 5); 
	L_ERR_MSG := SQLERRM; 
	RAISE EXCEPTION '% Error while executing SQL statement', L_ERR_MSG; 
	RETURN L_ERR_CD; 
 
END; 

END_PROC;